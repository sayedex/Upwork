{
	"id": "e5b19a2d93f40ca94e2f92b42b2b2745",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"encode.sol": {
				"content": "import \"./newone.sol\";\n\ncontract EncodeCall{\n\nfunction encodeCall(uint256 amount) external pure returns (bytes memory){\n    return abi.encodeCall(ERC721A.mintToken,(amount));\n}\n\n\n}\n"
			},
			"newone.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721A.sol';\n\n/**\n * @dev Interface of ERC721 token receiver.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @title ERC721A\n *\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n * Non-Fungible Token Standard, including the Metadata extension.\n * Optimized for lower gas during batch mints.\n *\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n * starting from `_startTokenId()`.\n *\n * Assumptions:\n *\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Bypass for a `--via-ir` bug (https://github.com/chiru-labs/ERC721A/pull/364).\n    struct TokenApprovalRef {\n        address value;\n    }\n    \nfunction mintToken(uint256 quantity) public payable  {\n        _safeMint(msg.sender, quantity);\n    }\n    // =============================================================\n    //                           CONSTANTS\n    // =============================================================\n\n    // Mask of an entry in packed address data.\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant _BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The `Transfer` event signature is given by:\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    // =============================================================\n    //                            STORAGE\n    // =============================================================\n\n    // The next token ID to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See {_packedOwnershipOf} implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // =============================================================\n    //                          CONSTRUCTOR\n    // =============================================================\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n    }\n\n    // =============================================================\n    //                   TOKEN COUNTING OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the starting token ID.\n     * To change the starting token ID, please override this function.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view virtual returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        // Counter underflow is impossible as _burnCounter cannot be incremented\n        // more than `_currentIndex - _startTokenId()` times.\n        unchecked {\n            return _currentIndex - _burnCounter - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view virtual returns (uint256) {\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\n        // and it is initialized to `_startTokenId()`.\n        unchecked {\n            return _currentIndex - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view virtual returns (uint256) {\n        return _burnCounter;\n    }\n\n    // =============================================================\n    //                    ADDRESS DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector);\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal virtual {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes\n        // of the XOR of all function selectors in the interface.\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    // =============================================================\n    //                     OWNERSHIPS OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal virtual {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {\n        if (_startTokenId() <= tokenId) {\n            packed = _packedOwnerships[tokenId];\n            // If not burned.\n            if (packed & _BITMASK_BURNED == 0) {\n                // If the data at the starting slot does not exist, start the scan.\n                if (packed == 0) {\n                    if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector);\n                    // Invariant:\n                    // There will always be an initialized ownership slot\n                    // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\n                    // before an unintialized ownership slot\n                    // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\n                    // Hence, `tokenId` will not underflow.\n                    //\n                    // We can directly compare the packed value.\n                    // If the address is zero, packed will be zero.\n                    for (;;) {\n                        unchecked {\n                            packed = _packedOwnerships[--tokenId];\n                        }\n                        if (packed == 0) continue;\n                        return packed;\n                    }\n                }\n                // Otherwise, the data exists and is not burned. We can skip the scan.\n                // This is possible because we have already achieved the target condition.\n                // This saves 2143 gas on transfers of initialized tokens.\n                return packed;\n            }\n        }\n        _revert(OwnerQueryForNonexistentToken.selector);\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & _BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    // =============================================================\n    //                      APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     */\n    function approve(address to, uint256 tokenId) public payable virtual override {\n        _approve(to, tokenId, true);\n    }\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector);\n\n        return _tokenApprovals[tokenId].value;\n    }\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted. See {_mint}.\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return\n            _startTokenId() <= tokenId &&\n            tokenId < _currentIndex && // If within bounds,\n            _packedOwnerships[tokenId] & _BITMASK_BURNED == 0; // and not burned.\n    }\n\n    /**\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\n     */\n    function _isSenderApprovedOrOwner(\n        address approvedAddress,\n        address owner,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\n            // `msgSender == owner || msgSender == approvedAddress`.\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedSlotAndAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\n        assembly {\n            approvedAddressSlot := tokenApproval.slot\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    // =============================================================\n    //                      TRANSFER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        // Mask `from` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        from = address(uint160(uint256(uint160(from)) & _BITMASK_ADDRESS));\n\n        if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector);\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n        assembly {\n            // Emit the `Transfer` event.\n            log4(\n                0, // Start of data (0, since no data).\n                0, // End of data (0, since no data).\n                _TRANSFER_EVENT_SIGNATURE, // Signature.\n                from, // `from`.\n                toMasked, // `to`.\n                tokenId // `tokenId`.\n            )\n        }\n        if (toMasked == 0) _revert(TransferToZeroAddress.selector);\n\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public payable virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token IDs\n     * are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token IDs\n     * have been transferred. This includes minting.\n     * And also called after one token has been burned.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * `from` - Previous owner of the given token ID.\n     * `to` - Target address that will receive the token.\n     * `tokenId` - Token ID to be transferred.\n     * `_data` - Optional data to send along with the call.\n     *\n     * Returns whether the call correctly returned the expected magic value.\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n            assembly {\n                revert(add(32, reason), mload(reason))\n            }\n        }\n    }\n\n    // =============================================================\n    //                        MINT OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n\n            if (toMasked == 0) _revert(MintToZeroAddress.selector);\n\n            uint256 end = startTokenId + quantity;\n            uint256 tokenId = startTokenId;\n\n            do {\n                assembly {\n                    // Emit the `Transfer` event.\n                    log4(\n                        0, // Start of data (0, since no data).\n                        0, // End of data (0, since no data).\n                        _TRANSFER_EVENT_SIGNATURE, // Signature.\n                        0, // `address(0)`.\n                        toMasked, // `to`.\n                        tokenId // `tokenId`.\n                    )\n                }\n                // The `!=` check ensures that large values of `quantity`\n                // that overflows uint256 will make the loop run out of gas.\n            } while (++tokenId != end);\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) _revert(MintToZeroAddress.selector);\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) _revert(MintERC2309QuantityExceedsLimit.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        _revert(TransferToNonERC721ReceiverImplementer.selector);\n                    }\n                } while (index < end);\n                // Reentrancy protection.\n                if (_currentIndex != end) _revert(bytes4(0));\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal virtual {\n        _safeMint(to, quantity, '');\n    }\n\n    // =============================================================\n    //                       APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_approve(to, tokenId, false)`.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _approve(to, tokenId, false);\n    }\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(\n        address to,\n        uint256 tokenId,\n        bool approvalCheck\n    ) internal virtual {\n        address owner = ownerOf(tokenId);\n\n        if (approvalCheck && _msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                _revert(ApprovalCallerNotOwnerNorApproved.selector);\n            }\n\n        _tokenApprovals[tokenId].value = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    // =============================================================\n    //                        BURN OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    // =============================================================\n    //                     EXTRA DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) _revert(OwnershipNotInitializedForExtraData.selector);\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\n    }\n\n    // =============================================================\n    //                       OTHER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a uint256 to its ASCII string decimal representation.\n     */\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\n            let m := add(mload(0x40), 0xa0)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, m)\n            // Assign the `str` to the end.\n            str := sub(m, 0x20)\n            // Zeroize the slot after the string.\n            mstore(str, 0)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := str\n\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // prettier-ignore\n            for { let temp := value } 1 {} {\n                str := sub(str, 1)\n                // Write the character to the pointer.\n                // The ASCII index of the '0' character is 48.\n                mstore8(str, add(48, mod(temp, 10)))\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n                // prettier-ignore\n                if iszero(temp) { break }\n            }\n\n            let length := sub(end, str)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            str := sub(str, 0x20)\n            // Store the length.\n            mstore(str, length)\n        }\n    }\n\n    /**\n     * @dev For more efficient reverts.\n     */\n    function _revert(bytes4 errorSelector) internal pure {\n        assembly {\n            mstore(0x00, errorSelector)\n            revert(0x00, 0x04)\n        }\n    }\n}"
			},
			"IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of ERC721A.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the\n     * ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    // =============================================================\n    //                            STRUCTS\n    // =============================================================\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Stores the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\n        uint24 extraData;\n    }\n\n    // =============================================================\n    //                         TOKEN COUNTERS\n    // =============================================================\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // =============================================================\n    //                            IERC721\n    // =============================================================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables\n     * (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\n     * checking first that contract recipients are aware of the ERC721 protocol\n     * to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move\n     * this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external payable;\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n     * whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external payable;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // =============================================================\n    //                           IERC2309\n    // =============================================================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n     * (inclusive) is transferred from `from` to `to`, as defined in the\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n     *\n     * See {_mintERC2309} for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 9900000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721A.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9900000},\"remappings\":[]},\"sources\":{\"IERC721A.sol\":{\"keccak256\":\"0xd369e9647904487d09c2aaa736baa5d7a4629d699e8d04cd6eb365b4921422ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d76a2749515b1cc5dfafcae19738f0360bb4cdbb480b755bce38a837ce0566d\",\"dweb:/ipfs/QmTfrYAMbdSsWq529WqTRun8LpxTP3kwoQzLU18ode4NbS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"encode.sol": {
				"EncodeCall": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "encodeCall",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"encode.sol\":24:180  contract EncodeCall{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"encode.sol\":24:180  contract EncodeCall{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd7e86d8e\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"encode.sol\":46:176  function encodeCall(uint256 amount) external pure returns (bytes memory){... */\n    tag_3:\n      tag_4\n      tag_5\n      calldatasize\n      0x04\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"encode.sol\":105:117  bytes memory */\n      0x60\n        /* \"encode.sol\":165:171  amount */\n      dup2\n        /* \"encode.sol\":131:173  abi.encodeCall(ERC721A.mintToken,(amount)) */\n      add(0x24, mload(0x40))\n      tag_11\n      swap2\n        /* \"#utility.yul\":955:980   */\n      dup2\n      mstore\n        /* \"#utility.yul\":943:945   */\n      0x20\n        /* \"#utility.yul\":928:946   */\n      add\n      swap1\n        /* \"#utility.yul\":809:986   */\n      jump\n        /* \"encode.sol\":131:173  abi.encodeCall(ERC721A.mintToken,(amount)) */\n    tag_11:\n      0x40\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc634d03200000000000000000000000000000000000000000000000000000000\n      or\n      swap1\n      mstore\n      swap3\n        /* \"encode.sol\":46:176  function encodeCall(uint256 amount) external pure returns (bytes memory){... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:194   */\n    tag_6:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_15\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_15:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":199:804   */\n    tag_9:\n        /* \"#utility.yul\":309:313   */\n      0x00\n        /* \"#utility.yul\":338:340   */\n      0x20\n        /* \"#utility.yul\":367:369   */\n      dup1\n        /* \"#utility.yul\":356:365   */\n      dup4\n        /* \"#utility.yul\":349:370   */\n      mstore\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":393:406   */\n      mload\n        /* \"#utility.yul\":442:448   */\n      dup1\n        /* \"#utility.yul\":437:439   */\n      dup3\n        /* \"#utility.yul\":426:435   */\n      dup6\n        /* \"#utility.yul\":422:440   */\n      add\n        /* \"#utility.yul\":415:449   */\n      mstore\n        /* \"#utility.yul\":467:468   */\n      0x00\n        /* \"#utility.yul\":477:617   */\n    tag_17:\n        /* \"#utility.yul\":491:497   */\n      dup2\n        /* \"#utility.yul\":488:489   */\n      dup2\n        /* \"#utility.yul\":485:498   */\n      lt\n        /* \"#utility.yul\":477:617   */\n      iszero\n      tag_19\n      jumpi\n        /* \"#utility.yul\":586:600   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":582:605   */\n      dup4\n      add\n        /* \"#utility.yul\":576:606   */\n      mload\n        /* \"#utility.yul\":552:569   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":571:573   */\n      0x40\n        /* \"#utility.yul\":548:574   */\n      add\n        /* \"#utility.yul\":541:607   */\n      mstore\n        /* \"#utility.yul\":506:516   */\n      dup3\n      add\n        /* \"#utility.yul\":477:617   */\n      jump(tag_17)\n    tag_19:\n        /* \"#utility.yul\":481:484   */\n      pop\n        /* \"#utility.yul\":666:667   */\n      0x00\n        /* \"#utility.yul\":661:663   */\n      0x40\n        /* \"#utility.yul\":652:658   */\n      dup3\n        /* \"#utility.yul\":641:650   */\n      dup7\n        /* \"#utility.yul\":637:659   */\n      add\n        /* \"#utility.yul\":633:664   */\n      add\n        /* \"#utility.yul\":626:668   */\n      mstore\n        /* \"#utility.yul\":795:797   */\n      0x40\n        /* \"#utility.yul\":725:791   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":720:722   */\n      0x1f\n        /* \"#utility.yul\":712:718   */\n      dup4\n        /* \"#utility.yul\":708:723   */\n      add\n        /* \"#utility.yul\":704:792   */\n      and\n        /* \"#utility.yul\":693:702   */\n      dup6\n        /* \"#utility.yul\":689:793   */\n      add\n        /* \"#utility.yul\":685:798   */\n      add\n        /* \"#utility.yul\":677:798   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":199:804   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202c5598c95fcb570f469d64dabd17c1c4c8b1f2dd9659ff56157ffe79c087428c64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101a5806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063d7e86d8e14610030575b600080fd5b61004361003e3660046100ea565b610059565b6040516100509190610103565b60405180910390f35b60608160405160240161006e91815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc634d0320000000000000000000000000000000000000000000000000000000017905292915050565b6000602082840312156100fc57600080fd5b5035919050565b600060208083528351808285015260005b8181101561013057858101830151858201604001528201610114565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116850101925050509291505056fea26469706673582212202c5598c95fcb570f469d64dabd17c1c4c8b1f2dd9659ff56157ffe79c087428c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD7E86D8E EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0xEA JUMP JUMPDEST PUSH2 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x6E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC634D03200000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x130 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x114 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SSTORE SWAP9 0xC9 0x5F 0xCB JUMPI 0xF CHAINID SWAP14 PUSH5 0xDABD17C1C4 0xC8 0xB1 CALLCODE 0xDD SWAP7 MSIZE SELFDESTRUCT JUMP ISZERO PUSH32 0xFE79C087428C64736F6C63430008110033000000000000000000000000000000 ",
							"sourceMap": "24:156:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@encodeCall_223": {
									"entryPoint": 89,
									"id": 223,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:988:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:3"
															},
															"nodeType": "YulIf",
															"src": "94:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:3",
														"type": ""
													}
												],
												"src": "14:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "318:486:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "328:12:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "338:2:3",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "332:2:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "356:9:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "367:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "349:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "349:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "349:21:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "379:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "399:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "393:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "393:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "383:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "426:9:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "437:2:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "422:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "422:18:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "442:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "415:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "415:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "415:34:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "458:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "467:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "462:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "527:90:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "556:9:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "567:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "552:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "552:17:3"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "571:2:3",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "548:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "548:26:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "590:6:3"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "598:1:3"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "586:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "586:14:3"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "602:2:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "582:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "582:23:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "576:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "576:30:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "541:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "541:66:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "541:66:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "488:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "491:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "485:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "499:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "501:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "510:1:3"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "513:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "506:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "506:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "501:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "481:3:3",
																"statements": []
															},
															"src": "477:140:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "641:9:3"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "652:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "637:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "637:22:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "661:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "633:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "633:31:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "666:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:42:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "626:42:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "677:121:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "693:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "712:6:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "720:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "708:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "708:15:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "725:66:3",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "704:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "704:88:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "689:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "689:104:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "795:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "685:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:113:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "677:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "287:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "298:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "309:4:3",
														"type": ""
													}
												],
												"src": "199:605:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "910:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "920:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "943:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "928:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "928:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "920:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "962:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "973:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "955:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "955:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "955:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "879:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "890:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "901:4:3",
														"type": ""
													}
												],
												"src": "809:177:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063d7e86d8e14610030575b600080fd5b61004361003e3660046100ea565b610059565b6040516100509190610103565b60405180910390f35b60608160405160240161006e91815260200190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc634d0320000000000000000000000000000000000000000000000000000000017905292915050565b6000602082840312156100fc57600080fd5b5035919050565b600060208083528351808285015260005b8181101561013057858101830151858201604001528201610114565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116850101925050509291505056fea26469706673582212202c5598c95fcb570f469d64dabd17c1c4c8b1f2dd9659ff56157ffe79c087428c64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD7E86D8E EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0xEA JUMP JUMPDEST PUSH2 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x6E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC634D03200000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x130 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x114 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SSTORE SWAP9 0xC9 0x5F 0xCB JUMPI 0xF CHAINID SWAP14 PUSH5 0xDABD17C1C4 0xC8 0xB1 CALLCODE 0xDD SWAP7 MSIZE SELFDESTRUCT JUMP ISZERO PUSH32 0xFE79C087428C64736F6C63430008110033000000000000000000000000000000 ",
							"sourceMap": "24:156:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46:130;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;105:12;165:6;131:42;;;;;;955:25:3;;943:2;928:18;;809:177;131:42:1;;;;;;;;;;;;;;;;;;;;;;;;;;46:130;-1:-1:-1;;46:130:1:o;14:180:3:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:3;;14:180;-1:-1:-1;14:180:3:o;199:605::-;309:4;338:2;367;356:9;349:21;399:6;393:13;442:6;437:2;426:9;422:18;415:34;467:1;477:140;491:6;488:1;485:13;477:140;;;586:14;;;582:23;;576:30;552:17;;;571:2;548:26;541:66;506:10;;477:140;;;481:3;666:1;661:2;652:6;641:9;637:22;633:31;626:42;795:2;725:66;720:2;712:6;708:15;704:88;693:9;689:104;685:113;677:121;;;;199:605;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "84200",
								"executionCost": "135",
								"totalCost": "84335"
							},
							"external": {
								"encodeCall(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24,
									"end": 180,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 24,
									"end": 180,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 24,
									"end": 180,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 24,
									"end": 180,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 24,
									"end": 180,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 24,
									"end": 180,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 24,
									"end": 180,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 24,
									"end": 180,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 24,
									"end": 180,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 180,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 24,
									"end": 180,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 24,
									"end": 180,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 24,
									"end": 180,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 24,
									"end": 180,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 24,
									"end": 180,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24,
									"end": 180,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 24,
									"end": 180,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24,
									"end": 180,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 180,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 24,
									"end": 180,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 180,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c5598c95fcb570f469d64dabd17c1c4c8b1f2dd9659ff56157ffe79c087428c64736f6c63430008110033",
									".code": [
										{
											"begin": 24,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 24,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24,
											"end": 180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24,
											"end": 180,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 24,
											"end": 180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24,
											"end": 180,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 24,
											"end": 180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24,
											"end": 180,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 24,
											"end": 180,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 24,
											"end": 180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24,
											"end": 180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 24,
											"end": 180,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 24,
											"end": 180,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 24,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 24,
											"end": 180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 180,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 24,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 24,
											"end": 180,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 24,
											"end": 180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "D7E86D8E"
										},
										{
											"begin": 24,
											"end": 180,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 24,
											"end": 180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 24,
											"end": 180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24,
											"end": 180,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 24,
											"end": 180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24,
											"end": 180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24,
											"end": 180,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 46,
											"end": 176,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 46,
											"end": 176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 46,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 46,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 46,
											"end": 176,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 46,
											"end": 176,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 46,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 46,
											"end": 176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 46,
											"end": 176,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 46,
											"end": 176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 46,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 46,
											"end": 176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 46,
											"end": 176,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 46,
											"end": 176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 46,
											"end": 176,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 46,
											"end": 176,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 46,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 46,
											"end": 176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 46,
											"end": 176,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 46,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 46,
											"end": 176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 46,
											"end": 176,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 46,
											"end": 176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 46,
											"end": 176,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 46,
											"end": 176,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 46,
											"end": 176,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 46,
											"end": 176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 46,
											"end": 176,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 46,
											"end": 176,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 46,
											"end": 176,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 46,
											"end": 176,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 46,
											"end": 176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 105,
											"end": 117,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 165,
											"end": 171,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 173,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 131,
											"end": 173,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 131,
											"end": 173,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 131,
											"end": 173,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 131,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 131,
											"end": 173,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 955,
											"end": 980,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 955,
											"end": 980,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 943,
											"end": 945,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 928,
											"end": 946,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 928,
											"end": 946,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 809,
											"end": 986,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 131,
											"end": 173,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 131,
											"end": 173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 173,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 131,
											"end": 173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 173,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 131,
											"end": 173,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 131,
											"end": 173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 173,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 131,
											"end": 173,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 131,
											"end": 173,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 131,
											"end": 173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 131,
											"end": 173,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 131,
											"end": 173,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 131,
											"end": 173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 173,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 131,
											"end": 173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 173,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 131,
											"end": 173,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 131,
											"end": 173,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 131,
											"end": 173,
											"name": "PUSH",
											"source": 1,
											"value": "C634D03200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 131,
											"end": 173,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 131,
											"end": 173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 131,
											"end": 173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 131,
											"end": 173,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 46,
											"end": 176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 46,
											"end": 176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 199,
											"end": 804,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 199,
											"end": 804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 309,
											"end": 313,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 340,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 367,
											"end": 369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 356,
											"end": 365,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 349,
											"end": 370,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 393,
											"end": 406,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 442,
											"end": 448,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 437,
											"end": 439,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 426,
											"end": 435,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 422,
											"end": 440,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 415,
											"end": 449,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 467,
											"end": 468,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 477,
											"end": 617,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 477,
											"end": 617,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 491,
											"end": 497,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 488,
											"end": 489,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 485,
											"end": 498,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 477,
											"end": 617,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 477,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 477,
											"end": 617,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 586,
											"end": 600,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 586,
											"end": 600,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 586,
											"end": 600,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 582,
											"end": 605,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 582,
											"end": 605,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 576,
											"end": 606,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 552,
											"end": 569,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 552,
											"end": 569,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 552,
											"end": 569,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 571,
											"end": 573,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 548,
											"end": 574,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 541,
											"end": 607,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 506,
											"end": 516,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 506,
											"end": 516,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 477,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 477,
											"end": 617,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 477,
											"end": 617,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 477,
											"end": 617,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 481,
											"end": 484,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 666,
											"end": 667,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 663,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 652,
											"end": 658,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 641,
											"end": 650,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 637,
											"end": 659,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 633,
											"end": 664,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 626,
											"end": 668,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 795,
											"end": 797,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 725,
											"end": 791,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 720,
											"end": 722,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 712,
											"end": 718,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 708,
											"end": 723,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 704,
											"end": 792,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 693,
											"end": 702,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 689,
											"end": 793,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 685,
											"end": 798,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 677,
											"end": 798,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 677,
											"end": 798,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 677,
											"end": 798,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 677,
											"end": 798,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 199,
											"end": 804,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 199,
											"end": 804,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 199,
											"end": 804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 199,
											"end": 804,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 199,
											"end": 804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"IERC721A.sol",
								"encode.sol",
								"newone.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"encodeCall(uint256)": "d7e86d8e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"encodeCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"encode.sol\":\"EncodeCall\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9900000},\"remappings\":[]},\"sources\":{\"IERC721A.sol\":{\"keccak256\":\"0xd369e9647904487d09c2aaa736baa5d7a4629d699e8d04cd6eb365b4921422ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d76a2749515b1cc5dfafcae19738f0360bb4cdbb480b755bce38a837ce0566d\",\"dweb:/ipfs/QmTfrYAMbdSsWq529WqTRun8LpxTP3kwoQzLU18ode4NbS\"]},\"encode.sol\":{\"keccak256\":\"0x7032375760e226179156142761d4c04873047e27e6d717181d1abcbb62185b06\",\"urls\":[\"bzz-raw://28255a1fcf13d1bc0ad785269945ebfdc2ca15a19531ea1e9efae617786bf922\",\"dweb:/ipfs/Qmaj8WtgLhhE1ChJdj9gQDcGC5JkMbA7HXzAh4LT6kQ68Q\"]},\"newone.sol\":{\"keccak256\":\"0x23187630666a76311fdafa516fe06602cc9ab3654ebf68299cd4038f6560baac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://477f99a2090b6b209753903efc028c62c34e01ff6f830304582793e8ff86faf6\",\"dweb:/ipfs/QmPhTaxvvyYwGn9WZywMKdVAznHZKUuiXaZbkULgEkEGbg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"newone.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								}
							],
							"name": "mintToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"newone.sol\":895:42959  contract ERC721A is IERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"newone.sol\":5052:5206  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"newone.sol\":5118:5123  _name */\n  0x02\n    /* \"newone.sol\":5118:5131  _name = name_ */\n  tag_6\n    /* \"newone.sol\":5126:5131  name_ */\n  dup4\n    /* \"newone.sol\":5118:5123  _name */\n  dup3\n    /* \"newone.sol\":5118:5131  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"newone.sol\":5141:5148  _symbol */\n  0x03\n    /* \"newone.sol\":5141:5158  _symbol = symbol_ */\n  tag_8\n    /* \"newone.sol\":5151:5158  symbol_ */\n  dup3\n    /* \"newone.sol\":5141:5148  _symbol */\n  dup3\n    /* \"newone.sol\":5141:5158  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n    /* \"newone.sol\":5588:5595  uint256 */\n  0x00\n    /* \"newone.sol\":5168:5199  _currentIndex = _startTokenId() */\n  dup1\n  sstore\n  pop\n    /* \"newone.sol\":895:42959  contract ERC721A is IERC721A {... */\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_13:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_14:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_22:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_24\n  tag_13\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_26\n  tag_13\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_27:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_28:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_28)\ntag_30:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_32:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_33:\n    /* \"#utility.yul\":1309:1370   */\n  tag_34\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_14\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_35:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_36\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_14\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_15:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_38:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_17:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_43\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_43:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_44:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_44)\ntag_46:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_42:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_50\n  tag_13\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2994:3091   */\n  tag_51\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_52\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_15\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_17\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_54\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_55\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_55:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_46)\n    /* \"#utility.yul\":3222:3885   */\ntag_54:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_58:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_58)\ntag_60:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_61:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_19:\n    /* \"newone.sol\":895:42959  contract ERC721A is IERC721A {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"newone.sol\":895:42959  contract ERC721A is IERC721A {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc634d032\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x095ea7b3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"newone.sol\":9270:9900  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":611:625   */\n      swap1\n      iszero\n        /* \"#utility.yul\":604:626   */\n      iszero\n        /* \"#utility.yul\":586:627   */\n      dup2\n      mstore\n        /* \"#utility.yul\":574:576   */\n      0x20\n        /* \"#utility.yul\":559:577   */\n      add\n        /* \"newone.sol\":9270:9900  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"newone.sol\":10154:10252  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n        /* \"newone.sol\":16420:16643  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n        /* \"#utility.yul\":1814:1856   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1802:1857   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1784:1858   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1772:1774   */\n      0x20\n        /* \"#utility.yul\":1757:1775   */\n      add\n        /* \"newone.sol\":16420:16643  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_25\n        /* \"#utility.yul\":1638:1864   */\n      jump\n        /* \"newone.sol\":16148:16270  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_5:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"newone.sol\":6000:6317  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n        /* \"newone.sol\":6270:6282  _burnCounter */\n      sload(0x01)\n        /* \"newone.sol\":6061:6068  uint256 */\n      0x00\n        /* \"newone.sol\":6254:6267  _currentIndex */\n      sload\n        /* \"newone.sol\":6254:6282  _currentIndex - _burnCounter */\n      sub\n        /* \"newone.sol\":6000:6317  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_44:\n      mload(0x40)\n        /* \"#utility.yul\":2475:2500   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2463:2465   */\n      0x20\n        /* \"#utility.yul\":2448:2466   */\n      add\n        /* \"newone.sol\":6000:6317  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_25\n        /* \"#utility.yul\":2329:2506   */\n      jump\n        /* \"newone.sol\":19972:23419  function transferFrom(... */\n    tag_7:\n      tag_39\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"newone.sol\":23510:23697  function safeTransferFrom(... */\n    tag_8:\n      tag_39\n      tag_53\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n        /* \"newone.sol\":11515:11665  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_33\n      tag_57\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n        /* \"newone.sol\":7151:7390  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_44\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n        /* \"newone.sol\":10323:10425  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_28\n      tag_68\n      jump\t// in\n        /* \"newone.sol\":16970:17201  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_39\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n        /* \"newone.sol\":24278:24683  function safeTransferFrom(... */\n    tag_13:\n      tag_39\n      tag_76\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n        /* \"newone.sol\":1075:1176  function mintToken(uint256 quantity) public payable  {... */\n    tag_14:\n      tag_39\n      tag_80\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"newone.sol\":10526:10848  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_28\n      tag_84\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n        /* \"newone.sol\":17351:17513  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_21\n      tag_89\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"newone.sol\":17471:17496  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n        /* \"newone.sol\":17448:17452  bool */\n      0x00\n        /* \"newone.sol\":17471:17496  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"newone.sol\":17471:17489  _operatorApprovals */\n      0x07\n        /* \"newone.sol\":17471:17496  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"newone.sol\":17471:17506  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"newone.sol\":17351:17513  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"newone.sol\":9270:9900  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_24:\n        /* \"newone.sol\":9355:9359  bool */\n      0x00\n        /* \"newone.sol\":9673:9698  interfaceId == 0x01ffc9a7 */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      eq\n      dup1\n        /* \"newone.sol\":9673:9774  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      tag_94\n      jumpi\n      pop\n        /* \"newone.sol\":9749:9774  interfaceId == 0x80ac58cd */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      eq\n        /* \"newone.sol\":9673:9774  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_94:\n        /* \"newone.sol\":9673:9850  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_95\n      jumpi\n      pop\n        /* \"newone.sol\":9825:9850  interfaceId == 0x5b5e139f */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      eq\n        /* \"newone.sol\":9673:9850  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_95:\n        /* \"newone.sol\":9654:9850  return... */\n      swap3\n        /* \"newone.sol\":9270:9900  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"newone.sol\":10154:10252  function name() public view virtual override returns (string memory) {... */\n    tag_29:\n        /* \"newone.sol\":10208:10221  string memory */\n      0x60\n        /* \"newone.sol\":10240:10245  _name */\n      0x02\n        /* \"newone.sol\":10233:10245  return _name */\n      dup1\n      sload\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_99\n      swap1\n      tag_98\n      jump\t// in\n    tag_99:\n      dup1\n      iszero\n      tag_100\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_101\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_100)\n    tag_101:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_102:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_102\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"newone.sol\":10154:10252  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"newone.sol\":16420:16643  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_36:\n        /* \"newone.sol\":16496:16503  address */\n      0x00\n        /* \"newone.sol\":16520:16536  _exists(tokenId) */\n      tag_104\n        /* \"newone.sol\":16528:16535  tokenId */\n      dup3\n        /* \"newone.sol\":16520:16527  _exists */\n      tag_105\n        /* \"newone.sol\":16520:16536  _exists(tokenId) */\n      jump\t// in\n    tag_104:\n        /* \"newone.sol\":16515:16588  if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_107\n      jumpi\n        /* \"newone.sol\":16538:16588  _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_107\n        /* \"newone.sol\":16546:16587  ApprovalQueryForNonexistentToken.selector */\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n        /* \"newone.sol\":16538:16545  _revert */\n      tag_108\n        /* \"newone.sol\":16538:16588  _revert(ApprovalQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_107:\n      pop\n        /* \"newone.sol\":16606:16630  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"newone.sol\":16606:16621  _tokenApprovals */\n      0x06\n        /* \"newone.sol\":16606:16630  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"newone.sol\":16606:16636  _tokenApprovals[tokenId].value */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n        /* \"newone.sol\":16420:16643  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"newone.sol\":16148:16270  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_42:\n        /* \"newone.sol\":16236:16263  _approve(to, tokenId, true) */\n      tag_110\n        /* \"newone.sol\":16245:16247  to */\n      dup3\n        /* \"newone.sol\":16249:16256  tokenId */\n      dup3\n        /* \"newone.sol\":16258:16262  true */\n      0x01\n        /* \"newone.sol\":16236:16244  _approve */\n      tag_111\n        /* \"newone.sol\":16236:16263  _approve(to, tokenId, true) */\n      jump\t// in\n    tag_110:\n        /* \"newone.sol\":16148:16270  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"newone.sol\":19972:23419  function transferFrom(... */\n    tag_51:\n        /* \"newone.sol\":20109:20136  uint256 prevOwnershipPacked */\n      0x00\n        /* \"newone.sol\":20139:20166  _packedOwnershipOf(tokenId) */\n      tag_116\n        /* \"newone.sol\":20158:20165  tokenId */\n      dup3\n        /* \"newone.sol\":20139:20157  _packedOwnershipOf */\n      tag_117\n        /* \"newone.sol\":20139:20166  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_116:\n        /* \"newone.sol\":2891:2905  (1 << 160) - 1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"newone.sol\":20291:20313  uint256(uint160(from)) */\n      swap5\n      dup6\n      and\n      swap5\n        /* \"newone.sol\":20109:20166  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      swap2\n      pop\n        /* \"newone.sol\":20349:20394  address(uint160(prevOwnershipPacked)) != from */\n      dup2\n      and\n      dup5\n      eq\n        /* \"newone.sol\":20345:20440  if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector) */\n      tag_119\n      jumpi\n        /* \"newone.sol\":20396:20440  _revert(TransferFromIncorrectOwner.selector) */\n      tag_119\n        /* \"newone.sol\":20404:20439  TransferFromIncorrectOwner.selector */\n      0xa114810000000000000000000000000000000000000000000000000000000000\n        /* \"newone.sol\":20396:20403  _revert */\n      tag_108\n        /* \"newone.sol\":20396:20440  _revert(TransferFromIncorrectOwner.selector) */\n      jump\t// in\n    tag_119:\n        /* \"newone.sol\":20452:20479  uint256 approvedAddressSlot */\n      0x00\n        /* \"newone.sol\":19105:19129  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"newone.sol\":19105:19120  _tokenApprovals */\n      0x06\n        /* \"newone.sol\":19105:19129  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"newone.sol\":19329:19355  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"newone.sol\":40913:40923  msg.sender */\n      caller\n        /* \"newone.sol\":18742:18772  eq(msgSender, approvedAddress) */\n      dup1\n      dup3\n      eq\n        /* \"newone.sol\":18450:18466  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"newone.sol\":18439:18467  and(owner, _BITMASK_ADDRESS) */\n      dup9\n      and\n        /* \"newone.sol\":18720:18740  eq(msgSender, owner) */\n      swap1\n      swap2\n      eq\n        /* \"newone.sol\":18717:18773  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"newone.sol\":20635:20823  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_130\n      jumpi\n        /* \"newone.sol\":20727:20770  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_127\n        /* \"newone.sol\":20744:20748  from */\n      dup7\n        /* \"newone.sol\":40913:40923  msg.sender */\n      caller\n        /* \"newone.sol\":17351:17513  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_89\n      jump\t// in\n        /* \"newone.sol\":20727:20770  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_127:\n        /* \"newone.sol\":20722:20823  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_130\n      jumpi\n        /* \"newone.sol\":20772:20823  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_130\n        /* \"newone.sol\":20780:20822  TransferCallerNotOwnerNorApproved.selector */\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n        /* \"newone.sol\":20772:20779  _revert */\n      tag_108\n        /* \"newone.sol\":20772:20823  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_130:\n        /* \"newone.sol\":20966:20981  approvedAddress */\n      dup1\n        /* \"newone.sol\":20963:21120  if approvedAddress {... */\n      iszero\n      tag_133\n      jumpi\n        /* \"newone.sol\":21104:21105  0 */\n      0x00\n        /* \"newone.sol\":21083:21102  approvedAddressSlot */\n      dup3\n        /* \"newone.sol\":21076:21106  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"newone.sol\":20963:21120  if approvedAddress {... */\n    tag_133:\n        /* \"newone.sol\":21492:21516  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"newone.sol\":21492:21510  _packedAddressData */\n      0x05\n        /* \"newone.sol\":21492:21516  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"newone.sol\":21490:21516  --_packedAddressData[from] */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      add\n      swap1\n      sstore\n        /* \"newone.sol\":21560:21582  _packedAddressData[to] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"newone.sol\":21558:21582  ++_packedAddressData[to] */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"newone.sol\":15276:15287  timestamp() */\n      timestamp\n        /* \"newone.sol\":15251:15274  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"newone.sol\":15247:15288  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"newone.sol\":15234:15297  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"newone.sol\":2498:2506  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"newone.sol\":15234:15297  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"newone.sol\":21846:21872  _packedOwnerships[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"newone.sol\":21846:21863  _packedOwnerships */\n      0x04\n        /* \"newone.sol\":21846:21872  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"newone.sol\":21846:22018  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"newone.sol\":2498:2506  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"newone.sol\":22135:22182  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      dup5\n      and\n        /* \"newone.sol\":22135:22187  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      swap1\n      sub\n        /* \"newone.sol\":22131:22748  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_138\n      jumpi\n        /* \"newone.sol\":22239:22240  1 */\n      0x01\n        /* \"newone.sol\":22229:22240  tokenId + 1 */\n      dup5\n      add\n        /* \"newone.sol\":22207:22226  uint256 nextTokenId */\n      0x00\n        /* \"newone.sol\":22360:22390  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"newone.sol\":22360:22377  _packedOwnerships */\n      0x04\n        /* \"newone.sol\":22360:22390  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"newone.sol\":22360:22395  _packedOwnerships[nextTokenId] == 0 */\n      swap1\n      sub\n        /* \"newone.sol\":22356:22734  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_140\n      jumpi\n        /* \"newone.sol\":22496:22509  _currentIndex */\n      sload(0x00)\n        /* \"newone.sol\":22481:22492  nextTokenId */\n      dup2\n        /* \"newone.sol\":22481:22509  nextTokenId != _currentIndex */\n      eq\n        /* \"newone.sol\":22477:22716  if (nextTokenId != _currentIndex) {... */\n      tag_140\n      jumpi\n        /* \"newone.sol\":22641:22671  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"newone.sol\":22641:22658  _packedOwnerships */\n      0x04\n        /* \"newone.sol\":22641:22671  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"newone.sol\":22641:22693  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup5\n      swap1\n      sstore\n        /* \"newone.sol\":22477:22716  if (nextTokenId != _currentIndex) {... */\n    tag_140:\n        /* \"newone.sol\":22189:22748  {... */\n      pop\n        /* \"newone.sol\":22131:22748  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_138:\n        /* \"newone.sol\":2891:2905  (1 << 160) - 1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"newone.sol\":22876:22896  uint256(uint160(to)) */\n      dup6\n      and\n        /* \"newone.sol\":23247:23254  tokenId */\n      dup5\n        /* \"newone.sol\":22876:22896  uint256(uint160(to)) */\n      dup2\n        /* \"newone.sol\":23179:23183  from */\n      dup9\n        /* \"newone.sol\":23122:23147  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"newone.sol\":22857:22873  uint256 toMasked */\n      0x00\n      dup1\n        /* \"newone.sol\":22990:23282  log4(... */\n      log4\n        /* \"newone.sol\":23305:23313  toMasked */\n      dup1\n        /* \"newone.sol\":23317:23318  0 */\n      0x00\n        /* \"newone.sol\":23305:23318  toMasked == 0 */\n      sub\n        /* \"newone.sol\":23301:23359  if (toMasked == 0) _revert(TransferToZeroAddress.selector) */\n      tag_142\n      jumpi\n        /* \"newone.sol\":23320:23359  _revert(TransferToZeroAddress.selector) */\n      tag_142\n        /* \"newone.sol\":23328:23358  TransferToZeroAddress.selector */\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n        /* \"newone.sol\":23320:23327  _revert */\n      tag_108\n        /* \"newone.sol\":23320:23359  _revert(TransferToZeroAddress.selector) */\n      jump\t// in\n    tag_142:\n        /* \"newone.sol\":20099:23419  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"newone.sol\":19972:23419  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"newone.sol\":23510:23697  function safeTransferFrom(... */\n    tag_54:\n        /* \"newone.sol\":23651:23690  safeTransferFrom(from, to, tokenId, '') */\n      tag_146\n        /* \"newone.sol\":23668:23672  from */\n      dup4\n        /* \"newone.sol\":23674:23676  to */\n      dup4\n        /* \"newone.sol\":23678:23685  tokenId */\n      dup4\n        /* \"newone.sol\":23651:23690  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"newone.sol\":23651:23667  safeTransferFrom */\n      tag_78\n        /* \"newone.sol\":23651:23690  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_146:\n        /* \"newone.sol\":23510:23697  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"newone.sol\":11515:11665  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_58:\n        /* \"newone.sol\":11587:11594  address */\n      0x00\n        /* \"newone.sol\":11629:11656  _packedOwnershipOf(tokenId) */\n      tag_95\n        /* \"newone.sol\":11648:11655  tokenId */\n      dup3\n        /* \"newone.sol\":11629:11647  _packedOwnershipOf */\n      tag_117\n        /* \"newone.sol\":11629:11656  _packedOwnershipOf(tokenId) */\n      jump\t// in\n        /* \"newone.sol\":7151:7390  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_64:\n        /* \"newone.sol\":7223:7230  uint256 */\n      0x00\n        /* \"newone.sol\":7246:7265  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"newone.sol\":7242:7311  if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector) */\n      tag_151\n      jumpi\n        /* \"newone.sol\":7267:7311  _revert(BalanceQueryForZeroAddress.selector) */\n      tag_151\n        /* \"newone.sol\":7275:7310  BalanceQueryForZeroAddress.selector */\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n        /* \"newone.sol\":7267:7274  _revert */\n      tag_108\n        /* \"newone.sol\":7267:7311  _revert(BalanceQueryForZeroAddress.selector) */\n      jump\t// in\n    tag_151:\n      pop\n        /* \"newone.sol\":7328:7353  _packedAddressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"newone.sol\":7328:7346  _packedAddressData */\n      0x05\n        /* \"newone.sol\":7328:7353  _packedAddressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"newone.sol\":1466:1479  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"newone.sol\":7328:7383  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n      swap1\n        /* \"newone.sol\":7151:7390  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"newone.sol\":10323:10425  function symbol() public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \"newone.sol\":10379:10392  string memory */\n      0x60\n        /* \"newone.sol\":10411:10418  _symbol */\n      0x03\n        /* \"newone.sol\":10404:10418  return _symbol */\n      dup1\n      sload\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n        /* \"newone.sol\":16970:17201  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_74:\n        /* \"newone.sol\":40913:40923  msg.sender */\n      caller\n        /* \"newone.sol\":17064:17103  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"newone.sol\":17064:17082  _operatorApprovals */\n      0x07\n        /* \"newone.sol\":17064:17103  _operatorApprovals[_msgSenderERC721A()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"newone.sol\":17064:17113  _operatorApprovals[_msgSenderERC721A()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"newone.sol\":17064:17124  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"newone.sol\":17139:17194  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":586:627   */\n      swap1\n      dup2\n      mstore\n        /* \"newone.sol\":17064:17113  _operatorApprovals[_msgSenderERC721A()][operator] */\n      swap2\n      swap3\n        /* \"newone.sol\":40913:40923  msg.sender */\n      swap2\n        /* \"newone.sol\":17139:17194  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":559:577   */\n      add\n        /* \"newone.sol\":17139:17194  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"newone.sol\":16970:17201  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"newone.sol\":24278:24683  function safeTransferFrom(... */\n    tag_78:\n        /* \"newone.sol\":24447:24478  transferFrom(from, to, tokenId) */\n      tag_163\n        /* \"newone.sol\":24460:24464  from */\n      dup5\n        /* \"newone.sol\":24466:24468  to */\n      dup5\n        /* \"newone.sol\":24470:24477  tokenId */\n      dup5\n        /* \"newone.sol\":24447:24459  transferFrom */\n      tag_51\n        /* \"newone.sol\":24447:24478  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_163:\n        /* \"newone.sol\":24492:24506  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      extcodesize\n        /* \"newone.sol\":24492:24511  to.code.length != 0 */\n      iszero\n        /* \"newone.sol\":24488:24677  if (to.code.length != 0)... */\n      tag_168\n      jumpi\n        /* \"newone.sol\":24530:24586  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_165\n        /* \"newone.sol\":24561:24565  from */\n      dup5\n        /* \"newone.sol\":24567:24569  to */\n      dup5\n        /* \"newone.sol\":24571:24578  tokenId */\n      dup5\n        /* \"newone.sol\":24580:24585  _data */\n      dup5\n        /* \"newone.sol\":24530:24560  _checkContractOnERC721Received */\n      tag_166\n        /* \"newone.sol\":24530:24586  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_165:\n        /* \"newone.sol\":24525:24677  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_168\n      jumpi\n        /* \"newone.sol\":24606:24662  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_168\n        /* \"newone.sol\":24614:24661  TransferToNonERC721ReceiverImplementer.selector */\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n        /* \"newone.sol\":24606:24613  _revert */\n      tag_108\n        /* \"newone.sol\":24606:24662  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_168:\n        /* \"newone.sol\":24278:24683  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"newone.sol\":1075:1176  function mintToken(uint256 quantity) public payable  {... */\n    tag_81:\n        /* \"newone.sol\":1138:1169  _safeMint(msg.sender, quantity) */\n      tag_170\n        /* \"newone.sol\":1148:1158  msg.sender */\n      caller\n        /* \"newone.sol\":1160:1168  quantity */\n      dup3\n        /* \"newone.sol\":1138:1147  _safeMint */\n      tag_171\n        /* \"newone.sol\":1138:1169  _safeMint(msg.sender, quantity) */\n      jump\t// in\n    tag_170:\n        /* \"newone.sol\":1075:1176  function mintToken(uint256 quantity) public payable  {... */\n      pop\n      jump\t// out\n        /* \"newone.sol\":10526:10848  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_85:\n        /* \"newone.sol\":10599:10612  string memory */\n      0x60\n        /* \"newone.sol\":10629:10645  _exists(tokenId) */\n      tag_173\n        /* \"newone.sol\":10637:10644  tokenId */\n      dup3\n        /* \"newone.sol\":10629:10636  _exists */\n      tag_105\n        /* \"newone.sol\":10629:10645  _exists(tokenId) */\n      jump\t// in\n    tag_173:\n        /* \"newone.sol\":10624:10692  if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector) */\n      tag_175\n      jumpi\n        /* \"newone.sol\":10647:10692  _revert(URIQueryForNonexistentToken.selector) */\n      tag_175\n        /* \"newone.sol\":10655:10691  URIQueryForNonexistentToken.selector */\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n        /* \"newone.sol\":10647:10654  _revert */\n      tag_108\n        /* \"newone.sol\":10647:10692  _revert(URIQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_175:\n        /* \"newone.sol\":10703:10724  string memory baseURI */\n      0x00\n        /* \"newone.sol\":10727:10737  _baseURI() */\n      tag_176\n        /* \"newone.sol\":11169:11178  return '' */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"newone.sol\":11093:11185  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"newone.sol\":10727:10737  _baseURI() */\n    tag_176:\n        /* \"newone.sol\":10703:10737  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"newone.sol\":10760:10767  baseURI */\n      dup1\n        /* \"newone.sol\":10754:10775  bytes(baseURI).length */\n      mload\n        /* \"newone.sol\":10779:10780  0 */\n      0x00\n        /* \"newone.sol\":10754:10780  bytes(baseURI).length != 0 */\n      sub\n        /* \"newone.sol\":10754:10841  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_178\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_179)\n    tag_178:\n        /* \"newone.sol\":10807:10814  baseURI */\n      dup1\n        /* \"newone.sol\":10816:10834  _toString(tokenId) */\n      tag_180\n        /* \"newone.sol\":10826:10833  tokenId */\n      dup5\n        /* \"newone.sol\":10816:10825  _toString */\n      tag_181\n        /* \"newone.sol\":10816:10834  _toString(tokenId) */\n      jump\t// in\n    tag_180:\n        /* \"newone.sol\":10790:10835  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_182\n      swap3\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"newone.sol\":10754:10841  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_179:\n        /* \"newone.sol\":10747:10841  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap4\n        /* \"newone.sol\":10526:10848  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"newone.sol\":17762:18039  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_105:\n        /* \"newone.sol\":17827:17831  bool */\n      0x00\n        /* \"newone.sol\":17914:17927  _currentIndex */\n      dup1\n      sload\n        /* \"newone.sol\":17904:17911  tokenId */\n      dup3\n        /* \"newone.sol\":17904:17927  tokenId < _currentIndex */\n      lt\n        /* \"newone.sol\":17862:18013  _startTokenId() <= tokenId &&... */\n      dup1\n      iszero\n      tag_95\n      jumpi\n      pop\n      pop\n        /* \"newone.sol\":17964:17990  _packedOwnerships[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"newone.sol\":17964:17981  _packedOwnerships */\n      0x04\n        /* \"newone.sol\":17964:17990  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"newone.sol\":2224:2232  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"newone.sol\":17964:18008  _packedOwnerships[tokenId] & _BITMASK_BURNED */\n      and\n        /* \"newone.sol\":17964:18013  _packedOwnerships[tokenId] & _BITMASK_BURNED == 0 */\n      iszero\n      swap1\n        /* \"newone.sol\":17762:18039  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      jump\t// out\n        /* \"newone.sol\":42797:42957  function _revert(bytes4 errorSelector) internal pure {... */\n    tag_108:\n        /* \"newone.sol\":42896:42909  errorSelector */\n      dup1\n        /* \"newone.sol\":42890:42894  0x00 */\n      0x00\n        /* \"newone.sol\":42883:42910  mstore(0x00, errorSelector) */\n      mstore\n        /* \"newone.sol\":42936:42940  0x04 */\n      0x04\n        /* \"newone.sol\":42930:42934  0x00 */\n      0x00\n        /* \"newone.sol\":42923:42941  revert(0x00, 0x04) */\n      revert\n        /* \"newone.sol\":34445:34905  function _approve(... */\n    tag_111:\n        /* \"newone.sol\":34569:34582  address owner */\n      0x00\n        /* \"newone.sol\":34585:34601  ownerOf(tokenId) */\n      tag_191\n        /* \"newone.sol\":34593:34600  tokenId */\n      dup4\n        /* \"newone.sol\":34585:34592  ownerOf */\n      tag_58\n        /* \"newone.sol\":34585:34601  ownerOf(tokenId) */\n      jump\t// in\n    tag_191:\n        /* \"newone.sol\":34569:34601  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"newone.sol\":34616:34629  approvalCheck */\n      dup2\n        /* \"newone.sol\":34616:34661  approvalCheck && _msgSenderERC721A() != owner */\n      dup1\n      iszero\n      tag_192\n      jumpi\n      pop\n        /* \"newone.sol\":40913:40923  msg.sender */\n      caller\n        /* \"newone.sol\":34633:34661  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      eq\n      iszero\n        /* \"newone.sol\":34616:34661  approvalCheck && _msgSenderERC721A() != owner */\n    tag_192:\n        /* \"newone.sol\":34612:34810  if (approvalCheck && _msgSenderERC721A() != owner)... */\n      iszero\n      tag_198\n      jumpi\n        /* \"newone.sol\":34680:34724  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_195\n        /* \"newone.sol\":34697:34702  owner */\n      dup2\n        /* \"newone.sol\":40913:40923  msg.sender */\n      caller\n        /* \"newone.sol\":17351:17513  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_89\n      jump\t// in\n        /* \"newone.sol\":34680:34724  isApprovedForAll(owner, _msgSenderERC721A()) */\n    tag_195:\n        /* \"newone.sol\":34675:34810  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_198\n      jumpi\n        /* \"newone.sol\":34744:34795  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      tag_198\n        /* \"newone.sol\":34752:34794  ApprovalCallerNotOwnerNorApproved.selector */\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n        /* \"newone.sol\":34744:34751  _revert */\n      tag_108\n        /* \"newone.sol\":34744:34795  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_198:\n        /* \"newone.sol\":34820:34844  _tokenApprovals[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"newone.sol\":34820:34835  _tokenApprovals */\n      0x06\n        /* \"newone.sol\":34820:34844  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"newone.sol\":34820:34855  _tokenApprovals[tokenId].value = to */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup9\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"newone.sol\":34870:34898  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"newone.sol\":34820:34844  _tokenApprovals[tokenId] */\n      dup7\n      swap4\n        /* \"newone.sol\":34870:34898  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"newone.sol\":34559:34905  {... */\n      pop\n        /* \"newone.sol\":34445:34905  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"newone.sol\":12639:14337  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n    tag_117:\n        /* \"newone.sol\":12787:12813  _packedOwnerships[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"newone.sol\":12787:12804  _packedOwnerships */\n      0x04\n        /* \"newone.sol\":12787:12813  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"newone.sol\":2224:2232  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"newone.sol\":12861:12885  packed & _BITMASK_BURNED */\n      dup3\n      and\n        /* \"newone.sol\":12861:12890  packed & _BITMASK_BURNED == 0 */\n      swap1\n      sub\n        /* \"newone.sol\":12857:14264  if (packed & _BITMASK_BURNED == 0) {... */\n      tag_203\n      jumpi\n        /* \"newone.sol\":12998:13004  packed */\n      dup1\n        /* \"newone.sol\":13008:13009  0 */\n      0x00\n        /* \"newone.sol\":12998:13009  packed == 0 */\n      sub\n        /* \"newone.sol\":12994:13966  if (packed == 0) {... */\n      tag_210\n      jumpi\n        /* \"newone.sol\":13048:13061  _currentIndex */\n      sload(0x00)\n        /* \"newone.sol\":13037:13044  tokenId */\n      dup3\n        /* \"newone.sol\":13037:13061  tokenId >= _currentIndex */\n      lt\n        /* \"newone.sol\":13033:13110  if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_206\n      jumpi\n        /* \"newone.sol\":13063:13110  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_206\n        /* \"newone.sol\":13071:13109  OwnerQueryForNonexistentToken.selector */\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n        /* \"newone.sol\":13063:13070  _revert */\n      tag_108\n        /* \"newone.sol\":13063:13110  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_206:\n        /* \"newone.sol\":13697:13948  for (;;) {... */\n    tag_207:\n      pop\n        /* \"newone.sol\":13799:13808  --tokenId */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      add\n        /* \"newone.sol\":13781:13809  _packedOwnerships[--tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"newone.sol\":13781:13798  _packedOwnerships */\n      0x04\n        /* \"newone.sol\":13781:13809  _packedOwnerships[--tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"newone.sol\":13861:13886  if (packed == 0) continue */\n      dup1\n      iszero\n        /* \"newone.sol\":13697:13948  for (;;) {... */\n      tag_207\n        /* \"newone.sol\":13861:13886  if (packed == 0) continue */\n      jumpi\n    tag_210:\n        /* \"newone.sol\":12639:14337  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"newone.sol\":12857:14264  if (packed & _BITMASK_BURNED == 0) {... */\n    tag_203:\n        /* \"newone.sol\":14283:14330  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_210\n        /* \"newone.sol\":14291:14329  OwnerQueryForNonexistentToken.selector */\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n        /* \"newone.sol\":14283:14290  _revert */\n      tag_108\n        /* \"newone.sol\":14283:14330  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n        /* \"newone.sol\":26709:27382  function _checkContractOnERC721Received(... */\n    tag_166:\n        /* \"newone.sol\":26887:26975  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      0x150b7a0200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"newone.sol\":26867:26871  bool */\n      0x00\n      swap1\n        /* \"newone.sol\":26887:26932  ERC721A__IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"newone.sol\":26887:26975  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      tag_223\n      swap1\n        /* \"newone.sol\":40913:40923  msg.sender */\n      caller\n      swap1\n        /* \"newone.sol\":26954:26958  from */\n      dup10\n      swap1\n        /* \"newone.sol\":26960:26967  tokenId */\n      dup9\n      swap1\n        /* \"newone.sol\":26969:26974  _data */\n      dup9\n      swap1\n        /* \"newone.sol\":26887:26975  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x04\n      add\n      tag_224\n      jump\t// in\n    tag_223:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_225\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_226\n      swap2\n      dup2\n      add\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      0x01\n    tag_225:\n        /* \"newone.sol\":26883:27376  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_228\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_233\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_232)\n    tag_233:\n      0x60\n      swap2\n      pop\n    tag_232:\n      pop\n        /* \"newone.sol\":27165:27171  reason */\n      dup1\n        /* \"newone.sol\":27165:27178  reason.length */\n      mload\n        /* \"newone.sol\":27182:27183  0 */\n      0x00\n        /* \"newone.sol\":27165:27183  reason.length == 0 */\n      sub\n        /* \"newone.sol\":27161:27274  if (reason.length == 0) {... */\n      tag_235\n      jumpi\n        /* \"newone.sol\":27203:27259  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_235\n        /* \"newone.sol\":27211:27258  TransferToNonERC721ReceiverImplementer.selector */\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n        /* \"newone.sol\":27203:27210  _revert */\n      tag_108\n        /* \"newone.sol\":27203:27259  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_235:\n        /* \"newone.sol\":27344:27350  reason */\n      dup1\n        /* \"newone.sol\":27338:27351  mload(reason) */\n      mload\n        /* \"newone.sol\":27329:27335  reason */\n      dup2\n        /* \"newone.sol\":27325:27327  32 */\n      0x20\n        /* \"newone.sol\":27321:27336  add(32, reason) */\n      add\n        /* \"newone.sol\":27314:27352  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"newone.sol\":26883:27376  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_228:\n        /* \"newone.sol\":27043:27107  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      and\n        /* \"newone.sol\":27053:27107  ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      0x150b7a0200000000000000000000000000000000000000000000000000000000\n        /* \"newone.sol\":27043:27107  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      eq\n      swap1\n      pop\n        /* \"newone.sol\":26709:27382  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"newone.sol\":33555:33665  function _safeMint(address to, uint256 quantity) internal virtual {... */\n    tag_171:\n        /* \"newone.sol\":33631:33658  _safeMint(to, quantity, '') */\n      tag_110\n        /* \"newone.sol\":33641:33643  to */\n      dup3\n        /* \"newone.sol\":33645:33653  quantity */\n      dup3\n        /* \"newone.sol\":33631:33658  _safeMint(to, quantity, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"newone.sol\":33631:33640  _safeMint */\n      tag_239\n        /* \"newone.sol\":33631:33658  _safeMint(to, quantity, '') */\n      jump\t// in\n        /* \"newone.sol\":41027:42735  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_181:\n        /* \"newone.sol\":41092:41109  string memory str */\n      0x60\n        /* \"newone.sol\":41520:41524  0xa0 */\n      0xa0\n        /* \"newone.sol\":41513:41517  0x40 */\n      0x40\n        /* \"newone.sol\":41507:41518  mload(0x40) */\n      mload\n        /* \"newone.sol\":41503:41525  add(mload(0x40), 0xa0) */\n      add\n        /* \"newone.sol\":41610:41611  m */\n      dup1\n        /* \"newone.sol\":41604:41608  0x40 */\n      0x40\n        /* \"newone.sol\":41597:41612  mstore(0x40, m) */\n      mstore\n        /* \"newone.sol\":41683:41687  0x20 */\n      0x20\n        /* \"newone.sol\":41680:41681  m */\n      dup2\n        /* \"newone.sol\":41676:41688  sub(m, 0x20) */\n      sub\n        /* \"newone.sol\":41669:41688  str := sub(m, 0x20) */\n      swap2\n      pop\n      pop\n        /* \"newone.sol\":41763:41764  0 */\n      0x00\n        /* \"newone.sol\":41758:41761  str */\n      dup2\n        /* \"newone.sol\":41751:41765  mstore(str, 0) */\n      mstore\n        /* \"newone.sol\":41864:41867  str */\n      dup1\n        /* \"newone.sol\":42098:42103  value */\n      dup3\n        /* \"newone.sol\":42080:42499  for { let temp := value } 1 {} {... */\n    tag_242:\n        /* \"newone.sol\":42145:42146  1 */\n      0x01\n        /* \"newone.sol\":42140:42143  str */\n      dup4\n        /* \"newone.sol\":42136:42147  sub(str, 1) */\n      sub\n        /* \"newone.sol\":42129:42147  str := sub(str, 1) */\n      swap3\n      pop\n        /* \"newone.sol\":42313:42315  10 */\n      0x0a\n        /* \"newone.sol\":42307:42311  temp */\n      dup2\n        /* \"newone.sol\":42303:42316  mod(temp, 10) */\n      mod\n        /* \"newone.sol\":42299:42301  48 */\n      0x30\n        /* \"newone.sol\":42295:42317  add(48, mod(temp, 10)) */\n      add\n        /* \"newone.sol\":42290:42293  str */\n      dup4\n        /* \"newone.sol\":42282:42318  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"newone.sol\":42405:42407  10 */\n      0x0a\n        /* \"newone.sol\":42395:42408  div(temp, 10) */\n      swap1\n      div\n        /* \"newone.sol\":42460:42485  if iszero(temp) { break } */\n      dup1\n        /* \"newone.sol\":42080:42499  for { let temp := value } 1 {} {... */\n      tag_242\n        /* \"newone.sol\":42460:42485  if iszero(temp) { break } */\n      jumpi\n      pop\n        /* \"newone.sol\":42527:42540  sub(end, str) */\n      dup2\n      swap1\n      sub\n        /* \"newone.sol\":42640:42654  sub(str, 0x20) */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      swap1\n      swap2\n      add\n        /* \"newone.sol\":42700:42719  mstore(str, length) */\n      swap1\n      dup2\n      mstore\n        /* \"newone.sol\":42640:42654  sub(str, 0x20) */\n      swap2\n        /* \"newone.sol\":41027:42735  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"newone.sol\":32788:33476  function _safeMint(... */\n    tag_239:\n        /* \"newone.sol\":32914:32933  _mint(to, quantity) */\n      tag_248\n        /* \"newone.sol\":32920:32922  to */\n      dup4\n        /* \"newone.sol\":32924:32932  quantity */\n      dup4\n        /* \"newone.sol\":32914:32919  _mint */\n      tag_249\n        /* \"newone.sol\":32914:32933  _mint(to, quantity) */\n      jump\t// in\n    tag_248:\n        /* \"newone.sol\":32972:32986  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      extcodesize\n        /* \"newone.sol\":32972:32991  to.code.length != 0 */\n      iszero\n        /* \"newone.sol\":32968:33460  if (to.code.length != 0) {... */\n      tag_146\n      jumpi\n        /* \"newone.sol\":33011:33022  uint256 end */\n      0x00\n        /* \"newone.sol\":33025:33038  _currentIndex */\n      sload\n        /* \"newone.sol\":33072:33086  end - quantity */\n      dup3\n      dup2\n      sub\n        /* \"newone.sol\":33104:33342  do {... */\n    tag_251:\n        /* \"newone.sol\":33134:33196  _checkContractOnERC721Received(address(0), to, index++, _data) */\n      tag_254\n        /* \"newone.sol\":33173:33174  0 */\n      0x00\n        /* \"newone.sol\":33177:33179  to */\n      dup7\n        /* \"newone.sol\":33181:33188  index++ */\n      dup4\n      dup1\n      0x01\n      add\n      swap5\n      pop\n        /* \"newone.sol\":33190:33195  _data */\n      dup7\n        /* \"newone.sol\":33134:33164  _checkContractOnERC721Received */\n      tag_166\n        /* \"newone.sol\":33134:33196  _checkContractOnERC721Received(address(0), to, index++, _data) */\n      jump\t// in\n    tag_254:\n        /* \"newone.sol\":33129:33303  if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {... */\n      tag_256\n      jumpi\n        /* \"newone.sol\":33224:33280  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_256\n        /* \"newone.sol\":33232:33279  TransferToNonERC721ReceiverImplementer.selector */\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n        /* \"newone.sol\":33224:33231  _revert */\n      tag_108\n        /* \"newone.sol\":33224:33280  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_256:\n        /* \"newone.sol\":33337:33340  end */\n      dup2\n        /* \"newone.sol\":33329:33334  index */\n      dup2\n        /* \"newone.sol\":33329:33340  index < end */\n      lt\n        /* \"newone.sol\":33104:33342  do {... */\n      tag_251\n      jumpi\n        /* \"newone.sol\":33422:33425  end */\n      dup2\n        /* \"newone.sol\":33405:33418  _currentIndex */\n      sload(0x00)\n        /* \"newone.sol\":33405:33425  _currentIndex != end */\n      eq\n        /* \"newone.sol\":33401:33445  if (_currentIndex != end) _revert(bytes4(0)) */\n      tag_258\n      jumpi\n        /* \"newone.sol\":33427:33445  _revert(bytes4(0)) */\n      tag_258\n        /* \"newone.sol\":33442:33443  0 */\n      0x00\n        /* \"newone.sol\":33427:33434  _revert */\n      tag_108\n        /* \"newone.sol\":33427:33445  _revert(bytes4(0)) */\n      jump\t// in\n    tag_258:\n        /* \"newone.sol\":32993:33460  {... */\n      pop\n      pop\n        /* \"newone.sol\":32788:33476  function _safeMint(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"newone.sol\":27828:30079  function _mint(address to, uint256 quantity) internal virtual {... */\n    tag_249:\n        /* \"newone.sol\":27900:27920  uint256 startTokenId */\n      0x00\n        /* \"newone.sol\":27923:27936  _currentIndex */\n      dup1\n      sload\n      swap1\n        /* \"newone.sol\":27950:27963  quantity == 0 */\n      dup3\n      swap1\n      sub\n        /* \"newone.sol\":27946:27999  if (quantity == 0) _revert(MintZeroQuantity.selector) */\n      tag_261\n      jumpi\n        /* \"newone.sol\":27965:27999  _revert(MintZeroQuantity.selector) */\n      tag_261\n        /* \"newone.sol\":27973:27998  MintZeroQuantity.selector */\n      0xb562e8dd00000000000000000000000000000000000000000000000000000000\n        /* \"newone.sol\":27965:27972  _revert */\n      tag_108\n        /* \"newone.sol\":27965:27999  _revert(MintZeroQuantity.selector) */\n      jump\t// in\n    tag_261:\n        /* \"newone.sol\":28499:28530  _packedOwnerships[startTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"newone.sol\":28499:28516  _packedOwnerships */\n      0x04\n        /* \"newone.sol\":28499:28530  _packedOwnerships[startTokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"newone.sol\":15115:15131  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"newone.sol\":15104:15132  and(owner, _BITMASK_ADDRESS) */\n      dup8\n      and\n        /* \"newone.sol\":15276:15287  timestamp() */\n      timestamp\n        /* \"newone.sol\":15251:15274  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"newone.sol\":15247:15288  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"newone.sol\":15709:15710  1 */\n      0x01\n        /* \"newone.sol\":15696:15711  eq(quantity, 1) */\n      dup9\n      eq\n        /* \"newone.sol\":15670:15694  _BITPOS_NEXT_INITIALIZED */\n      0xe1\n        /* \"newone.sol\":15666:15712  shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1)) */\n      shl\n        /* \"newone.sol\":15244:15296  or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"newone.sol\":15234:15297  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      dup2\n      or\n        /* \"newone.sol\":28499:28669  _packedOwnerships[startTokenId] = _packOwnershipData(... */\n      swap1\n      swap2\n      sstore\n        /* \"newone.sol\":28880:28902  _packedAddressData[to] */\n      dup1\n      dup5\n      mstore\n        /* \"newone.sol\":28880:28898  _packedAddressData */\n      0x05\n        /* \"newone.sol\":28880:28902  _packedAddressData[to] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n        /* \"newone.sol\":28880:28951  _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      dup1\n      sload\n        /* \"newone.sol\":28918:28950  (1 << _BITPOS_NUMBER_MINTED) | 1 */\n      0x010000000000000001\n        /* \"newone.sol\":28906:28951  quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      dup7\n      mul\n        /* \"newone.sol\":28880:28951  _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1) */\n      add\n      swap1\n      sstore\n        /* \"newone.sol\":15104:15132  and(owner, _BITMASK_ADDRESS) */\n      swap1\n        /* \"newone.sol\":29136:29149  toMasked == 0 */\n      dup2\n      swap1\n      sub\n        /* \"newone.sol\":29132:29186  if (toMasked == 0) _revert(MintToZeroAddress.selector) */\n      tag_268\n      jumpi\n        /* \"newone.sol\":29151:29186  _revert(MintToZeroAddress.selector) */\n      tag_268\n        /* \"newone.sol\":29159:29185  MintToZeroAddress.selector */\n      0x2e07630000000000000000000000000000000000000000000000000000000000\n        /* \"newone.sol\":29151:29158  _revert */\n      tag_108\n        /* \"newone.sol\":29151:29186  _revert(MintToZeroAddress.selector) */\n      jump\t// in\n    tag_268:\n        /* \"newone.sol\":29215:29238  startTokenId + quantity */\n      dup2\n      dup4\n      add\n        /* \"newone.sol\":29215:29227  startTokenId */\n      dup3\n        /* \"newone.sol\":29297:29959  do {... */\n    tag_269:\n        /* \"newone.sol\":29707:29714  tokenId */\n      dup1\n        /* \"newone.sol\":29664:29672  toMasked */\n      dup4\n        /* \"newone.sol\":29620:29621  0 */\n      0x00\n        /* \"newone.sol\":29555:29580  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"newone.sol\":29493:29494  0 */\n      0x00\n        /* \"newone.sol\":29429:29430  0 */\n      dup1\n        /* \"newone.sol\":29399:29750  log4(... */\n      log4\n        /* \"newone.sol\":29954:29957  end */\n      dup2\n        /* \"newone.sol\":29941:29950  ++tokenId */\n      dup2\n      0x01\n      add\n      swap2\n      pop\n      dup2\n        /* \"newone.sol\":29941:29957  ++tokenId != end */\n      sub\n        /* \"newone.sol\":29297:29959  do {... */\n      tag_269\n      jumpi\n      pop\n        /* \"newone.sol\":29973:29986  _currentIndex */\n      0x00\n        /* \"newone.sol\":29973:29992  _currentIndex = end */\n      sstore\n      pop\n        /* \"newone.sol\":23510:23697  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:191   */\n    tag_274:\n        /* \"#utility.yul\":99:165   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":92:97   */\n      dup2\n        /* \"#utility.yul\":88:166   */\n      and\n        /* \"#utility.yul\":81:86   */\n      dup2\n        /* \"#utility.yul\":78:167   */\n      eq\n        /* \"#utility.yul\":68:185   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":181:182   */\n      0x00\n        /* \"#utility.yul\":178:179   */\n      dup1\n        /* \"#utility.yul\":171:183   */\n      revert\n        /* \"#utility.yul\":196:441   */\n    tag_23:\n        /* \"#utility.yul\":254:260   */\n      0x00\n        /* \"#utility.yul\":307:309   */\n      0x20\n        /* \"#utility.yul\":295:304   */\n      dup3\n        /* \"#utility.yul\":286:293   */\n      dup5\n        /* \"#utility.yul\":282:305   */\n      sub\n        /* \"#utility.yul\":278:310   */\n      slt\n        /* \"#utility.yul\":275:327   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":323:324   */\n      0x00\n        /* \"#utility.yul\":320:321   */\n      dup1\n        /* \"#utility.yul\":313:325   */\n      revert\n        /* \"#utility.yul\":275:327   */\n    tag_283:\n        /* \"#utility.yul\":362:371   */\n      dup2\n        /* \"#utility.yul\":349:372   */\n      calldataload\n        /* \"#utility.yul\":381:411   */\n      tag_179\n        /* \"#utility.yul\":405:410   */\n      dup2\n        /* \"#utility.yul\":381:411   */\n      tag_274\n      jump\t// in\n        /* \"#utility.yul\":638:888   */\n    tag_275:\n        /* \"#utility.yul\":723:724   */\n      0x00\n        /* \"#utility.yul\":733:846   */\n    tag_287:\n        /* \"#utility.yul\":747:753   */\n      dup4\n        /* \"#utility.yul\":744:745   */\n      dup2\n        /* \"#utility.yul\":741:754   */\n      lt\n        /* \"#utility.yul\":733:846   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":823:834   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":817:835   */\n      mload\n        /* \"#utility.yul\":804:815   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":797:836   */\n      mstore\n        /* \"#utility.yul\":769:771   */\n      0x20\n        /* \"#utility.yul\":762:772   */\n      add\n        /* \"#utility.yul\":733:846   */\n      jump(tag_287)\n    tag_289:\n      pop\n      pop\n        /* \"#utility.yul\":880:881   */\n      0x00\n        /* \"#utility.yul\":862:878   */\n      swap2\n      add\n        /* \"#utility.yul\":855:882   */\n      mstore\n        /* \"#utility.yul\":638:888   */\n      jump\t// out\n        /* \"#utility.yul\":893:1223   */\n    tag_276:\n        /* \"#utility.yul\":935:938   */\n      0x00\n        /* \"#utility.yul\":973:978   */\n      dup2\n        /* \"#utility.yul\":967:979   */\n      mload\n        /* \"#utility.yul\":1000:1006   */\n      dup1\n        /* \"#utility.yul\":995:998   */\n      dup5\n        /* \"#utility.yul\":988:1007   */\n      mstore\n        /* \"#utility.yul\":1016:1092   */\n      tag_291\n        /* \"#utility.yul\":1085:1091   */\n      dup2\n        /* \"#utility.yul\":1078:1082   */\n      0x20\n        /* \"#utility.yul\":1073:1076   */\n      dup7\n        /* \"#utility.yul\":1069:1083   */\n      add\n        /* \"#utility.yul\":1062:1066   */\n      0x20\n        /* \"#utility.yul\":1055:1060   */\n      dup7\n        /* \"#utility.yul\":1051:1067   */\n      add\n        /* \"#utility.yul\":1016:1092   */\n      tag_275\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":1137:1139   */\n      0x1f\n        /* \"#utility.yul\":1125:1140   */\n      add\n        /* \"#utility.yul\":1142:1208   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":1121:1209   */\n      and\n        /* \"#utility.yul\":1112:1210   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1212:1216   */\n      0x20\n        /* \"#utility.yul\":1108:1217   */\n      add\n      swap3\n        /* \"#utility.yul\":893:1223   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1228:1448   */\n    tag_31:\n        /* \"#utility.yul\":1377:1379   */\n      0x20\n        /* \"#utility.yul\":1366:1375   */\n      dup2\n        /* \"#utility.yul\":1359:1380   */\n      mstore\n        /* \"#utility.yul\":1340:1344   */\n      0x00\n        /* \"#utility.yul\":1397:1442   */\n      tag_179\n        /* \"#utility.yul\":1438:1440   */\n      0x20\n        /* \"#utility.yul\":1427:1436   */\n      dup4\n        /* \"#utility.yul\":1423:1441   */\n      add\n        /* \"#utility.yul\":1415:1421   */\n      dup5\n        /* \"#utility.yul\":1397:1442   */\n      tag_276\n      jump\t// in\n        /* \"#utility.yul\":1453:1633   */\n    tag_35:\n        /* \"#utility.yul\":1512:1518   */\n      0x00\n        /* \"#utility.yul\":1565:1567   */\n      0x20\n        /* \"#utility.yul\":1553:1562   */\n      dup3\n        /* \"#utility.yul\":1544:1551   */\n      dup5\n        /* \"#utility.yul\":1540:1563   */\n      sub\n        /* \"#utility.yul\":1536:1568   */\n      slt\n        /* \"#utility.yul\":1533:1585   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":1581:1582   */\n      0x00\n        /* \"#utility.yul\":1578:1579   */\n      dup1\n        /* \"#utility.yul\":1571:1583   */\n      revert\n        /* \"#utility.yul\":1533:1585   */\n    tag_295:\n      pop\n        /* \"#utility.yul\":1604:1627   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1453:1633   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1869:2065   */\n    tag_277:\n        /* \"#utility.yul\":1937:1957   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":1997:2039   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1986:2040   */\n      dup2\n      and\n        /* \"#utility.yul\":1976:2041   */\n      dup2\n      eq\n        /* \"#utility.yul\":1966:2059   */\n      tag_210\n      jumpi\n        /* \"#utility.yul\":2055:2056   */\n      0x00\n        /* \"#utility.yul\":2052:2053   */\n      dup1\n        /* \"#utility.yul\":2045:2057   */\n      revert\n        /* \"#utility.yul\":2070:2324   */\n    tag_41:\n        /* \"#utility.yul\":2138:2144   */\n      0x00\n        /* \"#utility.yul\":2146:2152   */\n      dup1\n        /* \"#utility.yul\":2199:2201   */\n      0x40\n        /* \"#utility.yul\":2187:2196   */\n      dup4\n        /* \"#utility.yul\":2178:2185   */\n      dup6\n        /* \"#utility.yul\":2174:2197   */\n      sub\n        /* \"#utility.yul\":2170:2202   */\n      slt\n        /* \"#utility.yul\":2167:2219   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":2215:2216   */\n      0x00\n        /* \"#utility.yul\":2212:2213   */\n      dup1\n        /* \"#utility.yul\":2205:2217   */\n      revert\n        /* \"#utility.yul\":2167:2219   */\n    tag_300:\n        /* \"#utility.yul\":2238:2267   */\n      tag_301\n        /* \"#utility.yul\":2257:2266   */\n      dup4\n        /* \"#utility.yul\":2238:2267   */\n      tag_277\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":2228:2267   */\n      swap5\n        /* \"#utility.yul\":2314:2316   */\n      0x20\n        /* \"#utility.yul\":2299:2317   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2286:2318   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2070:2324   */\n      jump\t// out\n        /* \"#utility.yul\":2511:2839   */\n    tag_50:\n        /* \"#utility.yul\":2588:2594   */\n      0x00\n        /* \"#utility.yul\":2596:2602   */\n      dup1\n        /* \"#utility.yul\":2604:2610   */\n      0x00\n        /* \"#utility.yul\":2657:2659   */\n      0x60\n        /* \"#utility.yul\":2645:2654   */\n      dup5\n        /* \"#utility.yul\":2636:2643   */\n      dup7\n        /* \"#utility.yul\":2632:2655   */\n      sub\n        /* \"#utility.yul\":2628:2660   */\n      slt\n        /* \"#utility.yul\":2625:2677   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":2673:2674   */\n      0x00\n        /* \"#utility.yul\":2670:2671   */\n      dup1\n        /* \"#utility.yul\":2663:2675   */\n      revert\n        /* \"#utility.yul\":2625:2677   */\n    tag_304:\n        /* \"#utility.yul\":2696:2725   */\n      tag_305\n        /* \"#utility.yul\":2715:2724   */\n      dup5\n        /* \"#utility.yul\":2696:2725   */\n      tag_277\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":2686:2725   */\n      swap3\n      pop\n        /* \"#utility.yul\":2744:2782   */\n      tag_306\n        /* \"#utility.yul\":2778:2780   */\n      0x20\n        /* \"#utility.yul\":2767:2776   */\n      dup6\n        /* \"#utility.yul\":2763:2781   */\n      add\n        /* \"#utility.yul\":2744:2782   */\n      tag_277\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":2734:2782   */\n      swap2\n      pop\n        /* \"#utility.yul\":2829:2831   */\n      0x40\n        /* \"#utility.yul\":2818:2827   */\n      dup5\n        /* \"#utility.yul\":2814:2832   */\n      add\n        /* \"#utility.yul\":2801:2833   */\n      calldataload\n        /* \"#utility.yul\":2791:2833   */\n      swap1\n      pop\n        /* \"#utility.yul\":2511:2839   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2844:3030   */\n    tag_63:\n        /* \"#utility.yul\":2903:2909   */\n      0x00\n        /* \"#utility.yul\":2956:2958   */\n      0x20\n        /* \"#utility.yul\":2944:2953   */\n      dup3\n        /* \"#utility.yul\":2935:2942   */\n      dup5\n        /* \"#utility.yul\":2931:2954   */\n      sub\n        /* \"#utility.yul\":2927:2959   */\n      slt\n        /* \"#utility.yul\":2924:2976   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":2972:2973   */\n      0x00\n        /* \"#utility.yul\":2969:2970   */\n      dup1\n        /* \"#utility.yul\":2962:2974   */\n      revert\n        /* \"#utility.yul\":2924:2976   */\n    tag_308:\n        /* \"#utility.yul\":2995:3024   */\n      tag_179\n        /* \"#utility.yul\":3014:3023   */\n      dup3\n        /* \"#utility.yul\":2995:3024   */\n      tag_277\n      jump\t// in\n        /* \"#utility.yul\":3035:3382   */\n    tag_73:\n        /* \"#utility.yul\":3100:3106   */\n      0x00\n        /* \"#utility.yul\":3108:3114   */\n      dup1\n        /* \"#utility.yul\":3161:3163   */\n      0x40\n        /* \"#utility.yul\":3149:3158   */\n      dup4\n        /* \"#utility.yul\":3140:3147   */\n      dup6\n        /* \"#utility.yul\":3136:3159   */\n      sub\n        /* \"#utility.yul\":3132:3164   */\n      slt\n        /* \"#utility.yul\":3129:3181   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":3177:3178   */\n      0x00\n        /* \"#utility.yul\":3174:3175   */\n      dup1\n        /* \"#utility.yul\":3167:3179   */\n      revert\n        /* \"#utility.yul\":3129:3181   */\n    tag_311:\n        /* \"#utility.yul\":3200:3229   */\n      tag_312\n        /* \"#utility.yul\":3219:3228   */\n      dup4\n        /* \"#utility.yul\":3200:3229   */\n      tag_277\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":3190:3229   */\n      swap2\n      pop\n        /* \"#utility.yul\":3279:3281   */\n      0x20\n        /* \"#utility.yul\":3268:3277   */\n      dup4\n        /* \"#utility.yul\":3264:3282   */\n      add\n        /* \"#utility.yul\":3251:3283   */\n      calldataload\n        /* \"#utility.yul\":3326:3331   */\n      dup1\n        /* \"#utility.yul\":3319:3332   */\n      iszero\n        /* \"#utility.yul\":3312:3333   */\n      iszero\n        /* \"#utility.yul\":3305:3310   */\n      dup2\n        /* \"#utility.yul\":3302:3334   */\n      eq\n        /* \"#utility.yul\":3292:3352   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":3348:3349   */\n      0x00\n        /* \"#utility.yul\":3345:3346   */\n      dup1\n        /* \"#utility.yul\":3338:3350   */\n      revert\n        /* \"#utility.yul\":3292:3352   */\n    tag_313:\n        /* \"#utility.yul\":3371:3376   */\n      dup1\n        /* \"#utility.yul\":3361:3376   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3035:3382   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3387:3571   */\n    tag_278:\n        /* \"#utility.yul\":3439:3516   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3436:3437   */\n      0x00\n        /* \"#utility.yul\":3429:3517   */\n      mstore\n        /* \"#utility.yul\":3536:3540   */\n      0x41\n        /* \"#utility.yul\":3533:3534   */\n      0x04\n        /* \"#utility.yul\":3526:3541   */\n      mstore\n        /* \"#utility.yul\":3560:3564   */\n      0x24\n        /* \"#utility.yul\":3557:3558   */\n      0x00\n        /* \"#utility.yul\":3550:3565   */\n      revert\n        /* \"#utility.yul\":3576:4773   */\n    tag_77:\n        /* \"#utility.yul\":3671:3677   */\n      0x00\n        /* \"#utility.yul\":3679:3685   */\n      dup1\n        /* \"#utility.yul\":3687:3693   */\n      0x00\n        /* \"#utility.yul\":3695:3701   */\n      dup1\n        /* \"#utility.yul\":3748:3751   */\n      0x80\n        /* \"#utility.yul\":3736:3745   */\n      dup6\n        /* \"#utility.yul\":3727:3734   */\n      dup8\n        /* \"#utility.yul\":3723:3746   */\n      sub\n        /* \"#utility.yul\":3719:3752   */\n      slt\n        /* \"#utility.yul\":3716:3769   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":3765:3766   */\n      0x00\n        /* \"#utility.yul\":3762:3763   */\n      dup1\n        /* \"#utility.yul\":3755:3767   */\n      revert\n        /* \"#utility.yul\":3716:3769   */\n    tag_316:\n        /* \"#utility.yul\":3788:3817   */\n      tag_317\n        /* \"#utility.yul\":3807:3816   */\n      dup6\n        /* \"#utility.yul\":3788:3817   */\n      tag_277\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":3778:3817   */\n      swap4\n      pop\n        /* \"#utility.yul\":3836:3874   */\n      tag_318\n        /* \"#utility.yul\":3870:3872   */\n      0x20\n        /* \"#utility.yul\":3859:3868   */\n      dup7\n        /* \"#utility.yul\":3855:3873   */\n      add\n        /* \"#utility.yul\":3836:3874   */\n      tag_277\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":3826:3874   */\n      swap3\n      pop\n        /* \"#utility.yul\":3921:3923   */\n      0x40\n        /* \"#utility.yul\":3910:3919   */\n      dup6\n        /* \"#utility.yul\":3906:3924   */\n      add\n        /* \"#utility.yul\":3893:3925   */\n      calldataload\n        /* \"#utility.yul\":3883:3925   */\n      swap2\n      pop\n        /* \"#utility.yul\":3976:3978   */\n      0x60\n        /* \"#utility.yul\":3965:3974   */\n      dup6\n        /* \"#utility.yul\":3961:3979   */\n      add\n        /* \"#utility.yul\":3948:3980   */\n      calldataload\n        /* \"#utility.yul\":3999:4017   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4040:4042   */\n      dup1\n        /* \"#utility.yul\":4032:4038   */\n      dup3\n        /* \"#utility.yul\":4029:4043   */\n      gt\n        /* \"#utility.yul\":4026:4060   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":4056:4057   */\n      0x00\n        /* \"#utility.yul\":4053:4054   */\n      dup1\n        /* \"#utility.yul\":4046:4058   */\n      revert\n        /* \"#utility.yul\":4026:4060   */\n    tag_319:\n        /* \"#utility.yul\":4094:4100   */\n      dup2\n        /* \"#utility.yul\":4083:4092   */\n      dup8\n        /* \"#utility.yul\":4079:4101   */\n      add\n        /* \"#utility.yul\":4069:4101   */\n      swap2\n      pop\n        /* \"#utility.yul\":4139:4146   */\n      dup8\n        /* \"#utility.yul\":4132:4136   */\n      0x1f\n        /* \"#utility.yul\":4128:4130   */\n      dup4\n        /* \"#utility.yul\":4124:4137   */\n      add\n        /* \"#utility.yul\":4120:4147   */\n      slt\n        /* \"#utility.yul\":4110:4165   */\n      tag_320\n      jumpi\n        /* \"#utility.yul\":4161:4162   */\n      0x00\n        /* \"#utility.yul\":4158:4159   */\n      dup1\n        /* \"#utility.yul\":4151:4163   */\n      revert\n        /* \"#utility.yul\":4110:4165   */\n    tag_320:\n        /* \"#utility.yul\":4197:4199   */\n      dup2\n        /* \"#utility.yul\":4184:4200   */\n      calldataload\n        /* \"#utility.yul\":4219:4221   */\n      dup2\n        /* \"#utility.yul\":4215:4217   */\n      dup2\n        /* \"#utility.yul\":4212:4222   */\n      gt\n        /* \"#utility.yul\":4209:4245   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":4225:4243   */\n      tag_322\n      tag_278\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":4359:4361   */\n      0x40\n        /* \"#utility.yul\":4353:4362   */\n      mload\n        /* \"#utility.yul\":4421:4425   */\n      0x1f\n        /* \"#utility.yul\":4413:4426   */\n      dup3\n      add\n        /* \"#utility.yul\":4264:4330   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":4409:4431   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4433:4435   */\n      0x3f\n        /* \"#utility.yul\":4405:4436   */\n      add\n        /* \"#utility.yul\":4401:4441   */\n      and\n        /* \"#utility.yul\":4389:4442   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4457:4475   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4477:4499   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4454:4500   */\n      or\n        /* \"#utility.yul\":4451:4523   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":4503:4521   */\n      tag_324\n      tag_278\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":4543:4553   */\n      dup2\n        /* \"#utility.yul\":4539:4541   */\n      0x40\n        /* \"#utility.yul\":4532:4554   */\n      mstore\n        /* \"#utility.yul\":4578:4580   */\n      dup3\n        /* \"#utility.yul\":4570:4576   */\n      dup2\n        /* \"#utility.yul\":4563:4581   */\n      mstore\n        /* \"#utility.yul\":4618:4625   */\n      dup11\n        /* \"#utility.yul\":4613:4615   */\n      0x20\n        /* \"#utility.yul\":4608:4610   */\n      dup5\n        /* \"#utility.yul\":4604:4606   */\n      dup8\n        /* \"#utility.yul\":4600:4611   */\n      add\n        /* \"#utility.yul\":4596:4616   */\n      add\n        /* \"#utility.yul\":4593:4626   */\n      gt\n        /* \"#utility.yul\":4590:4643   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":4639:4640   */\n      0x00\n        /* \"#utility.yul\":4636:4637   */\n      dup1\n        /* \"#utility.yul\":4629:4641   */\n      revert\n        /* \"#utility.yul\":4590:4643   */\n    tag_325:\n        /* \"#utility.yul\":4695:4697   */\n      dup3\n        /* \"#utility.yul\":4690:4692   */\n      0x20\n        /* \"#utility.yul\":4686:4688   */\n      dup7\n        /* \"#utility.yul\":4682:4693   */\n      add\n        /* \"#utility.yul\":4677:4679   */\n      0x20\n        /* \"#utility.yul\":4669:4675   */\n      dup4\n        /* \"#utility.yul\":4665:4680   */\n      add\n        /* \"#utility.yul\":4652:4698   */\n      calldatacopy\n        /* \"#utility.yul\":4740:4741   */\n      0x00\n        /* \"#utility.yul\":4735:4737   */\n      0x20\n        /* \"#utility.yul\":4730:4732   */\n      dup5\n        /* \"#utility.yul\":4722:4728   */\n      dup4\n        /* \"#utility.yul\":4718:4733   */\n      add\n        /* \"#utility.yul\":4714:4738   */\n      add\n        /* \"#utility.yul\":4707:4742   */\n      mstore\n        /* \"#utility.yul\":4761:4767   */\n      dup1\n        /* \"#utility.yul\":4751:4767   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3576:4773   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4778:5038   */\n    tag_90:\n        /* \"#utility.yul\":4846:4852   */\n      0x00\n        /* \"#utility.yul\":4854:4860   */\n      dup1\n        /* \"#utility.yul\":4907:4909   */\n      0x40\n        /* \"#utility.yul\":4895:4904   */\n      dup4\n        /* \"#utility.yul\":4886:4893   */\n      dup6\n        /* \"#utility.yul\":4882:4905   */\n      sub\n        /* \"#utility.yul\":4878:4910   */\n      slt\n        /* \"#utility.yul\":4875:4927   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":4923:4924   */\n      0x00\n        /* \"#utility.yul\":4920:4921   */\n      dup1\n        /* \"#utility.yul\":4913:4925   */\n      revert\n        /* \"#utility.yul\":4875:4927   */\n    tag_327:\n        /* \"#utility.yul\":4946:4975   */\n      tag_328\n        /* \"#utility.yul\":4965:4974   */\n      dup4\n        /* \"#utility.yul\":4946:4975   */\n      tag_277\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":4936:4975   */\n      swap2\n      pop\n        /* \"#utility.yul\":4994:5032   */\n      tag_329\n        /* \"#utility.yul\":5028:5030   */\n      0x20\n        /* \"#utility.yul\":5017:5026   */\n      dup5\n        /* \"#utility.yul\":5013:5031   */\n      add\n        /* \"#utility.yul\":4994:5032   */\n      tag_277\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":4984:5032   */\n      swap1\n      pop\n        /* \"#utility.yul\":4778:5038   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5043:5480   */\n    tag_98:\n        /* \"#utility.yul\":5122:5123   */\n      0x01\n        /* \"#utility.yul\":5118:5130   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5165:5177   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5186:5247   */\n      tag_331\n      jumpi\n        /* \"#utility.yul\":5240:5244   */\n      0x7f\n        /* \"#utility.yul\":5232:5238   */\n      dup3\n        /* \"#utility.yul\":5228:5245   */\n      and\n        /* \"#utility.yul\":5218:5245   */\n      swap2\n      pop\n        /* \"#utility.yul\":5186:5247   */\n    tag_331:\n        /* \"#utility.yul\":5293:5295   */\n      0x20\n        /* \"#utility.yul\":5285:5291   */\n      dup3\n        /* \"#utility.yul\":5282:5296   */\n      lt\n        /* \"#utility.yul\":5262:5280   */\n      dup2\n        /* \"#utility.yul\":5259:5297   */\n      sub\n        /* \"#utility.yul\":5256:5474   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":5330:5407   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5327:5328   */\n      0x00\n        /* \"#utility.yul\":5320:5408   */\n      mstore\n        /* \"#utility.yul\":5431:5435   */\n      0x22\n        /* \"#utility.yul\":5428:5429   */\n      0x04\n        /* \"#utility.yul\":5421:5436   */\n      mstore\n        /* \"#utility.yul\":5459:5463   */\n      0x24\n        /* \"#utility.yul\":5456:5457   */\n      0x00\n        /* \"#utility.yul\":5449:5464   */\n      revert\n        /* \"#utility.yul\":5256:5474   */\n    tag_332:\n      pop\n        /* \"#utility.yul\":5043:5480   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5485:5981   */\n    tag_183:\n        /* \"#utility.yul\":5664:5667   */\n      0x00\n        /* \"#utility.yul\":5702:5708   */\n      dup4\n        /* \"#utility.yul\":5696:5709   */\n      mload\n        /* \"#utility.yul\":5718:5784   */\n      tag_334\n        /* \"#utility.yul\":5777:5783   */\n      dup2\n        /* \"#utility.yul\":5772:5775   */\n      dup5\n        /* \"#utility.yul\":5765:5769   */\n      0x20\n        /* \"#utility.yul\":5757:5763   */\n      dup9\n        /* \"#utility.yul\":5753:5770   */\n      add\n        /* \"#utility.yul\":5718:5784   */\n      tag_275\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":5847:5860   */\n      dup4\n      mload\n        /* \"#utility.yul\":5806:5822   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":5869:5939   */\n      tag_335\n        /* \"#utility.yul\":5847:5860   */\n      dup2\n        /* \"#utility.yul\":5806:5822   */\n      dup4\n        /* \"#utility.yul\":5916:5920   */\n      0x20\n        /* \"#utility.yul\":5904:5921   */\n      dup9\n      add\n        /* \"#utility.yul\":5869:5939   */\n      tag_275\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":5955:5975   */\n      add\n      swap5\n        /* \"#utility.yul\":5485:5981   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5986:6498   */\n    tag_224:\n        /* \"#utility.yul\":6180:6184   */\n      0x00\n        /* \"#utility.yul\":6209:6251   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6290:6292   */\n      dup1\n        /* \"#utility.yul\":6282:6288   */\n      dup8\n        /* \"#utility.yul\":6278:6293   */\n      and\n        /* \"#utility.yul\":6267:6276   */\n      dup4\n        /* \"#utility.yul\":6260:6294   */\n      mstore\n        /* \"#utility.yul\":6342:6344   */\n      dup1\n        /* \"#utility.yul\":6334:6340   */\n      dup7\n        /* \"#utility.yul\":6330:6345   */\n      and\n        /* \"#utility.yul\":6325:6327   */\n      0x20\n        /* \"#utility.yul\":6314:6323   */\n      dup5\n        /* \"#utility.yul\":6310:6328   */\n      add\n        /* \"#utility.yul\":6303:6346   */\n      mstore\n      pop\n        /* \"#utility.yul\":6382:6388   */\n      dup4\n        /* \"#utility.yul\":6377:6379   */\n      0x40\n        /* \"#utility.yul\":6366:6375   */\n      dup4\n        /* \"#utility.yul\":6362:6380   */\n      add\n        /* \"#utility.yul\":6355:6389   */\n      mstore\n        /* \"#utility.yul\":6425:6428   */\n      0x80\n        /* \"#utility.yul\":6420:6422   */\n      0x60\n        /* \"#utility.yul\":6409:6418   */\n      dup4\n        /* \"#utility.yul\":6405:6423   */\n      add\n        /* \"#utility.yul\":6398:6429   */\n      mstore\n        /* \"#utility.yul\":6446:6492   */\n      tag_337\n        /* \"#utility.yul\":6487:6490   */\n      0x80\n        /* \"#utility.yul\":6476:6485   */\n      dup4\n        /* \"#utility.yul\":6472:6491   */\n      add\n        /* \"#utility.yul\":6464:6470   */\n      dup5\n        /* \"#utility.yul\":6446:6492   */\n      tag_276\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":6438:6492   */\n      swap7\n        /* \"#utility.yul\":5986:6498   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6503:6752   */\n    tag_227:\n        /* \"#utility.yul\":6572:6578   */\n      0x00\n        /* \"#utility.yul\":6625:6627   */\n      0x20\n        /* \"#utility.yul\":6613:6622   */\n      dup3\n        /* \"#utility.yul\":6604:6611   */\n      dup5\n        /* \"#utility.yul\":6600:6623   */\n      sub\n        /* \"#utility.yul\":6596:6628   */\n      slt\n        /* \"#utility.yul\":6593:6645   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":6641:6642   */\n      0x00\n        /* \"#utility.yul\":6638:6639   */\n      dup1\n        /* \"#utility.yul\":6631:6643   */\n      revert\n        /* \"#utility.yul\":6593:6645   */\n    tag_339:\n        /* \"#utility.yul\":6673:6682   */\n      dup2\n        /* \"#utility.yul\":6667:6683   */\n      mload\n        /* \"#utility.yul\":6692:6722   */\n      tag_179\n        /* \"#utility.yul\":6716:6721   */\n      dup2\n        /* \"#utility.yul\":6692:6722   */\n      tag_274\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220c56e173a6015eb4583e55fb8f99b85ba820ff970d423c2bbad236a5456f8f33164736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_374": {
									"entryPoint": null,
									"id": 374,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_383": {
									"entryPoint": null,
									"id": 383,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 457,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 94,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:3"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:3"
															},
															"nodeType": "YulIf",
															"src": "220:55:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:3"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:3",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:3"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:3"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:3"
															},
															"nodeType": "YulIf",
															"src": "353:36:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:3"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:3"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:3",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:3"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:3"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:3",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:3"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:3"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:3"
															},
															"nodeType": "YulIf",
															"src": "536:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:3",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:3"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:3"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:3"
															},
															"nodeType": "YulIf",
															"src": "698:53:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:3"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:3"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:3"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:3"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:3"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:3",
																"statements": []
															},
															"src": "779:133:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:3"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:3"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:3",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:3",
														"type": ""
													}
												],
												"src": "146:840:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:3"
															},
															"nodeType": "YulIf",
															"src": "1119:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:3"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:3",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:3"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:3"
															},
															"nodeType": "YulIf",
															"src": "1256:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:3"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:3"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:3"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:3"
															},
															"nodeType": "YulIf",
															"src": "1429:36:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:3"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:3"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:3",
														"type": ""
													}
												],
												"src": "991:562:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:3"
															},
															"nodeType": "YulIf",
															"src": "1701:61:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:3",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:3"
															},
															"nodeType": "YulIf",
															"src": "1771:161:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:3",
														"type": ""
													}
												],
												"src": "1558:380:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:3"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:3",
														"type": ""
													}
												],
												"src": "1943:121:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:3",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:3",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:3"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:3"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:3"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:3"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:3",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:3"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:3",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:3"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:3"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:3",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:3",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:3"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:3"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:3"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:3"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:3"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:3",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:3"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:3",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:3"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:3"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:3",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:3"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:3"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:3"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:3"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:3"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:3"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:3",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:3"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:3"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:3",
																			"statements": []
																		},
																		"src": "2516:82:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:3"
															},
															"nodeType": "YulIf",
															"src": "2160:448:3"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:3",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:3",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:3",
														"type": ""
													}
												],
												"src": "2069:545:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:3",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:3"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:3"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:3",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:3"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:3"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:3",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:3"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:3"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:3"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:3",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:3",
														"type": ""
													}
												],
												"src": "2619:166:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:3",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:3"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:3",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:3"
															},
															"nodeType": "YulIf",
															"src": "2929:56:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:3"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:3"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:3"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:3"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:3",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:3",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:3"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:3"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:3",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:3"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:3",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:3"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:3"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:3"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:3"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:3",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:3",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:3"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:3"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:3"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:3"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:3"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:3"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:3"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:3"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:3"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:3"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:3"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:3"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:3"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:3"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:3",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:3"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:3"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:3"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:3",
																					"statements": []
																				},
																				"src": "3376:236:3"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:3",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:3",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:3"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:3"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:3"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:3",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:3"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:3"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:3",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:3"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:3"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:3"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:3",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:3"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:3"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:3",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:3"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:3"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:3"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:3"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:3"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:3"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:3"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:3"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:3"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:3"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:3"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:3"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:3",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:3"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:3"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:3",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:3"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:3"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:3",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:3",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:3",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:3",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:3",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:3",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:3"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:3"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:3"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:3"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:3"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:3"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:3"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:3"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:3"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:3"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:3"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:3"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:3",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:3"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:3"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:3",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:3",
														"type": ""
													}
												],
												"src": "2790:1352:3"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200163638038062001636833981016040819052620000349162000123565b60026200004283826200021c565b5060036200005182826200021c565b50506000805550620002e8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008657600080fd5b81516001600160401b0380821115620000a357620000a36200005e565b604051601f8301601f19908116603f01168101908282118183101715620000ce57620000ce6200005e565b81604052838152602092508683858801011115620000eb57600080fd5b600091505b838210156200010f5785820183015181830184015290820190620000f0565b600093810190920192909252949350505050565b600080604083850312156200013757600080fd5b82516001600160401b03808211156200014f57600080fd5b6200015d8683870162000074565b935060208501519150808211156200017457600080fd5b50620001838582860162000074565b9150509250929050565b600181811c90821680620001a257607f821691505b602082108103620001c357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021757600081815260208120601f850160051c81016020861015620001f25750805b601f850160051c820191505b818110156200021357828155600101620001fe565b5050505b505050565b81516001600160401b038111156200023857620002386200005e565b62000250816200024984546200018d565b84620001c9565b602080601f8311600181146200028857600084156200026f5750858301515b600019600386901b1c1916600185901b17855562000213565b600085815260208120601f198616915b82811015620002b95788860151825594840194600190910190840162000298565b5085821015620002d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61133e80620002f86000396000f3fe6080604052600436106100e85760003560e01c80636352211e1161008a578063b88d4fde11610059578063b88d4fde1461025c578063c634d0321461026f578063c87b56dd14610282578063e985e9c5146102a257600080fd5b80636352211e146101e757806370a082311461020757806395d89b4114610227578063a22cb4651461023c57600080fd5b8063095ea7b3116100c6578063095ea7b31461018957806318160ddd1461019e57806323b872dd146101c157806342842e0e146101d457600080fd5b806301ffc9a7146100ed57806306fdde0314610122578063081812fc14610144575b600080fd5b3480156100f957600080fd5b5061010d610108366004610f2c565b6102f8565b60405190151581526020015b60405180910390f35b34801561012e57600080fd5b506101376103dd565b6040516101199190610fb7565b34801561015057600080fd5b5061016461015f366004610fca565b61046f565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610119565b61019c610197366004611007565b6104d0565b005b3480156101aa57600080fd5b50600154600054035b604051908152602001610119565b61019c6101cf366004611031565b6104e0565b61019c6101e2366004611031565b610715565b3480156101f357600080fd5b50610164610202366004610fca565b610735565b34801561021357600080fd5b506101b361022236600461106d565b610740565b34801561023357600080fd5b506101376107b9565b34801561024857600080fd5b5061019c610257366004611088565b6107c8565b61019c61026a3660046110f3565b61085f565b61019c61027d366004610fca565b6108c6565b34801561028e57600080fd5b5061013761029d366004610fca565b6108d3565b3480156102ae57600080fd5b5061010d6102bd3660046111ed565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260076020908152604080832093909416825291909152205460ff1690565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061038b57507f80ac58cd000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b806103d757507f5b5e139f000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6060600280546103ec90611220565b80601f016020809104026020016040519081016040528092919081815260200182805461041890611220565b80156104655780601f1061043a57610100808354040283529160200191610465565b820191906000526020600020905b81548152906001019060200180831161044857829003601f168201915b5050505050905090565b600061047a82610974565b6104a7576104a77fcf4700e4000000000000000000000000000000000000000000000000000000006109b4565b5060009081526006602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6104dc828260016109be565b5050565b60006104eb82610aac565b73ffffffffffffffffffffffffffffffffffffffff9485169490915081168414610538576105387fa1148100000000000000000000000000000000000000000000000000000000006109b4565b600082815260066020526040902080543380821473ffffffffffffffffffffffffffffffffffffffff8816909114176105a25761057586336102bd565b6105a2576105a27f59c896be000000000000000000000000000000000000000000000000000000006109b4565b80156105ad57600082555b73ffffffffffffffffffffffffffffffffffffffff86811660009081526005602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019055918716808252919020805460010190554260a01b177c0200000000000000000000000000000000000000000000000000000000176000858152600460205260408120919091557c02000000000000000000000000000000000000000000000000000000008416900361069c5760018401600081815260046020526040812054900361069a57600054811461069a5760008181526004602052604090208490555b505b73ffffffffffffffffffffffffffffffffffffffff85168481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a48060000361070c5761070c7fea553b34000000000000000000000000000000000000000000000000000000006109b4565b50505050505050565b6107308383836040518060200160405280600081525061085f565b505050565b60006103d782610aac565b600073ffffffffffffffffffffffffffffffffffffffff8216610786576107867f8f4eb604000000000000000000000000000000000000000000000000000000006109b4565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526005602052604090205467ffffffffffffffff1690565b6060600380546103ec90611220565b33600081815260076020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61086a8484846104e0565b73ffffffffffffffffffffffffffffffffffffffff83163b156108c05761089384848484610b84565b6108c0576108c07fd1a57ed6000000000000000000000000000000000000000000000000000000006109b4565b50505050565b6108d03382610cf4565b50565b60606108de82610974565b61090b5761090b7fa14c4b50000000000000000000000000000000000000000000000000000000006109b4565b600061092260408051602081019091526000815290565b90508051600003610942576040518060200160405280600081525061096d565b8061094c84610d0e565b60405160200161095d929190611273565b6040516020818303038152906040525b9392505050565b60008054821080156103d75750506000908152600460205260409020547c0100000000000000000000000000000000000000000000000000000000161590565b8060005260046000fd5b60006109c983610735565b90508180156109ee57503373ffffffffffffffffffffffffffffffffffffffff821614155b15610a2a576109fd81336102bd565b610a2a57610a2a7fcfb3b942000000000000000000000000000000000000000000000000000000006109b4565b60008381526006602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff88811691821790925591518693918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a450505050565b600081815260046020526040812054907c010000000000000000000000000000000000000000000000000000000082169003610b5b5780600003610b56576000548210610b1c57610b1c7fdf2d9b42000000000000000000000000000000000000000000000000000000006109b4565b5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016000818152600460205260409020548015610b1d575b919050565b610b567fdf2d9b42000000000000000000000000000000000000000000000000000000006109b4565b6040517f150b7a0200000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff85169063150b7a0290610bdf9033908990889088906004016112a2565b6020604051808303816000875af1925050508015610c38575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610c35918101906112eb565b60015b610ca6573d808015610c66576040519150601f19603f3d011682016040523d82523d6000602084013e610c6b565b606091505b508051600003610c9e57610c9e7fd1a57ed6000000000000000000000000000000000000000000000000000000006109b4565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050949350505050565b6104dc828260405180602001604052806000815250610d70565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a900480610d2857508190037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909101908152919050565b610d7a8383610dff565b73ffffffffffffffffffffffffffffffffffffffff83163b15610730576000548281035b610db16000868380600101945086610b84565b610dde57610dde7fd1a57ed6000000000000000000000000000000000000000000000000000000006109b4565b818110610d9e578160005414610df857610df860006109b4565b5050505050565b6000805490829003610e3457610e347fb562e8dd000000000000000000000000000000000000000000000000000000006109b4565b600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff87164260a01b6001881460e11b17811790915580845260059092528220805468010000000000000001860201905590819003610eb957610eb97f2e076300000000000000000000000000000000000000000000000000000000006109b4565b818301825b808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4818160010191508103610ebe575060005550505050565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146108d057600080fd5b600060208284031215610f3e57600080fd5b813561096d81610efe565b60005b83811015610f64578181015183820152602001610f4c565b50506000910152565b60008151808452610f85816020860160208601610f49565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061096d6020830184610f6d565b600060208284031215610fdc57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610b5657600080fd5b6000806040838503121561101a57600080fd5b61102383610fe3565b946020939093013593505050565b60008060006060848603121561104657600080fd5b61104f84610fe3565b925061105d60208501610fe3565b9150604084013590509250925092565b60006020828403121561107f57600080fd5b61096d82610fe3565b6000806040838503121561109b57600080fd5b6110a483610fe3565b9150602083013580151581146110b957600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561110957600080fd5b61111285610fe3565b935061112060208601610fe3565b925060408501359150606085013567ffffffffffffffff8082111561114457600080fd5b818701915087601f83011261115857600080fd5b81358181111561116a5761116a6110c4565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156111b0576111b06110c4565b816040528281528a60208487010111156111c957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561120057600080fd5b61120983610fe3565b915061121760208401610fe3565b90509250929050565b600181811c9082168061123457607f821691505b60208210810361126d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60008351611285818460208801610f49565b835190830190611299818360208801610f49565b01949350505050565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526112e16080830184610f6d565b9695505050505050565b6000602082840312156112fd57600080fd5b815161096d81610efe56fea2646970667358221220c56e173a6015eb4583e55fb8f99b85ba820ff970d423c2bbad236a5456f8f33164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1636 CODESIZE SUB DUP1 PUSH3 0x1636 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x123 JUMP JUMPDEST PUSH1 0x2 PUSH3 0x42 DUP4 DUP3 PUSH3 0x21C JUMP JUMPDEST POP PUSH1 0x3 PUSH3 0x51 DUP3 DUP3 PUSH3 0x21C JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 SSTORE POP PUSH3 0x2E8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0xA3 JUMPI PUSH3 0xA3 PUSH3 0x5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCE JUMPI PUSH3 0xCE PUSH3 0x5E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10F JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xF0 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x15D DUP7 DUP4 DUP8 ADD PUSH3 0x74 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x174 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x183 DUP6 DUP3 DUP7 ADD PUSH3 0x74 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1A2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1C3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x217 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1F2 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x213 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FE JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x238 JUMPI PUSH3 0x238 PUSH3 0x5E JUMP JUMPDEST PUSH3 0x250 DUP2 PUSH3 0x249 DUP5 SLOAD PUSH3 0x18D JUMP JUMPDEST DUP5 PUSH3 0x1C9 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x288 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26F JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x213 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B9 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x298 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D8 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x133E DUP1 PUSH3 0x2F8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xC634D032 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x144 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0xF2C JUMP JUMPDEST PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xFB7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x119 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x1007 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x119 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0x1031 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1031 JUMP JUMPDEST PUSH2 0x715 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x735 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B3 PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x106D JUMP JUMPDEST PUSH2 0x740 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 PUSH2 0x7B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x1088 JUMP JUMPDEST PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0x10F3 JUMP JUMPDEST PUSH2 0x85F JUMP JUMPDEST PUSH2 0x19C PUSH2 0x27D CALLDATASIZE PUSH1 0x4 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x8C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x8D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x11ED JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ DUP1 PUSH2 0x38B JUMPI POP PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x3D7 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3EC SWAP1 PUSH2 0x1220 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x418 SWAP1 PUSH2 0x1220 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x465 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x43A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x465 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x448 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47A DUP3 PUSH2 0x974 JUMP JUMPDEST PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x4DC DUP3 DUP3 PUSH1 0x1 PUSH2 0x9BE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EB DUP3 PUSH2 0xAAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND SWAP5 SWAP1 SWAP2 POP DUP2 AND DUP5 EQ PUSH2 0x538 JUMPI PUSH2 0x538 PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x5A2 JUMPI PUSH2 0x575 DUP7 CALLER PUSH2 0x2BD JUMP JUMPDEST PUSH2 0x5A2 JUMPI PUSH2 0x5A2 PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5AD JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SWAP1 SUB PUSH2 0x69C JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x69A JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x69A JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 DUP1 PUSH1 0x0 SUB PUSH2 0x70C JUMPI PUSH2 0x70C PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x730 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x85F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D7 DUP3 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x786 JUMPI PUSH2 0x786 PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3EC SWAP1 PUSH2 0x1220 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x86A DUP5 DUP5 DUP5 PUSH2 0x4E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND EXTCODESIZE ISZERO PUSH2 0x8C0 JUMPI PUSH2 0x893 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB84 JUMP JUMPDEST PUSH2 0x8C0 JUMPI PUSH2 0x8C0 PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x8D0 CALLER DUP3 PUSH2 0xCF4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8DE DUP3 PUSH2 0x974 JUMP JUMPDEST PUSH2 0x90B JUMPI PUSH2 0x90B PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x922 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x942 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x96D JUMP JUMPDEST DUP1 PUSH2 0x94C DUP5 PUSH2 0xD0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x95D SWAP3 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x3D7 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 AND ISZERO SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9C9 DUP4 PUSH2 0x735 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0x9EE JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xA2A JUMPI PUSH2 0x9FD DUP2 CALLER PUSH2 0x2BD JUMP JUMPDEST PUSH2 0xA2A JUMPI PUSH2 0xA2A PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP7 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 SUB PUSH2 0xB5B JUMPI DUP1 PUSH1 0x0 SUB PUSH2 0xB56 JUMPI PUSH1 0x0 SLOAD DUP3 LT PUSH2 0xB1C JUMPI PUSH2 0xB1C PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xB1D JUMPI JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB56 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xBDF SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC38 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC35 SWAP2 DUP2 ADD SWAP1 PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xCA6 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xC66 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC6B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xC9E JUMPI PUSH2 0xC9E PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x4DC DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH1 0x0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0xD28 JUMPI POP DUP2 SWAP1 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD7A DUP4 DUP4 PUSH2 0xDFF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND EXTCODESIZE ISZERO PUSH2 0x730 JUMPI PUSH1 0x0 SLOAD DUP3 DUP2 SUB JUMPDEST PUSH2 0xDB1 PUSH1 0x0 DUP7 DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP DUP7 PUSH2 0xB84 JUMP JUMPDEST PUSH2 0xDDE JUMPI PUSH2 0xDDE PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0xD9E JUMPI DUP2 PUSH1 0x0 SLOAD EQ PUSH2 0xDF8 JUMPI PUSH2 0xDF8 PUSH1 0x0 PUSH2 0x9B4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 DUP3 SWAP1 SUB PUSH2 0xE34 JUMPI PUSH2 0xE34 PUSH32 0xB562E8DD00000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND TIMESTAMP PUSH1 0xA0 SHL PUSH1 0x1 DUP9 EQ PUSH1 0xE1 SHL OR DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000001 DUP7 MUL ADD SWAP1 SSTORE SWAP1 DUP2 SWAP1 SUB PUSH2 0xEB9 JUMPI PUSH2 0xEB9 PUSH32 0x2E07630000000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST DUP2 DUP4 ADD DUP3 JUMPDEST DUP1 DUP4 PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 DUP2 DUP2 PUSH1 0x1 ADD SWAP2 POP DUP2 SUB PUSH2 0xEBE JUMPI POP PUSH1 0x0 SSTORE POP POP POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x8D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x96D DUP2 PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF64 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF4C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xF85 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x96D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xB56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x101A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1023 DUP4 PUSH2 0xFE3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1046 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x104F DUP5 PUSH2 0xFE3 JUMP JUMPDEST SWAP3 POP PUSH2 0x105D PUSH1 0x20 DUP6 ADD PUSH2 0xFE3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x107F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x96D DUP3 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x109B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10A4 DUP4 PUSH2 0xFE3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x10B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1112 DUP6 PUSH2 0xFE3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1120 PUSH1 0x20 DUP7 ADD PUSH2 0xFE3 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x116A JUMPI PUSH2 0x116A PUSH2 0x10C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x11B0 JUMPI PUSH2 0x11B0 PUSH2 0x10C4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x11C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1209 DUP4 PUSH2 0xFE3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1217 PUSH1 0x20 DUP5 ADD PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1234 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x126D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1285 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xF49 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1299 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xF49 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x12E1 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xF6D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x96D DUP2 PUSH2 0xEFE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 PUSH15 0x173A6015EB4583E55FB8F99B85BA82 0xF 0xF9 PUSH17 0xD423C2BBAD236A5456F8F33164736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "895:42064:2:-:0;;;5052:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5118:5;:13;5126:5;5118;:13;:::i;:::-;-1:-1:-1;5141:7:2;:17;5151:7;5141;:17;:::i;:::-;-1:-1:-1;;5588:7:2;5168:31;;-1:-1:-1;895:42064:2;;14:127:3;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:3;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:3;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:3:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:3;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:3;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:3;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:3;;;3992:26;3943:89;-1:-1:-1;;2747:1:3;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:3;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:3;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:3;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:3:o;:::-;895:42064:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1263": {
									"entryPoint": null,
									"id": 1263,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_1704": {
									"entryPoint": 2494,
									"id": 1704,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_645": {
									"entryPoint": null,
									"id": 645,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1250": {
									"entryPoint": null,
									"id": 1250,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1319": {
									"entryPoint": 2948,
									"id": 1319,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_972": {
									"entryPoint": 2420,
									"id": 972,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_1929": {
									"entryPoint": null,
									"id": 1929,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_1005": {
									"entryPoint": null,
									"id": 1005,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_986": {
									"entryPoint": null,
									"id": 986,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_1438": {
									"entryPoint": 3583,
									"id": 1438,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSenderERC721A_1972": {
									"entryPoint": null,
									"id": 1972,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_1962": {
									"entryPoint": null,
									"id": 1962,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_nextInitializedFlag_861": {
									"entryPoint": null,
									"id": 861,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_packOwnershipData_851": {
									"entryPoint": null,
									"id": 851,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_785": {
									"entryPoint": 2732,
									"id": 785,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_revert_1990": {
									"entryPoint": 2484,
									"id": 1990,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeMint_1624": {
									"entryPoint": 3440,
									"id": 1624,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_safeMint_1639": {
									"entryPoint": 3316,
									"id": 1639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_383": {
									"entryPoint": null,
									"id": 383,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_1982": {
									"entryPoint": 3342,
									"id": 1982,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_877": {
									"entryPoint": 1232,
									"id": 877,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_458": {
									"entryPoint": 1856,
									"id": 458,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_902": {
									"entryPoint": 1135,
									"id": 902,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_946": {
									"entryPoint": null,
									"id": 946,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mintToken_260": {
									"entryPoint": 2246,
									"id": 260,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@name_581": {
									"entryPoint": 989,
									"id": 581,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_665": {
									"entryPoint": 1845,
									"id": 665,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1197": {
									"entryPoint": 1813,
									"id": 1197,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1237": {
									"entryPoint": 2143,
									"id": 1237,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_928": {
									"entryPoint": 1992,
									"id": 928,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_571": {
									"entryPoint": 760,
									"id": 571,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_591": {
									"entryPoint": 1977,
									"id": 591,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_636": {
									"entryPoint": 2259,
									"id": 636,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_408": {
									"entryPoint": null,
									"id": 408,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1178": {
									"entryPoint": 1248,
									"id": 1178,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 4339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4723,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4770,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3913,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 4292,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6754:3",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:133:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "99:66:3",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:78:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:89:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:97:3"
															},
															"nodeType": "YulIf",
															"src": "68:117:3"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:3",
														"type": ""
													}
												],
												"src": "14:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "265:176:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "311:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "323:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "313:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "313:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "313:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "286:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "295:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "282:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "282:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "307:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "278:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "278:32:3"
															},
															"nodeType": "YulIf",
															"src": "275:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "336:36:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "349:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "349:23:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "340:5:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "405:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "381:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "381:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "381:30:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "420:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "430:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "420:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "231:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "242:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "254:6:3",
														"type": ""
													}
												],
												"src": "196:245:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "541:92:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "551:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "563:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "574:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "559:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "559:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "551:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "593:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "618:6:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "611:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "611:14:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "604:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "604:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "586:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "586:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "586:41:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "510:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "521:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "532:4:3",
														"type": ""
													}
												],
												"src": "446:187:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "704:184:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "714:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "723:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "718:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "783:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "808:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "813:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "804:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "804:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "827:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "832:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "823:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "823:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "817:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "817:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "797:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "797:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "797:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "744:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "747:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "741:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "741:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "755:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "757:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "766:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "769:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "762:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "762:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "757:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "737:3:3",
																"statements": []
															},
															"src": "733:113:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "866:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "862:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "862:16:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "855:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "855:27:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "855:27:3"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "682:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "687:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "692:6:3",
														"type": ""
													}
												],
												"src": "638:250:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "943:280:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "953:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "973:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "967:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:12:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "957:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "995:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1000:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "988:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "988:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "988:19:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1055:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1062:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1051:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1051:16:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1073:3:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1078:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1069:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1069:14:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1085:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1016:34:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1016:76:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1016:76:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1101:116:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1116:3:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1129:6:3"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1137:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1125:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1125:15:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1142:66:3",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:88:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1112:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1112:98:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1212:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1108:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1108:109:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1101:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "920:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "927:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "935:3:3",
														"type": ""
													}
												],
												"src": "893:330:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1349:99:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1366:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1377:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1359:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1359:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1359:21:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1389:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1415:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1427:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1438:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1423:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1423:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1397:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:45:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1389:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1318:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1329:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1340:4:3",
														"type": ""
													}
												],
												"src": "1228:220:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1523:110:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1569:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1578:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1581:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1571:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1571:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1571:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1544:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1553:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1540:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1540:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1565:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1536:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1536:32:3"
															},
															"nodeType": "YulIf",
															"src": "1533:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1594:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1617:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1604:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1604:23:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1594:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1489:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1500:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1512:6:3",
														"type": ""
													}
												],
												"src": "1453:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1739:125:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1749:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1761:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1772:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1757:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1757:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1749:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1791:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1806:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1814:42:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1802:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1802:55:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1784:74:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1784:74:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1708:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1719:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1730:4:3",
														"type": ""
													}
												],
												"src": "1638:226:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1918:147:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1928:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1950:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1937:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1937:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1928:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2043:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2052:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2055:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2045:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2045:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2045:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1979:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1990:5:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1997:42:3",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1986:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1986:54:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1976:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1976:65:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1969:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1969:73:3"
															},
															"nodeType": "YulIf",
															"src": "1966:93:3"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1897:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1908:5:3",
														"type": ""
													}
												],
												"src": "1869:196:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2157:167:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2203:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2212:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2215:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2205:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2205:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2205:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2187:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2174:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2174:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2199:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2170:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2170:32:3"
															},
															"nodeType": "YulIf",
															"src": "2167:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2228:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2257:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2238:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2228:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2276:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2303:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2314:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2299:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2299:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2286:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:32:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2276:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2115:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2126:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2138:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2146:6:3",
														"type": ""
													}
												],
												"src": "2070:254:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2430:76:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2440:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2452:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2463:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2448:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2448:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2440:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2482:9:3"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2493:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2475:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2475:25:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2475:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2399:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2410:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2421:4:3",
														"type": ""
													}
												],
												"src": "2329:177:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2615:224:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2661:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2670:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2673:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2663:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2663:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2663:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2636:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2645:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2632:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2632:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2657:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2628:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2628:32:3"
															},
															"nodeType": "YulIf",
															"src": "2625:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2686:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2715:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2696:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2696:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2686:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2734:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2767:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2778:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2763:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2763:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2744:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:38:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2734:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2791:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2818:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2829:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2814:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2814:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2801:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2801:32:3"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2791:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2565:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2576:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2588:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2596:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2604:6:3",
														"type": ""
													}
												],
												"src": "2511:328:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2914:116:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2960:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2969:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2972:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2962:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2962:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2962:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2935:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2944:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2931:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2931:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2956:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2927:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2927:32:3"
															},
															"nodeType": "YulIf",
															"src": "2924:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2985:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3014:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2995:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2985:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2880:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2891:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2903:6:3",
														"type": ""
													}
												],
												"src": "2844:186:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3119:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3165:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3174:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3177:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3167:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3167:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3167:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3140:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3149:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3136:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3136:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3161:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3132:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3132:32:3"
															},
															"nodeType": "YulIf",
															"src": "3129:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3190:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3219:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3200:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3200:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3190:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3238:45:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3268:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3279:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3264:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3264:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3251:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3251:32:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3242:5:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3336:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3345:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3348:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3338:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3338:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3338:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3305:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3326:5:3"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3319:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3319:13:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3312:6:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3312:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3302:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3302:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3295:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:40:3"
															},
															"nodeType": "YulIf",
															"src": "3292:60:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3361:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3371:5:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3361:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3077:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3088:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3100:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3108:6:3",
														"type": ""
													}
												],
												"src": "3035:347:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3419:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3436:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3439:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3429:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3429:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3533:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3536:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3526:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3526:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3526:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3557:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3560:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3550:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3550:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3550:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3387:184:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3706:1067:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3753:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3762:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3765:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3755:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3755:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3755:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3727:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3736:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3723:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3723:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3748:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3719:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3719:33:3"
															},
															"nodeType": "YulIf",
															"src": "3716:53:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3778:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3807:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3788:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3788:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3778:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3826:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3859:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3870:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3855:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3855:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3836:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3836:38:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3826:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3883:42:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3910:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3921:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3906:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3906:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3893:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3893:32:3"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3883:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3934:46:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3965:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3976:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3961:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3961:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3948:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3948:32:3"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3938:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3989:28:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3999:18:3",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3993:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4044:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4053:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4056:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4046:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4046:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4046:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4032:6:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4040:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4029:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4029:14:3"
															},
															"nodeType": "YulIf",
															"src": "4026:34:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4069:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4083:9:3"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4094:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4079:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4079:22:3"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4073:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4149:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4158:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4161:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4151:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4151:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4151:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4128:2:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4132:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4124:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4124:13:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4139:7:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4120:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4120:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4113:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4113:35:3"
															},
															"nodeType": "YulIf",
															"src": "4110:55:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4174:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4197:2:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4184:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4184:16:3"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4178:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4223:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4225:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4225:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4225:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4215:2:3"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4219:2:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4212:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4212:10:3"
															},
															"nodeType": "YulIf",
															"src": "4209:36:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4254:76:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4264:66:3",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4258:2:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4339:23:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4359:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4353:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4353:9:3"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4343:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4371:71:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4393:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "4417:2:3"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4421:4:3",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4413:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4413:13:3"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "4428:2:3"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "4409:3:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4409:22:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4433:2:3",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4405:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4405:31:3"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4438:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4401:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4401:40:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4389:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4389:53:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4375:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4501:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4503:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4503:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4503:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4460:10:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4472:2:3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4457:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4457:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4480:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4492:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4477:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4477:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4454:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4454:46:3"
															},
															"nodeType": "YulIf",
															"src": "4451:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4539:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4543:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4532:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4532:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4532:22:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4570:6:3"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4578:2:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4563:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:18:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4563:18:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4627:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4636:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4639:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4629:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4629:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4629:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4604:2:3"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4608:2:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4600:11:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4613:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4596:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4596:20:3"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4618:7:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4593:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4593:33:3"
															},
															"nodeType": "YulIf",
															"src": "4590:53:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4669:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4677:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4665:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4665:15:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4686:2:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4690:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4682:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4682:11:3"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4695:2:3"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4652:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4652:46:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4652:46:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:3"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4730:2:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4718:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4718:15:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4735:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4714:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4714:24:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4740:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4707:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4707:35:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4707:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4751:16:3",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4761:6:3"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4751:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3648:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3659:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3671:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3679:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3687:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3695:6:3",
														"type": ""
													}
												],
												"src": "3576:1197:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4865:173:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4911:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4920:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4923:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4913:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4913:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4913:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4886:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4895:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4882:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4882:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4907:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4878:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4878:32:3"
															},
															"nodeType": "YulIf",
															"src": "4875:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4936:39:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4965:9:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4946:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4946:29:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4936:6:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4984:48:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5017:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5028:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5013:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5013:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4994:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4994:38:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4984:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4823:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4834:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4846:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4854:6:3",
														"type": ""
													}
												],
												"src": "4778:260:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5098:382:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5108:22:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5122:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5125:4:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5118:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5118:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5108:6:3"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5139:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5169:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5175:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5165:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5165:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5143:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5216:31:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5218:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5232:6:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5240:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5228:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5228:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5218:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5196:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5189:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5189:26:3"
															},
															"nodeType": "YulIf",
															"src": "5186:61:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5306:168:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5327:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5330:77:3",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5320:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5320:88:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5320:88:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5428:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5431:4:3",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5421:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5421:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5421:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5456:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5459:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5449:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5449:15:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5449:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5262:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5285:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5293:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5282:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5282:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5259:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5259:38:3"
															},
															"nodeType": "YulIf",
															"src": "5256:218:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5078:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5087:6:3",
														"type": ""
													}
												],
												"src": "5043:437:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5672:309:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5682:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5702:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5696:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5696:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5686:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5757:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5765:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5753:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5753:17:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5772:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5777:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "5718:34:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5718:66:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5718:66:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5793:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5810:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5815:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5806:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5806:16:3"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "5797:5:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5831:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5853:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5847:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5847:13:3"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "5835:8:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5908:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5916:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5904:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5904:17:3"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "5923:5:3"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "5930:8:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "5869:34:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5869:70:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5869:70:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5948:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "5959:5:3"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "5966:8:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5955:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5955:20:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5948:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5640:3:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5645:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5653:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5664:3:3",
														"type": ""
													}
												],
												"src": "5485:496:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6189:309:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6199:52:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6209:42:3",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6203:2:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6267:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6282:6:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6290:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6278:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6278:15:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6260:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6260:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6260:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6314:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6325:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6310:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6310:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6334:6:3"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6342:2:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6330:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6330:15:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6303:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6303:43:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6303:43:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6366:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6377:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6362:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6362:18:3"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6382:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6355:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6355:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6355:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6409:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6420:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6405:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6405:18:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6425:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6398:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6398:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6398:31:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6438:54:3",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6464:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6476:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6487:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6472:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6472:19:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "6446:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6446:46:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6438:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6134:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6145:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6153:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6161:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6169:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6180:4:3",
														"type": ""
													}
												],
												"src": "5986:512:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6583:169:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6629:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6638:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6641:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6631:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6631:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6631:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6604:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6613:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6600:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6600:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6625:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6596:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6596:32:3"
															},
															"nodeType": "YulIf",
															"src": "6593:52:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6654:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6667:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6667:16:3"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6658:5:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6716:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "6692:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6692:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6692:30:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6731:15:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6741:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6731:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6549:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6560:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6572:6:3",
														"type": ""
													}
												],
												"src": "6503:249:3"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100e85760003560e01c80636352211e1161008a578063b88d4fde11610059578063b88d4fde1461025c578063c634d0321461026f578063c87b56dd14610282578063e985e9c5146102a257600080fd5b80636352211e146101e757806370a082311461020757806395d89b4114610227578063a22cb4651461023c57600080fd5b8063095ea7b3116100c6578063095ea7b31461018957806318160ddd1461019e57806323b872dd146101c157806342842e0e146101d457600080fd5b806301ffc9a7146100ed57806306fdde0314610122578063081812fc14610144575b600080fd5b3480156100f957600080fd5b5061010d610108366004610f2c565b6102f8565b60405190151581526020015b60405180910390f35b34801561012e57600080fd5b506101376103dd565b6040516101199190610fb7565b34801561015057600080fd5b5061016461015f366004610fca565b61046f565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610119565b61019c610197366004611007565b6104d0565b005b3480156101aa57600080fd5b50600154600054035b604051908152602001610119565b61019c6101cf366004611031565b6104e0565b61019c6101e2366004611031565b610715565b3480156101f357600080fd5b50610164610202366004610fca565b610735565b34801561021357600080fd5b506101b361022236600461106d565b610740565b34801561023357600080fd5b506101376107b9565b34801561024857600080fd5b5061019c610257366004611088565b6107c8565b61019c61026a3660046110f3565b61085f565b61019c61027d366004610fca565b6108c6565b34801561028e57600080fd5b5061013761029d366004610fca565b6108d3565b3480156102ae57600080fd5b5061010d6102bd3660046111ed565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260076020908152604080832093909416825291909152205460ff1690565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061038b57507f80ac58cd000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b806103d757507f5b5e139f000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6060600280546103ec90611220565b80601f016020809104026020016040519081016040528092919081815260200182805461041890611220565b80156104655780601f1061043a57610100808354040283529160200191610465565b820191906000526020600020905b81548152906001019060200180831161044857829003601f168201915b5050505050905090565b600061047a82610974565b6104a7576104a77fcf4700e4000000000000000000000000000000000000000000000000000000006109b4565b5060009081526006602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6104dc828260016109be565b5050565b60006104eb82610aac565b73ffffffffffffffffffffffffffffffffffffffff9485169490915081168414610538576105387fa1148100000000000000000000000000000000000000000000000000000000006109b4565b600082815260066020526040902080543380821473ffffffffffffffffffffffffffffffffffffffff8816909114176105a25761057586336102bd565b6105a2576105a27f59c896be000000000000000000000000000000000000000000000000000000006109b4565b80156105ad57600082555b73ffffffffffffffffffffffffffffffffffffffff86811660009081526005602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019055918716808252919020805460010190554260a01b177c0200000000000000000000000000000000000000000000000000000000176000858152600460205260408120919091557c02000000000000000000000000000000000000000000000000000000008416900361069c5760018401600081815260046020526040812054900361069a57600054811461069a5760008181526004602052604090208490555b505b73ffffffffffffffffffffffffffffffffffffffff85168481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a48060000361070c5761070c7fea553b34000000000000000000000000000000000000000000000000000000006109b4565b50505050505050565b6107308383836040518060200160405280600081525061085f565b505050565b60006103d782610aac565b600073ffffffffffffffffffffffffffffffffffffffff8216610786576107867f8f4eb604000000000000000000000000000000000000000000000000000000006109b4565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526005602052604090205467ffffffffffffffff1690565b6060600380546103ec90611220565b33600081815260076020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61086a8484846104e0565b73ffffffffffffffffffffffffffffffffffffffff83163b156108c05761089384848484610b84565b6108c0576108c07fd1a57ed6000000000000000000000000000000000000000000000000000000006109b4565b50505050565b6108d03382610cf4565b50565b60606108de82610974565b61090b5761090b7fa14c4b50000000000000000000000000000000000000000000000000000000006109b4565b600061092260408051602081019091526000815290565b90508051600003610942576040518060200160405280600081525061096d565b8061094c84610d0e565b60405160200161095d929190611273565b6040516020818303038152906040525b9392505050565b60008054821080156103d75750506000908152600460205260409020547c0100000000000000000000000000000000000000000000000000000000161590565b8060005260046000fd5b60006109c983610735565b90508180156109ee57503373ffffffffffffffffffffffffffffffffffffffff821614155b15610a2a576109fd81336102bd565b610a2a57610a2a7fcfb3b942000000000000000000000000000000000000000000000000000000006109b4565b60008381526006602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff88811691821790925591518693918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a450505050565b600081815260046020526040812054907c010000000000000000000000000000000000000000000000000000000082169003610b5b5780600003610b56576000548210610b1c57610b1c7fdf2d9b42000000000000000000000000000000000000000000000000000000006109b4565b5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016000818152600460205260409020548015610b1d575b919050565b610b567fdf2d9b42000000000000000000000000000000000000000000000000000000006109b4565b6040517f150b7a0200000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff85169063150b7a0290610bdf9033908990889088906004016112a2565b6020604051808303816000875af1925050508015610c38575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610c35918101906112eb565b60015b610ca6573d808015610c66576040519150601f19603f3d011682016040523d82523d6000602084013e610c6b565b606091505b508051600003610c9e57610c9e7fd1a57ed6000000000000000000000000000000000000000000000000000000006109b4565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050949350505050565b6104dc828260405180602001604052806000815250610d70565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a900480610d2857508190037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909101908152919050565b610d7a8383610dff565b73ffffffffffffffffffffffffffffffffffffffff83163b15610730576000548281035b610db16000868380600101945086610b84565b610dde57610dde7fd1a57ed6000000000000000000000000000000000000000000000000000000006109b4565b818110610d9e578160005414610df857610df860006109b4565b5050505050565b6000805490829003610e3457610e347fb562e8dd000000000000000000000000000000000000000000000000000000006109b4565b600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff87164260a01b6001881460e11b17811790915580845260059092528220805468010000000000000001860201905590819003610eb957610eb97f2e076300000000000000000000000000000000000000000000000000000000006109b4565b818301825b808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4818160010191508103610ebe575060005550505050565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146108d057600080fd5b600060208284031215610f3e57600080fd5b813561096d81610efe565b60005b83811015610f64578181015183820152602001610f4c565b50506000910152565b60008151808452610f85816020860160208601610f49565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061096d6020830184610f6d565b600060208284031215610fdc57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610b5657600080fd5b6000806040838503121561101a57600080fd5b61102383610fe3565b946020939093013593505050565b60008060006060848603121561104657600080fd5b61104f84610fe3565b925061105d60208501610fe3565b9150604084013590509250925092565b60006020828403121561107f57600080fd5b61096d82610fe3565b6000806040838503121561109b57600080fd5b6110a483610fe3565b9150602083013580151581146110b957600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561110957600080fd5b61111285610fe3565b935061112060208601610fe3565b925060408501359150606085013567ffffffffffffffff8082111561114457600080fd5b818701915087601f83011261115857600080fd5b81358181111561116a5761116a6110c4565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156111b0576111b06110c4565b816040528281528a60208487010111156111c957600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561120057600080fd5b61120983610fe3565b915061121760208401610fe3565b90509250929050565b600181811c9082168061123457607f821691505b60208210810361126d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60008351611285818460208801610f49565b835190830190611299818360208801610f49565b01949350505050565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526112e16080830184610f6d565b9695505050505050565b6000602082840312156112fd57600080fd5b815161096d81610efe56fea2646970667358221220c56e173a6015eb4583e55fb8f99b85ba820ff970d423c2bbad236a5456f8f33164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xC634D032 EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x144 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0xF2C JUMP JUMPDEST PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xFB7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x119 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x1007 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x119 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0x1031 JUMP JUMPDEST PUSH2 0x4E0 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1031 JUMP JUMPDEST PUSH2 0x715 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x164 PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x735 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B3 PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x106D JUMP JUMPDEST PUSH2 0x740 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 PUSH2 0x7B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0x1088 JUMP JUMPDEST PUSH2 0x7C8 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x26A CALLDATASIZE PUSH1 0x4 PUSH2 0x10F3 JUMP JUMPDEST PUSH2 0x85F JUMP JUMPDEST PUSH2 0x19C PUSH2 0x27D CALLDATASIZE PUSH1 0x4 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x8C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0xFCA JUMP JUMPDEST PUSH2 0x8D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0x11ED JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ DUP1 PUSH2 0x38B JUMPI POP PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x3D7 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3EC SWAP1 PUSH2 0x1220 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x418 SWAP1 PUSH2 0x1220 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x465 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x43A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x465 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x448 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47A DUP3 PUSH2 0x974 JUMP JUMPDEST PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x4DC DUP3 DUP3 PUSH1 0x1 PUSH2 0x9BE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EB DUP3 PUSH2 0xAAC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND SWAP5 SWAP1 SWAP2 POP DUP2 AND DUP5 EQ PUSH2 0x538 JUMPI PUSH2 0x538 PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x5A2 JUMPI PUSH2 0x575 DUP7 CALLER PUSH2 0x2BD JUMP JUMPDEST PUSH2 0x5A2 JUMPI PUSH2 0x5A2 PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5AD JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SWAP1 SUB PUSH2 0x69C JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x69A JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x69A JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 DUP1 PUSH1 0x0 SUB PUSH2 0x70C JUMPI PUSH2 0x70C PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x730 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x85F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D7 DUP3 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x786 JUMPI PUSH2 0x786 PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3EC SWAP1 PUSH2 0x1220 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x86A DUP5 DUP5 DUP5 PUSH2 0x4E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND EXTCODESIZE ISZERO PUSH2 0x8C0 JUMPI PUSH2 0x893 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB84 JUMP JUMPDEST PUSH2 0x8C0 JUMPI PUSH2 0x8C0 PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x8D0 CALLER DUP3 PUSH2 0xCF4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8DE DUP3 PUSH2 0x974 JUMP JUMPDEST PUSH2 0x90B JUMPI PUSH2 0x90B PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x922 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x942 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x96D JUMP JUMPDEST DUP1 PUSH2 0x94C DUP5 PUSH2 0xD0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x95D SWAP3 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT DUP1 ISZERO PUSH2 0x3D7 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 AND ISZERO SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9C9 DUP4 PUSH2 0x735 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0x9EE JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xA2A JUMPI PUSH2 0x9FD DUP2 CALLER PUSH2 0x2BD JUMP JUMPDEST PUSH2 0xA2A JUMPI PUSH2 0xA2A PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP7 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 SUB PUSH2 0xB5B JUMPI DUP1 PUSH1 0x0 SUB PUSH2 0xB56 JUMPI PUSH1 0x0 SLOAD DUP3 LT PUSH2 0xB1C JUMPI PUSH2 0xB1C PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xB1D JUMPI JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB56 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xBDF SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC38 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC35 SWAP2 DUP2 ADD SWAP1 PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xCA6 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xC66 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC6B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xC9E JUMPI PUSH2 0xC9E PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x4DC DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH1 0x0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0xD28 JUMPI POP DUP2 SWAP1 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD7A DUP4 DUP4 PUSH2 0xDFF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND EXTCODESIZE ISZERO PUSH2 0x730 JUMPI PUSH1 0x0 SLOAD DUP3 DUP2 SUB JUMPDEST PUSH2 0xDB1 PUSH1 0x0 DUP7 DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP DUP7 PUSH2 0xB84 JUMP JUMPDEST PUSH2 0xDDE JUMPI PUSH2 0xDDE PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0xD9E JUMPI DUP2 PUSH1 0x0 SLOAD EQ PUSH2 0xDF8 JUMPI PUSH2 0xDF8 PUSH1 0x0 PUSH2 0x9B4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 DUP3 SWAP1 SUB PUSH2 0xE34 JUMPI PUSH2 0xE34 PUSH32 0xB562E8DD00000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND TIMESTAMP PUSH1 0xA0 SHL PUSH1 0x1 DUP9 EQ PUSH1 0xE1 SHL OR DUP2 OR SWAP1 SWAP2 SSTORE DUP1 DUP5 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000001 DUP7 MUL ADD SWAP1 SSTORE SWAP1 DUP2 SWAP1 SUB PUSH2 0xEB9 JUMPI PUSH2 0xEB9 PUSH32 0x2E07630000000000000000000000000000000000000000000000000000000000 PUSH2 0x9B4 JUMP JUMPDEST DUP2 DUP4 ADD DUP3 JUMPDEST DUP1 DUP4 PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 DUP2 DUP2 PUSH1 0x1 ADD SWAP2 POP DUP2 SUB PUSH2 0xEBE JUMPI POP PUSH1 0x0 SSTORE POP POP POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x8D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x96D DUP2 PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF64 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF4C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xF85 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x96D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF6D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xB56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x101A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1023 DUP4 PUSH2 0xFE3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1046 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x104F DUP5 PUSH2 0xFE3 JUMP JUMPDEST SWAP3 POP PUSH2 0x105D PUSH1 0x20 DUP6 ADD PUSH2 0xFE3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x107F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x96D DUP3 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x109B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10A4 DUP4 PUSH2 0xFE3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x10B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1112 DUP6 PUSH2 0xFE3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1120 PUSH1 0x20 DUP7 ADD PUSH2 0xFE3 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x116A JUMPI PUSH2 0x116A PUSH2 0x10C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x11B0 JUMPI PUSH2 0x11B0 PUSH2 0x10C4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x11C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1209 DUP4 PUSH2 0xFE3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1217 PUSH1 0x20 DUP5 ADD PUSH2 0xFE3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1234 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x126D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1285 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xF49 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1299 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xF49 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP8 AND DUP4 MSTORE DUP1 DUP7 AND PUSH1 0x20 DUP5 ADD MSTORE POP DUP4 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x12E1 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xF6D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x96D DUP2 PUSH2 0xEFE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 PUSH15 0x173A6015EB4583E55FB8F99B85BA82 0xF 0xF9 PUSH17 0xD423C2BBAD236A5456F8F33164736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "895:42064:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9270:630;;;;;;;;;;-1:-1:-1;9270:630:2;;;;;:::i;:::-;;:::i;:::-;;;611:14:3;;604:22;586:41;;574:2;559:18;9270:630:2;;;;;;;;10154:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;16420:223::-;;;;;;;;;;-1:-1:-1;16420:223:2;;;;;:::i;:::-;;:::i;:::-;;;1814:42:3;1802:55;;;1784:74;;1772:2;1757:18;16420:223:2;1638:226:3;16148:122:2;;;;;;:::i;:::-;;:::i;:::-;;6000:317;;;;;;;;;;-1:-1:-1;6270:12:2;;6061:7;6254:13;:28;6000:317;;;2475:25:3;;;2463:2;2448:18;6000:317:2;2329:177:3;19972:3447:2;;;;;;:::i;:::-;;:::i;23510:187::-;;;;;;:::i;:::-;;:::i;11515:150::-;;;;;;;;;;-1:-1:-1;11515:150:2;;;;;:::i;:::-;;:::i;7151:239::-;;;;;;;;;;-1:-1:-1;7151:239:2;;;;;:::i;:::-;;:::i;10323:102::-;;;;;;;;;;;;;:::i;16970:231::-;;;;;;;;;;-1:-1:-1;16970:231:2;;;;;:::i;:::-;;:::i;24278:405::-;;;;;;:::i;:::-;;:::i;1075:101::-;;;;;;:::i;:::-;;:::i;10526:322::-;;;;;;;;;;-1:-1:-1;10526:322:2;;;;;:::i;:::-;;:::i;17351:162::-;;;;;;;;;;-1:-1:-1;17351:162:2;;;;;:::i;:::-;17471:25;;;;17448:4;17471:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;17351:162;9270:630;9355:4;9673:25;;;;;;:101;;-1:-1:-1;9749:25:2;;;;;9673:101;:177;;;-1:-1:-1;9825:25:2;;;;;9673:177;9654:196;9270:630;-1:-1:-1;;9270:630:2:o;10154:98::-;10208:13;10240:5;10233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10154:98;:::o;16420:223::-;16496:7;16520:16;16528:7;16520;:16::i;:::-;16515:73;;16538:50;16546:41;16538:7;:50::i;:::-;-1:-1:-1;16606:24:2;;;;:15;:24;;;;;:30;;;;16420:223::o;16148:122::-;16236:27;16245:2;16249:7;16258:4;16236:8;:27::i;:::-;16148:122;;:::o;19972:3447::-;20109:27;20139;20158:7;20139:18;:27::i;:::-;2891:14;20291:22;;;;20109:57;;-1:-1:-1;20349:45:2;;;;20345:95;;20396:44;20404:35;20396:7;:44::i;:::-;20452:27;19105:24;;;:15;:24;;;;;19329:26;;40913:10;18742:30;;;18450:16;18439:28;;18720:20;;;18717:56;20635:188;;20727:43;20744:4;40913:10;17351:162;:::i;20727:43::-;20722:101;;20772:51;20780:42;20772:7;:51::i;:::-;20966:15;20963:157;;;21104:1;21083:19;21076:30;20963:157;21492:24;;;;;;;;:18;:24;;;;;;21490:26;;;;;;21560:22;;;;;;;;;21558:24;;-1:-1:-1;21558:24:2;;;15276:11;15251:23;15247:41;15234:63;2498:8;15234:63;21846:26;;;;:17;:26;;;;;:172;;;;2498:8;22135:47;;:52;;22131:617;;22239:1;22229:11;;22207:19;22360:30;;;:17;:30;;;;;;:35;;22356:378;;22496:13;;22481:11;:28;22477:239;;22641:30;;;;:17;:30;;;;;:52;;;22477:239;22189:559;22131:617;2891:14;22876:20;;23247:7;22876:20;23179:4;23122:25;22857:16;;22990:292;23305:8;23317:1;23305:13;23301:58;;23320:39;23328:30;23320:7;:39::i;:::-;20099:3320;;;;19972:3447;;;:::o;23510:187::-;23651:39;23668:4;23674:2;23678:7;23651:39;;;;;;;;;;;;:16;:39::i;:::-;23510:187;;;:::o;11515:150::-;11587:7;11629:27;11648:7;11629:18;:27::i;7151:239::-;7223:7;7246:19;;;7242:69;;7267:44;7275:35;7267:7;:44::i;:::-;-1:-1:-1;7328:25:2;;;;;;:18;:25;;;;;;1466:13;7328:55;;7151:239::o;10323:102::-;10379:13;10411:7;10404:14;;;;;:::i;16970:231::-;40913:10;17064:39;;;;:18;:39;;;;;;;;;:49;;;;;;;;;;;;:60;;;;;;;;;;;;;17139:55;;586:41:3;;;17064:49:2;;40913:10;17139:55;;559:18:3;17139:55:2;;;;;;;16970:231;;:::o;24278:405::-;24447:31;24460:4;24466:2;24470:7;24447:12;:31::i;:::-;24492:14;;;;:19;24488:189;;24530:56;24561:4;24567:2;24571:7;24580:5;24530:30;:56::i;:::-;24525:152;;24606:56;24614:47;24606:7;:56::i;:::-;24278:405;;;;:::o;1075:101::-;1138:31;1148:10;1160:8;1138:9;:31::i;:::-;1075:101;:::o;10526:322::-;10599:13;10629:16;10637:7;10629;:16::i;:::-;10624:68;;10647:45;10655:36;10647:7;:45::i;:::-;10703:21;10727:10;11169:9;;;;;;;;;-1:-1:-1;11169:9:2;;;11093:92;10727:10;10703:34;;10760:7;10754:21;10779:1;10754:26;:87;;;;;;;;;;;;;;;;;10807:7;10816:18;10826:7;10816:9;:18::i;:::-;10790:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10754:87;10747:94;10526:322;-1:-1:-1;;;10526:322:2:o;17762:277::-;17827:4;17914:13;;17904:7;:23;17862:151;;;;-1:-1:-1;;17964:26:2;;;;:17;:26;;;;;;2224:8;17964:44;:49;;17762:277::o;42797:160::-;42896:13;42890:4;42883:27;42936:4;42930;42923:18;34445:460;34569:13;34585:16;34593:7;34585;:16::i;:::-;34569:32;;34616:13;:45;;;;-1:-1:-1;40913:10:2;34633:28;;;;;34616:45;34612:198;;;34680:44;34697:5;40913:10;17351:162;:::i;34680:44::-;34675:135;;34744:51;34752:42;34744:7;:51::i;:::-;34820:24;;;;:15;:24;;;;;;:35;;;;;;;;;;;;;;34870:28;;34820:24;;34870:28;;;;;;;34559:346;34445:460;;;:::o;12639:1698::-;12787:26;;;;:17;:26;;;;;;;2224:8;12861:24;;:29;;12857:1407;;12998:6;13008:1;12998:11;12994:972;;13048:13;;13037:7;:24;13033:77;;13063:47;13071:38;13063:7;:47::i;:::-;13697:251;-1:-1:-1;13799:9:2;;13781:28;;;;:17;:28;;;;;;13861:25;;13697:251;13861:25;;12639:1698;;;:::o;12857:1407::-;14283:47;14291:38;14283:7;:47::i;26709:673::-;26887:88;;;;;26867:4;;26887:45;;;;;;:88;;40913:10;;26954:4;;26960:7;;26969:5;;26887:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;26887:88:2;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;26883:493;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27165:6;:13;27182:1;27165:18;27161:113;;27203:56;27211:47;27203:7;:56::i;:::-;27344:6;27338:13;27329:6;27325:2;27321:15;27314:38;26883:493;27043:64;;27053:54;27043:64;;-1:-1:-1;26709:673:2;;;;;;:::o;33555:110::-;33631:27;33641:2;33645:8;33631:27;;;;;;;;;;;;:9;:27::i;41027:1708::-;41092:17;41520:4;41513;41507:11;41503:22;41610:1;41604:4;41597:15;41683:4;41680:1;41676:12;41669:19;;;41763:1;41758:3;41751:14;41864:3;42098:5;42080:419;42145:1;42140:3;42136:11;42129:18;;42313:2;42307:4;42303:13;42299:2;42295:22;42290:3;42282:36;42405:2;42395:13;;42460:25;42080:419;42460:25;-1:-1:-1;42527:13:2;;;42640:14;;;;42700:19;;;42640:14;41027:1708;-1:-1:-1;41027:1708:2:o;32788:688::-;32914:19;32920:2;32924:8;32914:5;:19::i;:::-;32972:14;;;;:19;32968:492;;33011:11;33025:13;33072:14;;;33104:238;33134:62;33173:1;33177:2;33181:7;;;;;;33190:5;33134:30;:62::i;:::-;33129:174;;33224:56;33232:47;33224:7;:56::i;:::-;33337:3;33329:5;:11;33104:238;;33422:3;33405:13;;:20;33401:44;;33427:18;33442:1;33427:7;:18::i;:::-;32993:467;;32788:688;;;:::o;27828:2251::-;27900:20;27923:13;;;27950;;;27946:53;;27965:34;27973:25;27965:7;:34::i;:::-;28499:31;;;;:17;:31;;;;;;;;15115:16;15104:28;;15276:11;15251:23;15247:41;15709:1;15696:15;;15670:24;15666:46;15244:52;15234:63;;28499:170;;;28880:22;;;:18;:22;;;;;:71;;28918:32;28906:45;;28880:71;;;15104:28;29136:13;;;29132:54;;29151:35;29159:26;29151:7;:35::i;:::-;29215:23;;;:12;29297:662;29707:7;29664:8;29620:1;29555:25;29493:1;29429;29399:351;29954:3;29941:9;;;;;;:16;29297:662;;-1:-1:-1;29973:13:2;:19;-1:-1:-1;23510:187:2;;;:::o;14:177:3:-;99:66;92:5;88:78;81:5;78:89;68:117;;181:1;178;171:12;196:245;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:250::-;723:1;733:113;747:6;744:1;741:13;733:113;;;823:11;;;817:18;804:11;;;797:39;769:2;762:10;733:113;;;-1:-1:-1;;880:1:3;862:16;;855:27;638:250::o;893:330::-;935:3;973:5;967:12;1000:6;995:3;988:19;1016:76;1085:6;1078:4;1073:3;1069:14;1062:4;1055:5;1051:16;1016:76;:::i;:::-;1137:2;1125:15;1142:66;1121:88;1112:98;;;;1212:4;1108:109;;893:330;-1:-1:-1;;893:330:3:o;1228:220::-;1377:2;1366:9;1359:21;1340:4;1397:45;1438:2;1427:9;1423:18;1415:6;1397:45;:::i;1453:180::-;1512:6;1565:2;1553:9;1544:7;1540:23;1536:32;1533:52;;;1581:1;1578;1571:12;1533:52;-1:-1:-1;1604:23:3;;1453:180;-1:-1:-1;1453:180:3:o;1869:196::-;1937:20;;1997:42;1986:54;;1976:65;;1966:93;;2055:1;2052;2045:12;2070:254;2138:6;2146;2199:2;2187:9;2178:7;2174:23;2170:32;2167:52;;;2215:1;2212;2205:12;2167:52;2238:29;2257:9;2238:29;:::i;:::-;2228:39;2314:2;2299:18;;;;2286:32;;-1:-1:-1;;;2070:254:3:o;2511:328::-;2588:6;2596;2604;2657:2;2645:9;2636:7;2632:23;2628:32;2625:52;;;2673:1;2670;2663:12;2625:52;2696:29;2715:9;2696:29;:::i;:::-;2686:39;;2744:38;2778:2;2767:9;2763:18;2744:38;:::i;:::-;2734:48;;2829:2;2818:9;2814:18;2801:32;2791:42;;2511:328;;;;;:::o;2844:186::-;2903:6;2956:2;2944:9;2935:7;2931:23;2927:32;2924:52;;;2972:1;2969;2962:12;2924:52;2995:29;3014:9;2995:29;:::i;3035:347::-;3100:6;3108;3161:2;3149:9;3140:7;3136:23;3132:32;3129:52;;;3177:1;3174;3167:12;3129:52;3200:29;3219:9;3200:29;:::i;:::-;3190:39;;3279:2;3268:9;3264:18;3251:32;3326:5;3319:13;3312:21;3305:5;3302:32;3292:60;;3348:1;3345;3338:12;3292:60;3371:5;3361:15;;;3035:347;;;;;:::o;3387:184::-;3439:77;3436:1;3429:88;3536:4;3533:1;3526:15;3560:4;3557:1;3550:15;3576:1197;3671:6;3679;3687;3695;3748:3;3736:9;3727:7;3723:23;3719:33;3716:53;;;3765:1;3762;3755:12;3716:53;3788:29;3807:9;3788:29;:::i;:::-;3778:39;;3836:38;3870:2;3859:9;3855:18;3836:38;:::i;:::-;3826:48;;3921:2;3910:9;3906:18;3893:32;3883:42;;3976:2;3965:9;3961:18;3948:32;3999:18;4040:2;4032:6;4029:14;4026:34;;;4056:1;4053;4046:12;4026:34;4094:6;4083:9;4079:22;4069:32;;4139:7;4132:4;4128:2;4124:13;4120:27;4110:55;;4161:1;4158;4151:12;4110:55;4197:2;4184:16;4219:2;4215;4212:10;4209:36;;;4225:18;;:::i;:::-;4359:2;4353:9;4421:4;4413:13;;4264:66;4409:22;;;4433:2;4405:31;4401:40;4389:53;;;4457:18;;;4477:22;;;4454:46;4451:72;;;4503:18;;:::i;:::-;4543:10;4539:2;4532:22;4578:2;4570:6;4563:18;4618:7;4613:2;4608;4604;4600:11;4596:20;4593:33;4590:53;;;4639:1;4636;4629:12;4590:53;4695:2;4690;4686;4682:11;4677:2;4669:6;4665:15;4652:46;4740:1;4735:2;4730;4722:6;4718:15;4714:24;4707:35;4761:6;4751:16;;;;;;;3576:1197;;;;;;;:::o;4778:260::-;4846:6;4854;4907:2;4895:9;4886:7;4882:23;4878:32;4875:52;;;4923:1;4920;4913:12;4875:52;4946:29;4965:9;4946:29;:::i;:::-;4936:39;;4994:38;5028:2;5017:9;5013:18;4994:38;:::i;:::-;4984:48;;4778:260;;;;;:::o;5043:437::-;5122:1;5118:12;;;;5165;;;5186:61;;5240:4;5232:6;5228:17;5218:27;;5186:61;5293:2;5285:6;5282:14;5262:18;5259:38;5256:218;;5330:77;5327:1;5320:88;5431:4;5428:1;5421:15;5459:4;5456:1;5449:15;5256:218;;5043:437;;;:::o;5485:496::-;5664:3;5702:6;5696:13;5718:66;5777:6;5772:3;5765:4;5757:6;5753:17;5718:66;:::i;:::-;5847:13;;5806:16;;;;5869:70;5847:13;5806:16;5916:4;5904:17;;5869:70;:::i;:::-;5955:20;;5485:496;-1:-1:-1;;;;5485:496:3:o;5986:512::-;6180:4;6209:42;6290:2;6282:6;6278:15;6267:9;6260:34;6342:2;6334:6;6330:15;6325:2;6314:9;6310:18;6303:43;;6382:6;6377:2;6366:9;6362:18;6355:34;6425:3;6420:2;6409:9;6405:18;6398:31;6446:46;6487:3;6476:9;6472:19;6464:6;6446:46;:::i;:::-;6438:54;5986:512;-1:-1:-1;;;;;;5986:512:3:o;6503:249::-;6572:6;6625:2;6613:9;6604:7;6600:23;6596:32;6593:52;;;6641:1;6638;6631:12;6593:52;6673:9;6667:16;6692:30;6716:5;6692:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "985200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2604",
								"getApproved(uint256)": "6895",
								"isApprovedForAll(address,address)": "infinite",
								"mintToken(uint256)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26647",
								"supportsInterface(bytes4)": "456",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4432",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_approve(address,uint256)": "infinite",
								"_approve(address,uint256,bool)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "4331",
								"_extraData(address,address,uint24)": "infinite",
								"_getApprovedSlotAndAddress(uint256)": "infinite",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isSenderApprovedOrOwner(address,address,address)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "infinite",
								"_nextExtraData(address,address,uint256)": "infinite",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "infinite",
								"_packedOwnershipOf(uint256)": "infinite",
								"_revert(bytes4)": "19",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "infinite",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 895,
									"end": 42959,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 895,
									"end": 42959,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 895,
									"end": 42959,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 5052,
									"end": 5206,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 5052,
									"end": 5206,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5118,
									"end": 5123,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 5118,
									"end": 5131,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 5126,
									"end": 5131,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 5118,
									"end": 5123,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5118,
									"end": 5131,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 5118,
									"end": 5131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5118,
									"end": 5131,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 5118,
									"end": 5131,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5141,
									"end": 5148,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 5141,
									"end": 5158,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 5151,
									"end": 5158,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5141,
									"end": 5148,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5141,
									"end": 5158,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 5141,
									"end": 5158,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5141,
									"end": 5158,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 5141,
									"end": 5158,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5588,
									"end": 5595,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5168,
									"end": 5199,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5168,
									"end": 5199,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 895,
									"end": 42959,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 895,
									"end": 42959,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 3,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 3,
									"value": "26"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 3,
									"value": "27"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 3,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 3,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 3,
									"value": "50"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 3,
									"value": "52"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 3,
									"value": "51"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 3,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 3,
									"value": "55"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 3,
									"value": "54"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 3
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "58"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 3,
									"value": "60"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 3
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 3
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 3,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 3,
									"value": "61"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 895,
									"end": 42959,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 895,
									"end": 42959,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 895,
									"end": 42959,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 895,
									"end": 42959,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 42959,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 895,
									"end": 42959,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 42959,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c56e173a6015eb4583e55fb8f99b85ba820ff970d423c2bbad236a5456f8f33164736f6c63430008110033",
									".code": [
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "6352211E"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "B88D4FDE"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "B88D4FDE"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "C634D032"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "C87B56DD"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "E985E9C5"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "6352211E"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "42842E0E"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "81812FC"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 895,
											"end": 42959,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 9270,
											"end": 9900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9270,
											"end": 9900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 611,
											"end": 625,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 604,
											"end": 626,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 586,
											"end": 627,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 586,
											"end": 627,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 574,
											"end": 576,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 559,
											"end": 577,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 10154,
											"end": 10252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 10154,
											"end": 10252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 16420,
											"end": 16643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 16420,
											"end": 16643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1814,
											"end": 1856,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1802,
											"end": 1857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1857,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1802,
											"end": 1857,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1784,
											"end": 1858,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1784,
											"end": 1858,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1772,
											"end": 1774,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1757,
											"end": 1775,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1638,
											"end": 1864,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 16148,
											"end": 16270,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 16148,
											"end": 16270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16148,
											"end": 16270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 16148,
											"end": 16270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16148,
											"end": 16270,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 16148,
											"end": 16270,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16148,
											"end": 16270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 16148,
											"end": 16270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16148,
											"end": 16270,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16148,
											"end": 16270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16148,
											"end": 16270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 16148,
											"end": 16270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16148,
											"end": 16270,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 16148,
											"end": 16270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16148,
											"end": 16270,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 6000,
											"end": 6317,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6000,
											"end": 6317,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6000,
											"end": 6317,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6000,
											"end": 6317,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6000,
											"end": 6317,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6000,
											"end": 6317,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 6000,
											"end": 6317,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6000,
											"end": 6317,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6000,
											"end": 6317,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6000,
											"end": 6317,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6000,
											"end": 6317,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 6000,
											"end": 6317,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6061,
											"end": 6068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6254,
											"end": 6267,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6254,
											"end": 6282,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6000,
											"end": 6317,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 6000,
											"end": 6317,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6000,
											"end": 6317,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6000,
											"end": 6317,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2465,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6000,
											"end": 6317,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2329,
											"end": 2506,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 19972,
											"end": 23419,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 19972,
											"end": 23419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19972,
											"end": 23419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 19972,
											"end": 23419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 19972,
											"end": 23419,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 19972,
											"end": 23419,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19972,
											"end": 23419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 19972,
											"end": 23419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19972,
											"end": 23419,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 19972,
											"end": 23419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19972,
											"end": 23419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 19972,
											"end": 23419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 23510,
											"end": 23697,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 23510,
											"end": 23697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23510,
											"end": 23697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 23510,
											"end": 23697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 23510,
											"end": 23697,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 23510,
											"end": 23697,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 23510,
											"end": 23697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 23510,
											"end": 23697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 23510,
											"end": 23697,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 23510,
											"end": 23697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23510,
											"end": 23697,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 23510,
											"end": 23697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11515,
											"end": 11665,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 11515,
											"end": 11665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11515,
											"end": 11665,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 11515,
											"end": 11665,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11515,
											"end": 11665,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11515,
											"end": 11665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 11515,
											"end": 11665,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11515,
											"end": 11665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11515,
											"end": 11665,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11515,
											"end": 11665,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11515,
											"end": 11665,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 11515,
											"end": 11665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11515,
											"end": 11665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 11515,
											"end": 11665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 11515,
											"end": 11665,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 11515,
											"end": 11665,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11515,
											"end": 11665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 11515,
											"end": 11665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11515,
											"end": 11665,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 11515,
											"end": 11665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11515,
											"end": 11665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 11515,
											"end": 11665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7151,
											"end": 7390,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 7151,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7151,
											"end": 7390,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 7151,
											"end": 7390,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7151,
											"end": 7390,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7151,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7151,
											"end": 7390,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7151,
											"end": 7390,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7151,
											"end": 7390,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7151,
											"end": 7390,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7151,
											"end": 7390,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7151,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7151,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 7151,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 7151,
											"end": 7390,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7151,
											"end": 7390,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7151,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 7151,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7151,
											"end": 7390,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 7151,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7151,
											"end": 7390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 7151,
											"end": 7390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10323,
											"end": 10425,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 10323,
											"end": 10425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10323,
											"end": 10425,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 10323,
											"end": 10425,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10323,
											"end": 10425,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10323,
											"end": 10425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 10323,
											"end": 10425,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10323,
											"end": 10425,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10323,
											"end": 10425,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10323,
											"end": 10425,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10323,
											"end": 10425,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 10323,
											"end": 10425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10323,
											"end": 10425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10323,
											"end": 10425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 10323,
											"end": 10425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 10323,
											"end": 10425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16970,
											"end": 17201,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 16970,
											"end": 17201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16970,
											"end": 17201,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 16970,
											"end": 17201,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16970,
											"end": 17201,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16970,
											"end": 17201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 16970,
											"end": 17201,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16970,
											"end": 17201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16970,
											"end": 17201,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16970,
											"end": 17201,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 16970,
											"end": 17201,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 16970,
											"end": 17201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16970,
											"end": 17201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 16970,
											"end": 17201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 16970,
											"end": 17201,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 16970,
											"end": 17201,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 16970,
											"end": 17201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 16970,
											"end": 17201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16970,
											"end": 17201,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 16970,
											"end": 17201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16970,
											"end": 17201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 16970,
											"end": 17201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 24278,
											"end": 24683,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 24278,
											"end": 24683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 24278,
											"end": 24683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 24278,
											"end": 24683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 24278,
											"end": 24683,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 24278,
											"end": 24683,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 24278,
											"end": 24683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 24278,
											"end": 24683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 24278,
											"end": 24683,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 24278,
											"end": 24683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 24278,
											"end": 24683,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 24278,
											"end": 24683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1176,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1075,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1075,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1075,
											"end": 1176,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1176,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1075,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1075,
											"end": 1176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1176,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1075,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1176,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1075,
											"end": 1176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10526,
											"end": 10848,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 10526,
											"end": 10848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10526,
											"end": 10848,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 10526,
											"end": 10848,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10526,
											"end": 10848,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10526,
											"end": 10848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 10526,
											"end": 10848,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10526,
											"end": 10848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10526,
											"end": 10848,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10526,
											"end": 10848,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10526,
											"end": 10848,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 10526,
											"end": 10848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10526,
											"end": 10848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 10526,
											"end": 10848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 10526,
											"end": 10848,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 10526,
											"end": 10848,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10526,
											"end": 10848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 10526,
											"end": 10848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10526,
											"end": 10848,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 10526,
											"end": 10848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10526,
											"end": 10848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 10526,
											"end": 10848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17351,
											"end": 17513,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 17351,
											"end": 17513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17351,
											"end": 17513,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 17351,
											"end": 17513,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17351,
											"end": 17513,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17351,
											"end": 17513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 17351,
											"end": 17513,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 17351,
											"end": 17513,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17351,
											"end": 17513,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17351,
											"end": 17513,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 17351,
											"end": 17513,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 17351,
											"end": 17513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17351,
											"end": 17513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 17351,
											"end": 17513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 17351,
											"end": 17513,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 17351,
											"end": 17513,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17351,
											"end": 17513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 17351,
											"end": 17513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17351,
											"end": 17513,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 17351,
											"end": 17513,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17496,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17471,
											"end": 17496,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17496,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17496,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17448,
											"end": 17452,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17471,
											"end": 17496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17496,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17496,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17489,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 17471,
											"end": 17496,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17471,
											"end": 17496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17496,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17496,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17496,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17471,
											"end": 17496,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17496,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17496,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17506,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17506,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17506,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17506,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17506,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17506,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17506,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17506,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17506,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17506,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17506,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 17471,
											"end": 17506,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17471,
											"end": 17506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17351,
											"end": 17513,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9359,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9673,
											"end": 9698,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9673,
											"end": 9698,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9673,
											"end": 9698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9673,
											"end": 9698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9673,
											"end": 9698,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9673,
											"end": 9698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9673,
											"end": 9774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 9673,
											"end": 9774,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9749,
											"end": 9774,
											"name": "PUSH",
											"source": 2,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9749,
											"end": 9774,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9749,
											"end": 9774,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9749,
											"end": 9774,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9749,
											"end": 9774,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9673,
											"end": 9774,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 9673,
											"end": 9774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9673,
											"end": 9850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9673,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 9673,
											"end": 9850,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9825,
											"end": 9850,
											"name": "PUSH",
											"source": 2,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9825,
											"end": 9850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9825,
											"end": 9850,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9825,
											"end": 9850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9825,
											"end": 9850,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9673,
											"end": 9850,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 9673,
											"end": 9850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9654,
											"end": 9850,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9270,
											"end": 9900,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9270,
											"end": 9900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10208,
											"end": 10221,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 10240,
											"end": 10245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 10233,
											"end": 10245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 10233,
											"end": 10245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10154,
											"end": 10252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10154,
											"end": 10252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 16420,
											"end": 16643,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16496,
											"end": 16503,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16520,
											"end": 16536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 16528,
											"end": 16535,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16520,
											"end": 16527,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 16520,
											"end": 16536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16520,
											"end": 16536,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 16520,
											"end": 16536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16515,
											"end": 16588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 16515,
											"end": 16588,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 16538,
											"end": 16588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 16546,
											"end": 16587,
											"name": "PUSH",
											"source": 2,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16538,
											"end": 16545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 16538,
											"end": 16588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16538,
											"end": 16588,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 16538,
											"end": 16588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16606,
											"end": 16630,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16606,
											"end": 16630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16606,
											"end": 16630,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16606,
											"end": 16630,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16606,
											"end": 16621,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 16606,
											"end": 16630,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16606,
											"end": 16630,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16606,
											"end": 16630,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16606,
											"end": 16630,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16606,
											"end": 16630,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 16606,
											"end": 16636,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 16606,
											"end": 16636,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16606,
											"end": 16636,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16606,
											"end": 16636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16420,
											"end": 16643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16148,
											"end": 16270,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 16148,
											"end": 16270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16236,
											"end": 16263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 16245,
											"end": 16247,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16249,
											"end": 16256,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16258,
											"end": 16262,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 16236,
											"end": 16263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16236,
											"end": 16263,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 16236,
											"end": 16263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16148,
											"end": 16270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16148,
											"end": 16270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16148,
											"end": 16270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19972,
											"end": 23419,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 19972,
											"end": 23419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20109,
											"end": 20136,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20139,
											"end": 20166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 20158,
											"end": 20165,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20139,
											"end": 20157,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 20139,
											"end": 20166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 20139,
											"end": 20166,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 20139,
											"end": 20166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 2905,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20291,
											"end": 20313,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 20291,
											"end": 20313,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 20291,
											"end": 20313,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20291,
											"end": 20313,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 20109,
											"end": 20166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20109,
											"end": 20166,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20349,
											"end": 20394,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20349,
											"end": 20394,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20349,
											"end": 20394,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 20349,
											"end": 20394,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 20345,
											"end": 20440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 20345,
											"end": 20440,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 20396,
											"end": 20440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 20404,
											"end": 20439,
											"name": "PUSH",
											"source": 2,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20396,
											"end": 20403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 20396,
											"end": 20440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 20396,
											"end": 20440,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 20396,
											"end": 20440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20452,
											"end": 20479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19105,
											"end": 19129,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19105,
											"end": 19129,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19105,
											"end": 19129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19105,
											"end": 19120,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 19105,
											"end": 19129,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19105,
											"end": 19129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19105,
											"end": 19129,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19105,
											"end": 19129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19105,
											"end": 19129,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19329,
											"end": 19355,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19329,
											"end": 19355,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 40913,
											"end": 40923,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 18742,
											"end": 18772,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18742,
											"end": 18772,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18742,
											"end": 18772,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 18450,
											"end": 18466,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18439,
											"end": 18467,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 18439,
											"end": 18467,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18720,
											"end": 18740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18720,
											"end": 18740,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18720,
											"end": 18740,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 18717,
											"end": 18773,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 20635,
											"end": 20823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 20635,
											"end": 20823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 20727,
											"end": 20770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 20744,
											"end": 20748,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 40913,
											"end": 40923,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 17351,
											"end": 17513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 17351,
											"end": 17513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 20727,
											"end": 20770,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 20727,
											"end": 20770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20722,
											"end": 20823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 20722,
											"end": 20823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 20772,
											"end": 20823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 20780,
											"end": 20822,
											"name": "PUSH",
											"source": 2,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20772,
											"end": 20779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 20772,
											"end": 20823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 20772,
											"end": 20823,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 20772,
											"end": 20823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20966,
											"end": 20981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20963,
											"end": 21120,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 20963,
											"end": 21120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 20963,
											"end": 21120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 21104,
											"end": 21105,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21083,
											"end": 21102,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21076,
											"end": 21106,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 20963,
											"end": 21120,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 20963,
											"end": 21120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21492,
											"end": 21516,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21492,
											"end": 21516,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 21492,
											"end": 21516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21492,
											"end": 21516,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21492,
											"end": 21516,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21492,
											"end": 21516,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21492,
											"end": 21516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21492,
											"end": 21516,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21492,
											"end": 21510,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 21492,
											"end": 21516,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21492,
											"end": 21516,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21492,
											"end": 21516,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 21492,
											"end": 21516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21492,
											"end": 21516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21492,
											"end": 21516,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 21490,
											"end": 21516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21490,
											"end": 21516,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 21490,
											"end": 21516,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21490,
											"end": 21516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21490,
											"end": 21516,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21490,
											"end": 21516,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 21560,
											"end": 21582,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21560,
											"end": 21582,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 21560,
											"end": 21582,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 21560,
											"end": 21582,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21560,
											"end": 21582,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21560,
											"end": 21582,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21560,
											"end": 21582,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21560,
											"end": 21582,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21560,
											"end": 21582,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 21558,
											"end": 21582,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21558,
											"end": 21582,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 21558,
											"end": 21582,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21558,
											"end": 21582,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21558,
											"end": 21582,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15276,
											"end": 15287,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 15251,
											"end": 15274,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 15247,
											"end": 15288,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 15234,
											"end": 15297,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2498,
											"end": 2506,
											"name": "PUSH",
											"source": 2,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15234,
											"end": 15297,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 21846,
											"end": 21872,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 21846,
											"end": 21872,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 21846,
											"end": 21872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21846,
											"end": 21872,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21846,
											"end": 21863,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 21846,
											"end": 21872,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 21846,
											"end": 21872,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21846,
											"end": 21872,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 21846,
											"end": 21872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21846,
											"end": 21872,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 21846,
											"end": 22018,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21846,
											"end": 22018,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21846,
											"end": 22018,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21846,
											"end": 22018,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2498,
											"end": 2506,
											"name": "PUSH",
											"source": 2,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22135,
											"end": 22182,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 22135,
											"end": 22182,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 22135,
											"end": 22187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22135,
											"end": 22187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 22131,
											"end": 22748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 22131,
											"end": 22748,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 22239,
											"end": 22240,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 22229,
											"end": 22240,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 22229,
											"end": 22240,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 22207,
											"end": 22226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22360,
											"end": 22390,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22360,
											"end": 22390,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22360,
											"end": 22390,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 22360,
											"end": 22377,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 22360,
											"end": 22390,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 22360,
											"end": 22390,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 22360,
											"end": 22390,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 22360,
											"end": 22390,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22360,
											"end": 22390,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 22360,
											"end": 22390,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 22360,
											"end": 22395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22360,
											"end": 22395,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 22356,
											"end": 22734,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 22356,
											"end": 22734,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 22496,
											"end": 22509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22496,
											"end": 22509,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 22481,
											"end": 22492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22481,
											"end": 22509,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 22477,
											"end": 22716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 22477,
											"end": 22716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 22641,
											"end": 22671,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22641,
											"end": 22671,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22641,
											"end": 22671,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22641,
											"end": 22671,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 22641,
											"end": 22658,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 22641,
											"end": 22671,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 22641,
											"end": 22671,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 22641,
											"end": 22671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 22641,
											"end": 22671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22641,
											"end": 22671,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 22641,
											"end": 22693,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 22641,
											"end": 22693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 22641,
											"end": 22693,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 22477,
											"end": 22716,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 22477,
											"end": 22716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22189,
											"end": 22748,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22131,
											"end": 22748,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 22131,
											"end": 22748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 2905,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22876,
											"end": 22896,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 22876,
											"end": 22896,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 23247,
											"end": 23254,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 22876,
											"end": 22896,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23179,
											"end": 23183,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 23122,
											"end": 23147,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 22857,
											"end": 22873,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22857,
											"end": 22873,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 22990,
											"end": 23282,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 23305,
											"end": 23313,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23317,
											"end": 23318,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23305,
											"end": 23318,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 23301,
											"end": 23359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 23301,
											"end": 23359,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 23320,
											"end": 23359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 23328,
											"end": 23358,
											"name": "PUSH",
											"source": 2,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23320,
											"end": 23327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 23320,
											"end": 23359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 23320,
											"end": 23359,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 23320,
											"end": 23359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20099,
											"end": 23419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20099,
											"end": 23419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20099,
											"end": 23419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20099,
											"end": 23419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19972,
											"end": 23419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19972,
											"end": 23419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19972,
											"end": 23419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19972,
											"end": 23419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 23510,
											"end": 23697,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 23510,
											"end": 23697,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23651,
											"end": 23690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 23668,
											"end": 23672,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 23674,
											"end": 23676,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 23678,
											"end": 23685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 23651,
											"end": 23690,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 23651,
											"end": 23690,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 23651,
											"end": 23690,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23651,
											"end": 23690,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 23651,
											"end": 23690,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23651,
											"end": 23690,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 23651,
											"end": 23690,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 23651,
											"end": 23690,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23651,
											"end": 23690,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23651,
											"end": 23690,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23651,
											"end": 23690,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 23651,
											"end": 23690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23651,
											"end": 23667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 23651,
											"end": 23690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 23651,
											"end": 23690,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 23651,
											"end": 23690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23510,
											"end": 23697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23510,
											"end": 23697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23510,
											"end": 23697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23510,
											"end": 23697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11515,
											"end": 11665,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 11515,
											"end": 11665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11587,
											"end": 11594,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11629,
											"end": 11656,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 11648,
											"end": 11655,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11629,
											"end": 11647,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11629,
											"end": 11656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7151,
											"end": 7390,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 7151,
											"end": 7390,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7223,
											"end": 7230,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7246,
											"end": 7265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7246,
											"end": 7265,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7246,
											"end": 7265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7242,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 7242,
											"end": 7311,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7267,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 7275,
											"end": 7310,
											"name": "PUSH",
											"source": 2,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7267,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 7267,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7267,
											"end": 7311,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 7267,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7328,
											"end": 7353,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7328,
											"end": 7353,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7328,
											"end": 7353,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7328,
											"end": 7353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7328,
											"end": 7353,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7328,
											"end": 7353,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7328,
											"end": 7346,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 7328,
											"end": 7353,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7328,
											"end": 7353,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7328,
											"end": 7353,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7328,
											"end": 7353,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7328,
											"end": 7353,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7328,
											"end": 7353,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1466,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7328,
											"end": 7383,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7328,
											"end": 7383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7151,
											"end": 7390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10323,
											"end": 10425,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 10323,
											"end": 10425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10379,
											"end": 10392,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 10411,
											"end": 10418,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 10404,
											"end": 10418,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10404,
											"end": 10418,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10404,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 10404,
											"end": 10418,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10404,
											"end": 10418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 10404,
											"end": 10418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16970,
											"end": 17201,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 16970,
											"end": 17201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 40913,
											"end": 40923,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17103,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17064,
											"end": 17103,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17103,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17103,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17082,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 17064,
											"end": 17103,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17064,
											"end": 17103,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17103,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17103,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17103,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17064,
											"end": 17103,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17103,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17103,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17064,
											"end": 17113,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17113,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17113,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17113,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17113,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17124,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17124,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17124,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 17064,
											"end": 17124,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17124,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17124,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17124,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17124,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17124,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17124,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17124,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17124,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 17139,
											"end": 17194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17139,
											"end": 17194,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 586,
											"end": 627,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 586,
											"end": 627,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 586,
											"end": 627,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 17064,
											"end": 17113,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17064,
											"end": 17113,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 40913,
											"end": 40923,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17139,
											"end": 17194,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 17139,
											"end": 17194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 559,
											"end": 577,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 17139,
											"end": 17194,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17139,
											"end": 17194,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 17139,
											"end": 17194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17139,
											"end": 17194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17139,
											"end": 17194,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17139,
											"end": 17194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17139,
											"end": 17194,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 16970,
											"end": 17201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16970,
											"end": 17201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16970,
											"end": 17201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 24278,
											"end": 24683,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 24278,
											"end": 24683,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 24447,
											"end": 24478,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 24460,
											"end": 24464,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 24466,
											"end": 24468,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 24470,
											"end": 24477,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 24447,
											"end": 24459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 24447,
											"end": 24478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 24447,
											"end": 24478,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 24447,
											"end": 24478,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 24492,
											"end": 24506,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24492,
											"end": 24506,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 24492,
											"end": 24506,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 24492,
											"end": 24506,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 24492,
											"end": 24511,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 24488,
											"end": 24677,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 24488,
											"end": 24677,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 24530,
											"end": 24586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 24561,
											"end": 24565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 24567,
											"end": 24569,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 24571,
											"end": 24578,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 24580,
											"end": 24585,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 24530,
											"end": 24560,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 24530,
											"end": 24586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 24530,
											"end": 24586,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 24530,
											"end": 24586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 24525,
											"end": 24677,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 24525,
											"end": 24677,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 24606,
											"end": 24662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 24614,
											"end": 24661,
											"name": "PUSH",
											"source": 2,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24606,
											"end": 24613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 24606,
											"end": 24662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 24606,
											"end": 24662,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 24606,
											"end": 24662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 24278,
											"end": 24683,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 24278,
											"end": 24683,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 24278,
											"end": 24683,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 24278,
											"end": 24683,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 24278,
											"end": 24683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1176,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1075,
											"end": 1176,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 1148,
											"end": 1158,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1168,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 1138,
											"end": 1169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1169,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 1138,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10526,
											"end": 10848,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 10526,
											"end": 10848,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10599,
											"end": 10612,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 10629,
											"end": 10645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 10637,
											"end": 10644,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10629,
											"end": 10636,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 10629,
											"end": 10645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10629,
											"end": 10645,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 10629,
											"end": 10645,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 10624,
											"end": 10692,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10647,
											"end": 10692,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 10655,
											"end": 10691,
											"name": "PUSH",
											"source": 2,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10647,
											"end": 10654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 10647,
											"end": 10692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10647,
											"end": 10692,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 10647,
											"end": 10692,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10703,
											"end": 10724,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10727,
											"end": 10737,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 11169,
											"end": 11178,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11169,
											"end": 11178,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11169,
											"end": 11178,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11169,
											"end": 11178,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11169,
											"end": 11178,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11169,
											"end": 11178,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11169,
											"end": 11178,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11169,
											"end": 11178,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11169,
											"end": 11178,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 11169,
											"end": 11178,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11169,
											"end": 11178,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11169,
											"end": 11178,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11093,
											"end": 11185,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10737,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 10727,
											"end": 10737,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10703,
											"end": 10737,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10703,
											"end": 10737,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10760,
											"end": 10767,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10754,
											"end": 10775,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10779,
											"end": 10780,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10754,
											"end": 10780,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10754,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 10754,
											"end": 10841,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10754,
											"end": 10841,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10754,
											"end": 10841,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10754,
											"end": 10841,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10754,
											"end": 10841,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10754,
											"end": 10841,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10754,
											"end": 10841,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10754,
											"end": 10841,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10754,
											"end": 10841,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10754,
											"end": 10841,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10754,
											"end": 10841,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10754,
											"end": 10841,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10754,
											"end": 10841,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10754,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 10754,
											"end": 10841,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10754,
											"end": 10841,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 10754,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10807,
											"end": 10814,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10816,
											"end": 10834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 10826,
											"end": 10833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10816,
											"end": 10825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 10816,
											"end": 10834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10816,
											"end": 10834,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 10816,
											"end": 10834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10790,
											"end": 10835,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10790,
											"end": 10835,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10790,
											"end": 10835,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10790,
											"end": 10835,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10790,
											"end": 10835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10790,
											"end": 10835,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10790,
											"end": 10835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10790,
											"end": 10835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10790,
											"end": 10835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 10790,
											"end": 10835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10790,
											"end": 10835,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10790,
											"end": 10835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10790,
											"end": 10835,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10790,
											"end": 10835,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10790,
											"end": 10835,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10790,
											"end": 10835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10790,
											"end": 10835,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10790,
											"end": 10835,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10790,
											"end": 10835,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10790,
											"end": 10835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10790,
											"end": 10835,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10790,
											"end": 10835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10790,
											"end": 10835,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10790,
											"end": 10835,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10754,
											"end": 10841,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 10754,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10747,
											"end": 10841,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10526,
											"end": 10848,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10526,
											"end": 10848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17762,
											"end": 18039,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 17762,
											"end": 18039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17827,
											"end": 17831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17914,
											"end": 17927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17914,
											"end": 17927,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 17904,
											"end": 17911,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 17904,
											"end": 17927,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 17862,
											"end": 18013,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17862,
											"end": 18013,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17862,
											"end": 18013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 17862,
											"end": 18013,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17964,
											"end": 17990,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 17964,
											"end": 17990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17964,
											"end": 17990,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17964,
											"end": 17990,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17964,
											"end": 17981,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17964,
											"end": 17990,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 17964,
											"end": 17990,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17964,
											"end": 17990,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17964,
											"end": 17990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17964,
											"end": 17990,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 17964,
											"end": 17990,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2232,
											"name": "PUSH",
											"source": 2,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17964,
											"end": 18008,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 17964,
											"end": 18013,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 17964,
											"end": 18013,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17762,
											"end": 18039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 42797,
											"end": 42957,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 42797,
											"end": 42957,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 42896,
											"end": 42909,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 42890,
											"end": 42894,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 42883,
											"end": 42910,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 42936,
											"end": 42940,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 42930,
											"end": 42934,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 42923,
											"end": 42941,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 34445,
											"end": 34905,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 34445,
											"end": 34905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 34569,
											"end": 34582,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 34585,
											"end": 34601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 34593,
											"end": 34600,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 34585,
											"end": 34592,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 34585,
											"end": 34601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 34585,
											"end": 34601,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 34585,
											"end": 34601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 34569,
											"end": 34601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 34569,
											"end": 34601,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 34616,
											"end": 34629,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 34616,
											"end": 34661,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 34616,
											"end": 34661,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 34616,
											"end": 34661,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 34616,
											"end": 34661,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40913,
											"end": 40923,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 34633,
											"end": 34661,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34633,
											"end": 34661,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 34633,
											"end": 34661,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 34633,
											"end": 34661,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 34633,
											"end": 34661,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 34616,
											"end": 34661,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 34616,
											"end": 34661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 34612,
											"end": 34810,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 34612,
											"end": 34810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 34612,
											"end": 34810,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 34680,
											"end": 34724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 34697,
											"end": 34702,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 40913,
											"end": 40923,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 17351,
											"end": 17513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 17351,
											"end": 17513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 34680,
											"end": 34724,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 34680,
											"end": 34724,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 34675,
											"end": 34810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 34675,
											"end": 34810,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 34744,
											"end": 34795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 34752,
											"end": 34794,
											"name": "PUSH",
											"source": 2,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34744,
											"end": 34751,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 34744,
											"end": 34795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 34744,
											"end": 34795,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 34744,
											"end": 34795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 34820,
											"end": 34844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 34820,
											"end": 34844,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 34820,
											"end": 34844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 34820,
											"end": 34844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 34820,
											"end": 34835,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 34820,
											"end": 34844,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 34820,
											"end": 34844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 34820,
											"end": 34844,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 34820,
											"end": 34844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 34820,
											"end": 34844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 34820,
											"end": 34844,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 34820,
											"end": 34855,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 34820,
											"end": 34855,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 34820,
											"end": 34855,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 34820,
											"end": 34855,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 34820,
											"end": 34855,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34820,
											"end": 34855,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 34820,
											"end": 34855,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 34820,
											"end": 34855,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 34820,
											"end": 34855,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 34820,
											"end": 34855,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 34820,
											"end": 34855,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 34820,
											"end": 34855,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 34820,
											"end": 34855,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 34820,
											"end": 34855,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 34870,
											"end": 34898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 34870,
											"end": 34898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 34820,
											"end": 34844,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 34820,
											"end": 34844,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 34870,
											"end": 34898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 34870,
											"end": 34898,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 34870,
											"end": 34898,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 34870,
											"end": 34898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 34870,
											"end": 34898,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 34870,
											"end": 34898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 34870,
											"end": 34898,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 34559,
											"end": 34905,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 34445,
											"end": 34905,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 34445,
											"end": 34905,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 34445,
											"end": 34905,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 34445,
											"end": 34905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12639,
											"end": 14337,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 12639,
											"end": 14337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12787,
											"end": 12813,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12787,
											"end": 12813,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12787,
											"end": 12813,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12787,
											"end": 12813,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12787,
											"end": 12804,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12787,
											"end": 12813,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12787,
											"end": 12813,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12787,
											"end": 12813,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12787,
											"end": 12813,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12787,
											"end": 12813,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12787,
											"end": 12813,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12787,
											"end": 12813,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2224,
											"end": 2232,
											"name": "PUSH",
											"source": 2,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12861,
											"end": 12885,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12861,
											"end": 12885,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12861,
											"end": 12890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12861,
											"end": 12890,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12857,
											"end": 14264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 12857,
											"end": 14264,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12998,
											"end": 13004,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13008,
											"end": 13009,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12998,
											"end": 13009,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12994,
											"end": 13966,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 12994,
											"end": 13966,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13048,
											"end": 13061,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13048,
											"end": 13061,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13061,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 13033,
											"end": 13110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 13033,
											"end": 13110,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13063,
											"end": 13110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 13071,
											"end": 13109,
											"name": "PUSH",
											"source": 2,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13063,
											"end": 13070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 13063,
											"end": 13110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13063,
											"end": 13110,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 13063,
											"end": 13110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13697,
											"end": 13948,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 13697,
											"end": 13948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13799,
											"end": 13808,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13799,
											"end": 13808,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13781,
											"end": 13809,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13781,
											"end": 13809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13781,
											"end": 13809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13781,
											"end": 13809,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13781,
											"end": 13798,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13781,
											"end": 13809,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13781,
											"end": 13809,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13781,
											"end": 13809,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13781,
											"end": 13809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13781,
											"end": 13809,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13781,
											"end": 13809,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13861,
											"end": 13886,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13861,
											"end": 13886,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13697,
											"end": 13948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 13861,
											"end": 13886,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13861,
											"end": 13886,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 13861,
											"end": 13886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12639,
											"end": 14337,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12639,
											"end": 14337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12639,
											"end": 14337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12639,
											"end": 14337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12857,
											"end": 14264,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 12857,
											"end": 14264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14283,
											"end": 14330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 14291,
											"end": 14329,
											"name": "PUSH",
											"source": 2,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14283,
											"end": 14290,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 14283,
											"end": 14330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 26709,
											"end": 27382,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 26709,
											"end": 27382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A0200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 26867,
											"end": 26871,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 26867,
											"end": 26871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26887,
											"end": 26932,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26932,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 26887,
											"end": 26932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 40913,
											"end": 40923,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 40913,
											"end": 40923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26954,
											"end": 26958,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 26954,
											"end": 26958,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26960,
											"end": 26967,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 26960,
											"end": 26967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26969,
											"end": 26974,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 26969,
											"end": 26974,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 26887,
											"end": 26975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 26887,
											"end": 26975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 26887,
											"end": 26975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27165,
											"end": 27171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 27165,
											"end": 27178,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 27182,
											"end": 27183,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 27165,
											"end": 27183,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 27161,
											"end": 27274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 27161,
											"end": 27274,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 27203,
											"end": 27259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 27211,
											"end": 27258,
											"name": "PUSH",
											"source": 2,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27203,
											"end": 27210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 27203,
											"end": 27259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 27203,
											"end": 27259,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 27203,
											"end": 27259,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27344,
											"end": 27350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 27338,
											"end": 27351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 27329,
											"end": 27335,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 27325,
											"end": 27327,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 27321,
											"end": 27336,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 27314,
											"end": 27352,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 26883,
											"end": 27376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27043,
											"end": 27107,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27043,
											"end": 27107,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 27053,
											"end": 27107,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A0200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27043,
											"end": 27107,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 27043,
											"end": 27107,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26709,
											"end": 27382,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 26709,
											"end": 27382,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 26709,
											"end": 27382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26709,
											"end": 27382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26709,
											"end": 27382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26709,
											"end": 27382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26709,
											"end": 27382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 33555,
											"end": 33665,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 33555,
											"end": 33665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 33631,
											"end": 33658,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 33641,
											"end": 33643,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 33645,
											"end": 33653,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 33631,
											"end": 33658,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 33631,
											"end": 33658,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 33631,
											"end": 33658,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 33631,
											"end": 33658,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 33631,
											"end": 33658,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 33631,
											"end": 33658,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 33631,
											"end": 33658,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 33631,
											"end": 33658,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 33631,
											"end": 33658,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 33631,
											"end": 33658,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 33631,
											"end": 33658,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 33631,
											"end": 33658,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 33631,
											"end": 33640,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 33631,
											"end": 33658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 41027,
											"end": 42735,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 41027,
											"end": 42735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 41092,
											"end": 41109,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 41520,
											"end": 41524,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 41513,
											"end": 41517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 41507,
											"end": 41518,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 41503,
											"end": 41525,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 41610,
											"end": 41611,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 41604,
											"end": 41608,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 41597,
											"end": 41612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 41683,
											"end": 41687,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 41680,
											"end": 41681,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 41676,
											"end": 41688,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 41669,
											"end": 41688,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 41669,
											"end": 41688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 41669,
											"end": 41688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 41763,
											"end": 41764,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 41758,
											"end": 41761,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 41751,
											"end": 41765,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 41864,
											"end": 41867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 42098,
											"end": 42103,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 42080,
											"end": 42499,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 42080,
											"end": 42499,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 42145,
											"end": 42146,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 42140,
											"end": 42143,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 42136,
											"end": 42147,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 42129,
											"end": 42147,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 42129,
											"end": 42147,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 42313,
											"end": 42315,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 42307,
											"end": 42311,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 42303,
											"end": 42316,
											"name": "MOD",
											"source": 2
										},
										{
											"begin": 42299,
											"end": 42301,
											"name": "PUSH",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 42295,
											"end": 42317,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 42290,
											"end": 42293,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 42282,
											"end": 42318,
											"name": "MSTORE8",
											"source": 2
										},
										{
											"begin": 42405,
											"end": 42407,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 42395,
											"end": 42408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 42395,
											"end": 42408,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 42460,
											"end": 42485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 42080,
											"end": 42499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 42460,
											"end": 42485,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42527,
											"end": 42540,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 42527,
											"end": 42540,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 42527,
											"end": 42540,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 42640,
											"end": 42654,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 42640,
											"end": 42654,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 42640,
											"end": 42654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 42640,
											"end": 42654,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 42700,
											"end": 42719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 42700,
											"end": 42719,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 42700,
											"end": 42719,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 42640,
											"end": 42654,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 41027,
											"end": 42735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41027,
											"end": 42735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 32788,
											"end": 33476,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 32788,
											"end": 33476,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 32914,
											"end": 32933,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 32920,
											"end": 32922,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 32924,
											"end": 32932,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 32914,
											"end": 32919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 32914,
											"end": 32933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 32914,
											"end": 32933,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 32914,
											"end": 32933,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 32972,
											"end": 32986,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32972,
											"end": 32986,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 32972,
											"end": 32986,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 32972,
											"end": 32986,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 32972,
											"end": 32991,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 32968,
											"end": 33460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 32968,
											"end": 33460,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 33011,
											"end": 33022,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 33025,
											"end": 33038,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 33072,
											"end": 33086,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 33072,
											"end": 33086,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 33072,
											"end": 33086,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 33104,
											"end": 33342,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 33104,
											"end": 33342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 33134,
											"end": 33196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 33173,
											"end": 33174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 33177,
											"end": 33179,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 33181,
											"end": 33188,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 33181,
											"end": 33188,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 33181,
											"end": 33188,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 33181,
											"end": 33188,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 33181,
											"end": 33188,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 33181,
											"end": 33188,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 33190,
											"end": 33195,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 33134,
											"end": 33164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 33134,
											"end": 33196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 33134,
											"end": 33196,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 33134,
											"end": 33196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 33129,
											"end": 33303,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 33129,
											"end": 33303,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 33224,
											"end": 33280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 33232,
											"end": 33279,
											"name": "PUSH",
											"source": 2,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33224,
											"end": 33231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 33224,
											"end": 33280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 33224,
											"end": 33280,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 33224,
											"end": 33280,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 33337,
											"end": 33340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 33329,
											"end": 33334,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 33329,
											"end": 33340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 33104,
											"end": 33342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 33104,
											"end": 33342,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 33422,
											"end": 33425,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 33405,
											"end": 33418,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 33405,
											"end": 33418,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 33405,
											"end": 33425,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 33401,
											"end": 33445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 33401,
											"end": 33445,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 33427,
											"end": 33445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 33442,
											"end": 33443,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 33427,
											"end": 33434,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 33427,
											"end": 33445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 33427,
											"end": 33445,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 33427,
											"end": 33445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 32993,
											"end": 33460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 32993,
											"end": 33460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 32788,
											"end": 33476,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 32788,
											"end": 33476,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 32788,
											"end": 33476,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 32788,
											"end": 33476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 27828,
											"end": 30079,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 27828,
											"end": 30079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27900,
											"end": 27920,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 27923,
											"end": 27936,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 27923,
											"end": 27936,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 27923,
											"end": 27936,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 27950,
											"end": 27963,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 27950,
											"end": 27963,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 27950,
											"end": 27963,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 27946,
											"end": 27999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 27946,
											"end": 27999,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 27965,
											"end": 27999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 27973,
											"end": 27998,
											"name": "PUSH",
											"source": 2,
											"value": "B562E8DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27965,
											"end": 27972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 27965,
											"end": 27999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 27965,
											"end": 27999,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 27965,
											"end": 27999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 28499,
											"end": 28530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 28499,
											"end": 28530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 28499,
											"end": 28530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 28499,
											"end": 28530,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 28499,
											"end": 28516,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 28499,
											"end": 28530,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 28499,
											"end": 28530,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 28499,
											"end": 28530,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 28499,
											"end": 28530,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 28499,
											"end": 28530,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 28499,
											"end": 28530,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 28499,
											"end": 28530,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 28499,
											"end": 28530,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15115,
											"end": 15131,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15104,
											"end": 15132,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15104,
											"end": 15132,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15276,
											"end": 15287,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 15251,
											"end": 15274,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 15247,
											"end": 15288,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 15709,
											"end": 15710,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15696,
											"end": 15711,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 15696,
											"end": 15711,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15670,
											"end": 15694,
											"name": "PUSH",
											"source": 2,
											"value": "E1"
										},
										{
											"begin": 15666,
											"end": 15712,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 15244,
											"end": 15296,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 15234,
											"end": 15297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15234,
											"end": 15297,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 28499,
											"end": 28669,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 28499,
											"end": 28669,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 28499,
											"end": 28669,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 28880,
											"end": 28902,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 28880,
											"end": 28902,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 28880,
											"end": 28902,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 28880,
											"end": 28898,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 28880,
											"end": 28902,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 28880,
											"end": 28902,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 28880,
											"end": 28902,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 28880,
											"end": 28902,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 28880,
											"end": 28902,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 28880,
											"end": 28951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 28880,
											"end": 28951,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 28918,
											"end": 28950,
											"name": "PUSH",
											"source": 2,
											"value": "10000000000000001"
										},
										{
											"begin": 28906,
											"end": 28951,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 28906,
											"end": 28951,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 28880,
											"end": 28951,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 28880,
											"end": 28951,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 28880,
											"end": 28951,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 15104,
											"end": 15132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 29136,
											"end": 29149,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 29136,
											"end": 29149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 29136,
											"end": 29149,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 29132,
											"end": 29186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 29132,
											"end": 29186,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 29151,
											"end": 29186,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 29159,
											"end": 29185,
											"name": "PUSH",
											"source": 2,
											"value": "2E07630000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29151,
											"end": 29158,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 29151,
											"end": 29186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 29151,
											"end": 29186,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 29151,
											"end": 29186,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 29215,
											"end": 29238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 29215,
											"end": 29238,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 29215,
											"end": 29238,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 29215,
											"end": 29227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 29297,
											"end": 29959,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 29297,
											"end": 29959,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 29707,
											"end": 29714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 29664,
											"end": 29672,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 29620,
											"end": 29621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 29555,
											"end": 29580,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 29493,
											"end": 29494,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 29429,
											"end": 29430,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 29399,
											"end": 29750,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 29954,
											"end": 29957,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 29941,
											"end": 29950,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 29941,
											"end": 29950,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 29941,
											"end": 29950,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 29941,
											"end": 29950,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 29941,
											"end": 29950,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29941,
											"end": 29950,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 29941,
											"end": 29957,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 29297,
											"end": 29959,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 29297,
											"end": 29959,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29973,
											"end": 29986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 29973,
											"end": 29992,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23510,
											"end": 23697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23510,
											"end": 23697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23510,
											"end": 23697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23510,
											"end": 23697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 191,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 99,
											"end": 165,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 92,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 88,
											"end": 166,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 81,
											"end": 86,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 167,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 68,
											"end": 185,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 68,
											"end": 185,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 181,
											"end": 182,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 179,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 171,
											"end": 183,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 196,
											"end": 441,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 196,
											"end": 441,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 254,
											"end": 260,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 309,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 304,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 286,
											"end": 293,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 282,
											"end": 305,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 278,
											"end": 310,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 275,
											"end": 327,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 275,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 275,
											"end": 327,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 323,
											"end": 324,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 320,
											"end": 321,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 313,
											"end": 325,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 275,
											"end": 327,
											"name": "tag",
											"source": 3,
											"value": "283"
										},
										{
											"begin": 275,
											"end": 327,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 349,
											"end": 372,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 381,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 405,
											"end": 410,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 381,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 381,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 638,
											"end": 888,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 638,
											"end": 888,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 723,
											"end": 724,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "tag",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 747,
											"end": 753,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 744,
											"end": 745,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 741,
											"end": 754,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 733,
											"end": 846,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 733,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 823,
											"end": 834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 823,
											"end": 834,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 823,
											"end": 834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 804,
											"end": 815,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 804,
											"end": 815,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 804,
											"end": 815,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 797,
											"end": 836,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 769,
											"end": 771,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 762,
											"end": 772,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 733,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "287"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 733,
											"end": 846,
											"name": "tag",
											"source": 3,
											"value": "289"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 880,
											"end": 881,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 878,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 862,
											"end": 878,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 855,
											"end": 882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 638,
											"end": 888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 893,
											"end": 1223,
											"name": "tag",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 893,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 935,
											"end": 938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 978,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 967,
											"end": 979,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1000,
											"end": 1006,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 995,
											"end": 998,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 988,
											"end": 1007,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1016,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 1085,
											"end": 1091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1078,
											"end": 1082,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1073,
											"end": 1076,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1069,
											"end": 1083,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1062,
											"end": 1066,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1055,
											"end": 1060,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1067,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1016,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 1016,
											"end": 1092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1016,
											"end": 1092,
											"name": "tag",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 1016,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1137,
											"end": 1139,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1125,
											"end": 1140,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1142,
											"end": 1208,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 1121,
											"end": 1209,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1210,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1210,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1210,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1210,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1216,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1108,
											"end": 1217,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1108,
											"end": 1217,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 893,
											"end": 1223,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 893,
											"end": 1223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1448,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1228,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1377,
											"end": 1379,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1375,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1380,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 1344,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 1438,
											"end": 1440,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1436,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1441,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1415,
											"end": 1421,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 1397,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1633,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1453,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1553,
											"end": 1562,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1544,
											"end": 1551,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1540,
											"end": 1563,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1568,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1581,
											"end": 1582,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1571,
											"end": 1583,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1604,
											"end": 1627,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1604,
											"end": 1627,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1453,
											"end": 1633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1869,
											"end": 2065,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 1869,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1937,
											"end": 1957,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1937,
											"end": 1957,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1997,
											"end": 2039,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1986,
											"end": 2040,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1986,
											"end": 2040,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2041,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1976,
											"end": 2041,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1966,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 1966,
											"end": 2059,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2055,
											"end": 2056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2053,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2045,
											"end": 2057,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2070,
											"end": 2324,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2070,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2138,
											"end": 2144,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2146,
											"end": 2152,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2201,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2196,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2174,
											"end": 2197,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2170,
											"end": 2202,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2167,
											"end": 2219,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2167,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 2167,
											"end": 2219,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2215,
											"end": 2216,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2213,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2205,
											"end": 2217,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2167,
											"end": 2219,
											"name": "tag",
											"source": 3,
											"value": "300"
										},
										{
											"begin": 2167,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 2238,
											"end": 2267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2267,
											"name": "tag",
											"source": 3,
											"value": "301"
										},
										{
											"begin": 2238,
											"end": 2267,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2228,
											"end": 2267,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2314,
											"end": 2316,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2299,
											"end": 2317,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2317,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2317,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2318,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2286,
											"end": 2318,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2070,
											"end": 2324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2839,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 2511,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2602,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2604,
											"end": 2610,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2657,
											"end": 2659,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2645,
											"end": 2654,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2636,
											"end": 2643,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2632,
											"end": 2655,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2628,
											"end": 2660,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2677,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2677,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 2625,
											"end": 2677,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2674,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2670,
											"end": 2671,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2675,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2677,
											"name": "tag",
											"source": 3,
											"value": "304"
										},
										{
											"begin": 2625,
											"end": 2677,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 2715,
											"end": 2724,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 2696,
											"end": 2725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "tag",
											"source": 3,
											"value": "305"
										},
										{
											"begin": 2696,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2744,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 2778,
											"end": 2780,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2763,
											"end": 2781,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2744,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 2744,
											"end": 2782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2744,
											"end": 2782,
											"name": "tag",
											"source": 3,
											"value": "306"
										},
										{
											"begin": 2744,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2734,
											"end": 2782,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2734,
											"end": 2782,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2829,
											"end": 2831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2818,
											"end": 2827,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2814,
											"end": 2832,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2801,
											"end": 2833,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2791,
											"end": 2833,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2791,
											"end": 2833,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2839,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2839,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2839,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2844,
											"end": 3030,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2844,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2903,
											"end": 2909,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2956,
											"end": 2958,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2944,
											"end": 2953,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2935,
											"end": 2942,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2931,
											"end": 2954,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2927,
											"end": 2959,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2924,
											"end": 2976,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2924,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 2924,
											"end": 2976,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2972,
											"end": 2973,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2970,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2962,
											"end": 2974,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2924,
											"end": 2976,
											"name": "tag",
											"source": 3,
											"value": "308"
										},
										{
											"begin": 2924,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2995,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 3014,
											"end": 3023,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2995,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 2995,
											"end": 3024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3035,
											"end": 3382,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3035,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3100,
											"end": 3106,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3108,
											"end": 3114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3161,
											"end": 3163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3149,
											"end": 3158,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3140,
											"end": 3147,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3136,
											"end": 3159,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3132,
											"end": 3164,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3129,
											"end": 3181,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3129,
											"end": 3181,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 3129,
											"end": 3181,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3177,
											"end": 3178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3174,
											"end": 3175,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3167,
											"end": 3179,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3129,
											"end": 3181,
											"name": "tag",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 3129,
											"end": 3181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3200,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 3219,
											"end": 3228,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3200,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 3200,
											"end": 3229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3200,
											"end": 3229,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 3200,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3229,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3190,
											"end": 3229,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3268,
											"end": 3277,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3264,
											"end": 3282,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3251,
											"end": 3283,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3326,
											"end": 3331,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3319,
											"end": 3332,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3312,
											"end": 3333,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3305,
											"end": 3310,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3302,
											"end": 3334,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3292,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 3292,
											"end": 3352,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3348,
											"end": 3349,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3346,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3338,
											"end": 3350,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3292,
											"end": 3352,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 3292,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3376,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3361,
											"end": 3376,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3361,
											"end": 3376,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3361,
											"end": 3376,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3035,
											"end": 3382,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3035,
											"end": 3382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3035,
											"end": 3382,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3035,
											"end": 3382,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3035,
											"end": 3382,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3035,
											"end": 3382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3387,
											"end": 3571,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 3387,
											"end": 3571,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3439,
											"end": 3516,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3436,
											"end": 3437,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3517,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3536,
											"end": 3540,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 3533,
											"end": 3534,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3526,
											"end": 3541,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3564,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3557,
											"end": 3558,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3550,
											"end": 3565,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3576,
											"end": 4773,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3576,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3671,
											"end": 3677,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3685,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3687,
											"end": 3693,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3701,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3748,
											"end": 3751,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3736,
											"end": 3745,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3727,
											"end": 3734,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3723,
											"end": 3746,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3719,
											"end": 3752,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 3716,
											"end": 3769,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3716,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 3716,
											"end": 3769,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 3766,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3763,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3755,
											"end": 3767,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3716,
											"end": 3769,
											"name": "tag",
											"source": 3,
											"value": "316"
										},
										{
											"begin": 3716,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3788,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 3807,
											"end": 3816,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3788,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 3788,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3788,
											"end": 3817,
											"name": "tag",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 3788,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3778,
											"end": 3817,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3778,
											"end": 3817,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 3870,
											"end": 3872,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3859,
											"end": 3868,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3855,
											"end": 3873,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 3836,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3874,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 3836,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3826,
											"end": 3874,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3826,
											"end": 3874,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3921,
											"end": 3923,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3910,
											"end": 3919,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3893,
											"end": 3925,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3925,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3883,
											"end": 3925,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3978,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3965,
											"end": 3974,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3961,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3948,
											"end": 3980,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4032,
											"end": 4038,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4043,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4026,
											"end": 4060,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4026,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 4026,
											"end": 4060,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4056,
											"end": 4057,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4054,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4046,
											"end": 4058,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4026,
											"end": 4060,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 4026,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4094,
											"end": 4100,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4083,
											"end": 4092,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4079,
											"end": 4101,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4101,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4069,
											"end": 4101,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4139,
											"end": 4146,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4132,
											"end": 4136,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4128,
											"end": 4130,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4124,
											"end": 4137,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4120,
											"end": 4147,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4110,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 4110,
											"end": 4165,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4161,
											"end": 4162,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4159,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4151,
											"end": 4163,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4110,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 4110,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4199,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4184,
											"end": 4200,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4219,
											"end": 4221,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4215,
											"end": 4217,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4212,
											"end": 4222,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4245,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4209,
											"end": 4245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 4209,
											"end": 4245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4225,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 4225,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 4225,
											"end": 4243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4225,
											"end": 4243,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 4225,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4361,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4353,
											"end": 4362,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4421,
											"end": 4425,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4413,
											"end": 4426,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4426,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4264,
											"end": 4330,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 4409,
											"end": 4431,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4409,
											"end": 4431,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4409,
											"end": 4431,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4433,
											"end": 4435,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 4405,
											"end": 4436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4441,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4389,
											"end": 4442,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4389,
											"end": 4442,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4389,
											"end": 4442,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4457,
											"end": 4475,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4457,
											"end": 4475,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4457,
											"end": 4475,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4499,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4499,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4499,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4454,
											"end": 4500,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4523,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4451,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 4451,
											"end": 4523,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4503,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 4503,
											"end": 4521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 4503,
											"end": 4521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4503,
											"end": 4521,
											"name": "tag",
											"source": 3,
											"value": "324"
										},
										{
											"begin": 4503,
											"end": 4521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4543,
											"end": 4553,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4539,
											"end": 4541,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4532,
											"end": 4554,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4580,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4570,
											"end": 4576,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4625,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 4613,
											"end": 4615,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4608,
											"end": 4610,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4604,
											"end": 4606,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4600,
											"end": 4611,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4596,
											"end": 4616,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4593,
											"end": 4626,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4590,
											"end": 4643,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4590,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 4590,
											"end": 4643,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4639,
											"end": 4640,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4636,
											"end": 4637,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4629,
											"end": 4641,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4590,
											"end": 4643,
											"name": "tag",
											"source": 3,
											"value": "325"
										},
										{
											"begin": 4590,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4695,
											"end": 4697,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4690,
											"end": 4692,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4686,
											"end": 4688,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4682,
											"end": 4693,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4677,
											"end": 4679,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4669,
											"end": 4675,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4665,
											"end": 4680,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4652,
											"end": 4698,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 4740,
											"end": 4741,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4735,
											"end": 4737,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4730,
											"end": 4732,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4718,
											"end": 4733,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4714,
											"end": 4738,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4707,
											"end": 4742,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4761,
											"end": 4767,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4751,
											"end": 4767,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 4751,
											"end": 4767,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4751,
											"end": 4767,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4751,
											"end": 4767,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4751,
											"end": 4767,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4751,
											"end": 4767,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4751,
											"end": 4767,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3576,
											"end": 4773,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3576,
											"end": 4773,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 3576,
											"end": 4773,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3576,
											"end": 4773,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3576,
											"end": 4773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3576,
											"end": 4773,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3576,
											"end": 4773,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3576,
											"end": 4773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4778,
											"end": 5038,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4778,
											"end": 5038,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4846,
											"end": 4852,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4860,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4907,
											"end": 4909,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4895,
											"end": 4904,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4886,
											"end": 4893,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4882,
											"end": 4905,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4878,
											"end": 4910,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4875,
											"end": 4927,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4875,
											"end": 4927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 4875,
											"end": 4927,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4923,
											"end": 4924,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4921,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4913,
											"end": 4925,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4875,
											"end": 4927,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 4875,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4946,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 4965,
											"end": 4974,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4946,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 4946,
											"end": 4975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4946,
											"end": 4975,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 4946,
											"end": 4975,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4936,
											"end": 4975,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4936,
											"end": 4975,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4994,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 5028,
											"end": 5030,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5017,
											"end": 5026,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5013,
											"end": 5031,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4994,
											"end": 5032,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 4994,
											"end": 5032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4994,
											"end": 5032,
											"name": "tag",
											"source": 3,
											"value": "329"
										},
										{
											"begin": 4994,
											"end": 5032,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4984,
											"end": 5032,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4984,
											"end": 5032,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4778,
											"end": 5038,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4778,
											"end": 5038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4778,
											"end": 5038,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4778,
											"end": 5038,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4778,
											"end": 5038,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4778,
											"end": 5038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5480,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 5043,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5122,
											"end": 5123,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5118,
											"end": 5130,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5118,
											"end": 5130,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5118,
											"end": 5130,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 5118,
											"end": 5130,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5165,
											"end": 5177,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5186,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 5186,
											"end": 5247,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5240,
											"end": 5244,
											"name": "PUSH",
											"source": 3,
											"value": "7F"
										},
										{
											"begin": 5232,
											"end": 5238,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5245,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5186,
											"end": 5247,
											"name": "tag",
											"source": 3,
											"value": "331"
										},
										{
											"begin": 5186,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5295,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5285,
											"end": 5291,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5282,
											"end": 5296,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5262,
											"end": 5280,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5259,
											"end": 5297,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 5256,
											"end": 5474,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5330,
											"end": 5407,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5327,
											"end": 5328,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5320,
											"end": 5408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5431,
											"end": 5435,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 5428,
											"end": 5429,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5421,
											"end": 5436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5463,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 5456,
											"end": 5457,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5449,
											"end": 5464,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5474,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 5256,
											"end": 5474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5474,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5480,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5480,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5480,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5043,
											"end": 5480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5485,
											"end": 5981,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 5485,
											"end": 5981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5664,
											"end": 5667,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5702,
											"end": 5708,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5696,
											"end": 5709,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5718,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 5777,
											"end": 5783,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5772,
											"end": 5775,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5765,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5757,
											"end": 5763,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 5753,
											"end": 5770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5718,
											"end": 5784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 5718,
											"end": 5784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5718,
											"end": 5784,
											"name": "tag",
											"source": 3,
											"value": "334"
										},
										{
											"begin": 5718,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5847,
											"end": 5860,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5847,
											"end": 5860,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5806,
											"end": 5822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5806,
											"end": 5822,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5806,
											"end": 5822,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5806,
											"end": 5822,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5869,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 5847,
											"end": 5860,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5806,
											"end": 5822,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5916,
											"end": 5920,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5904,
											"end": 5921,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 5904,
											"end": 5921,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5869,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 5869,
											"end": 5939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5869,
											"end": 5939,
											"name": "tag",
											"source": 3,
											"value": "335"
										},
										{
											"begin": 5869,
											"end": 5939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5955,
											"end": 5975,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5955,
											"end": 5975,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 5485,
											"end": 5981,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5485,
											"end": 5981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5986,
											"end": 6498,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 5986,
											"end": 6498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6180,
											"end": 6184,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6209,
											"end": 6251,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6290,
											"end": 6292,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6282,
											"end": 6288,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 6278,
											"end": 6293,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6267,
											"end": 6276,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6260,
											"end": 6294,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6342,
											"end": 6344,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6334,
											"end": 6340,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6330,
											"end": 6345,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6325,
											"end": 6327,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6314,
											"end": 6323,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6310,
											"end": 6328,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6303,
											"end": 6346,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6303,
											"end": 6346,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6382,
											"end": 6388,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6377,
											"end": 6379,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6366,
											"end": 6375,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6362,
											"end": 6380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6355,
											"end": 6389,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6425,
											"end": 6428,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6420,
											"end": 6422,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6409,
											"end": 6418,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6405,
											"end": 6423,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6398,
											"end": 6429,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6446,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 6487,
											"end": 6490,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6476,
											"end": 6485,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6472,
											"end": 6491,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6464,
											"end": 6470,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6446,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "276"
										},
										{
											"begin": 6446,
											"end": 6492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6446,
											"end": 6492,
											"name": "tag",
											"source": 3,
											"value": "337"
										},
										{
											"begin": 6446,
											"end": 6492,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6438,
											"end": 6492,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 5986,
											"end": 6498,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5986,
											"end": 6498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6503,
											"end": 6752,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 6503,
											"end": 6752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6572,
											"end": 6578,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6625,
											"end": 6627,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6613,
											"end": 6622,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6604,
											"end": 6611,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6600,
											"end": 6623,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6596,
											"end": 6628,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6641,
											"end": 6642,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6638,
											"end": 6639,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6631,
											"end": 6643,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 6593,
											"end": 6645,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6673,
											"end": 6682,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6667,
											"end": 6683,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6692,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 6716,
											"end": 6721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6692,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 6692,
											"end": 6722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"IERC721A.sol",
								"encode.sol",
								"newone.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintToken(uint256)": "c634d032",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"newone.sol\":\"ERC721A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9900000},\"remappings\":[]},\"sources\":{\"IERC721A.sol\":{\"keccak256\":\"0xd369e9647904487d09c2aaa736baa5d7a4629d699e8d04cd6eb365b4921422ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d76a2749515b1cc5dfafcae19738f0360bb4cdbb480b755bce38a837ce0566d\",\"dweb:/ipfs/QmTfrYAMbdSsWq529WqTRun8LpxTP3kwoQzLU18ode4NbS\"]},\"newone.sol\":{\"keccak256\":\"0x23187630666a76311fdafa516fe06602cc9ab3654ebf68299cd4038f6560baac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://477f99a2090b6b209753903efc028c62c34e01ff6f830304582793e8ff86faf6\",\"dweb:/ipfs/QmPhTaxvvyYwGn9WZywMKdVAznHZKUuiXaZbkULgEkEGbg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 328,
								"contract": "newone.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 330,
								"contract": "newone.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 332,
								"contract": "newone.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 334,
								"contract": "newone.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 338,
								"contract": "newone.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 342,
								"contract": "newone.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 347,
								"contract": "newone.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)248_storage)"
							},
							{
								"astId": 353,
								"contract": "newone.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)248_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)248_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)248_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 247,
										"contract": "newone.sol:ERC721A",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721 token receiver.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"newone.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":9900000},\"remappings\":[]},\"sources\":{\"IERC721A.sol\":{\"keccak256\":\"0xd369e9647904487d09c2aaa736baa5d7a4629d699e8d04cd6eb365b4921422ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d76a2749515b1cc5dfafcae19738f0360bb4cdbb480b755bce38a837ce0566d\",\"dweb:/ipfs/QmTfrYAMbdSsWq529WqTRun8LpxTP3kwoQzLU18ode4NbS\"]},\"newone.sol\":{\"keccak256\":\"0x23187630666a76311fdafa516fe06602cc9ab3654ebf68299cd4038f6560baac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://477f99a2090b6b209753903efc028c62c34e01ff6f830304582793e8ff86faf6\",\"dweb:/ipfs/QmPhTaxvvyYwGn9WZywMKdVAznHZKUuiXaZbkULgEkEGbg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> encode.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "encode.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.17;\"\n--> encode.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.17;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "encode.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"IERC721A.sol": {
				"ast": {
					"absolutePath": "IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							205
						]
					},
					"id": 206,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "109:37:0",
								"text": " @dev Interface of ERC721A."
							},
							"fullyImplemented": false,
							"id": 205,
							"linearizedBaseContracts": [
								205
							],
							"name": "IERC721A",
							"nameLocation": "157:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "172:76:0",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 5,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "259:33:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "292:2:0"
									},
									"src": "253:42:0"
								},
								{
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "301:44:0",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 8,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "356:32:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "388:2:0"
									},
									"src": "350:41:0"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "397:65:0",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 11,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "473:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:2:0"
									},
									"src": "467:35:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "508:51:0",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 14,
									"name": "MintToZeroAddress",
									"nameLocation": "570:17:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:0"
									},
									"src": "564:26:0"
								},
								{
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "596:72:0",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 17,
									"name": "MintZeroQuantity",
									"nameLocation": "679:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "695:2:0"
									},
									"src": "673:25:0"
								},
								{
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "704:44:0",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 20,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "759:29:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:0"
									},
									"src": "753:38:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "797:76:0",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 23,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "884:33:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "917:2:0"
									},
									"src": "878:42:0"
								},
								{
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "926:53:0",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 26,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "990:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1016:2:0"
									},
									"src": "984:35:0"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "1025:116:0",
										"text": " Cannot safely transfer to a contract that does not implement the\n ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 29,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "1152:38:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1190:2:0"
									},
									"src": "1146:47:0"
								},
								{
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "1199:55:0",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 32,
									"name": "TransferToZeroAddress",
									"nameLocation": "1265:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1286:2:0"
									},
									"src": "1259:30:0"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1295:44:0",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 35,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "1350:27:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:2:0"
									},
									"src": "1344:36:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1386:79:0",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"errorSelector": "3db1f9af",
									"id": 38,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "1476:31:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1507:2:0"
									},
									"src": "1470:40:0"
								},
								{
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "1516:83:0",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"errorSelector": "00d58153",
									"id": 41,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "1610:35:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1645:2:0"
									},
									"src": "1604:44:0"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 50,
									"members": [
										{
											"constant": false,
											"id": 43,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "1912:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 50,
											"src": "1904:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 42,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1904:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 45,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "2017:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 50,
											"src": "2010:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 44,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2010:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 47,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "2092:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 50,
											"src": "2087:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 46,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2087:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 49,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "2203:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 50,
											"src": "2196:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 48,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "2196:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "1842:14:0",
									"nodeType": "StructDefinition",
									"scope": 205,
									"src": "1835:384:0",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "2410:192:0",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 56,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2616:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2627:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "2653:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:9:0"
									},
									"scope": 205,
									"src": "2607:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "2849:341:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3204:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3229:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "3222:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 58,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3222:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3221:20:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "3265:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3265:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3264:6:0"
									},
									"scope": 205,
									"src": "3195:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "3458:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 73,
									"name": "Transfer",
									"nameLocation": "3557:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3582:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "3566:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3604:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "3588:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3588:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3624:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "3608:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3565:67:0"
									},
									"src": "3551:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "3639:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 82,
									"name": "Approval",
									"nameLocation": "3744:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3769:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "3753:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3792:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "3776:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3776:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3818:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "3802:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:74:0"
									},
									"src": "3738:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "3833:124:0",
										"text": " @dev Emitted when `owner` enables or disables\n (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 91,
									"name": "ApprovalForAll",
									"nameLocation": "3968:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3999:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3983:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4022:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "4006:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4037:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "4032:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 88,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4032:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:64:0"
									},
									"src": "3962:85:0"
								},
								{
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "4053:74:0",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4141:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4159:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "4151:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4151:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4150:15:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4197:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "4189:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:17:0"
									},
									"scope": 205,
									"src": "4132:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "4212:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "4357:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4373:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4365:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4365:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4364:17:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4413:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "4405:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4404:15:0"
									},
									"scope": 205,
									"src": "4348:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "4426:711:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`,\n checking first that contract recipients are aware of the ERC721 protocol\n to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move\n this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5151:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5185:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "5177:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5177:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5207:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "5199:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5199:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5227:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "5219:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5259:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "5244:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 115,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5244:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5167:102:0"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5286:0:0"
									},
									"scope": 205,
									"src": "5142:145:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "5293:80:0",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 129,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5387:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "5413:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5413:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5443:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "5435:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5435:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5463:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "5455:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5403:73:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5493:0:0"
									},
									"scope": 205,
									"src": "5378:116:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "5500:512:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6026:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6056:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "6048:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6048:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6078:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "6070:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6070:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6098:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "6090:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6090:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6038:73:0"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6128:0:0"
									},
									"scope": 205,
									"src": "6017:112:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "6135:459:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "6608:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6624:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "6616:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6636:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "6628:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6615:29:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6661:0:0"
									},
									"scope": 205,
									"src": "6599:63:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "6668:316:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "6998:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7024:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "7016:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7016:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "7039:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "7034:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7034:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7015:34:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7058:0:0"
									},
									"scope": 205,
									"src": "6989:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "7065:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "7218:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7238:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "7230:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7229:17:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7278:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "7270:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7270:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7269:18:0"
									},
									"scope": 205,
									"src": "7209:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "7294:139:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "7447:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7472:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "7464:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7487:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "7479:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7479:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7463:33:0"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "7520:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 170,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7520:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7519:6:0"
									},
									"scope": 205,
									"src": "7438:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "7717:58:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "7789:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7793:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "7819:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 176,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7819:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7818:15:0"
									},
									"scope": 205,
									"src": "7780:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "7840:60:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "7914:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7920:2:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "7946:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 182,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7946:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7945:15:0"
									},
									"scope": 205,
									"src": "7905:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "7967:90:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "8071:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8088:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "8080:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8080:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8079:17:0"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "8120:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 190,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8120:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8119:15:0"
									},
									"scope": 205,
									"src": "8062:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "8322:267:0",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n (inclusive) is transferred from `from` to `to`, as defined in the\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n See {_mintERC2309} for more details."
									},
									"eventSelector": "deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d",
									"id": 204,
									"name": "ConsecutiveTransfer",
									"nameLocation": "8600:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "8636:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "8620:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8620:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "8657:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "8649:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8649:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8684:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "8668:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8668:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8706:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "8690:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8690:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8619:90:0"
									},
									"src": "8594:116:0"
								}
							],
							"scope": 206,
							"src": "147:8565:0",
							"usedErrors": [
								5,
								8,
								11,
								14,
								17,
								20,
								23,
								26,
								29,
								32,
								35,
								38,
								41
							]
						}
					],
					"src": "84:8628:0"
				},
				"id": 0
			},
			"encode.sol": {
				"ast": {
					"absolutePath": "encode.sol",
					"exportedSymbols": {
						"ERC721A": [
							1991
						],
						"ERC721A__IERC721Receiver": [
							242
						],
						"EncodeCall": [
							224
						],
						"IERC721A": [
							205
						]
					},
					"id": 225,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"absolutePath": "newone.sol",
							"file": "./newone.sol",
							"id": 207,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 225,
							"sourceUnit": 1992,
							"src": "0:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EncodeCall",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 224,
							"linearizedBaseContracts": [
								224
							],
							"name": "EncodeCall",
							"nameLocation": "33:10:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "118:58:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 216,
																"name": "ERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1991,
																"src": "146:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A_$1991_$",
																	"typeString": "type(contract ERC721A)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "154:9:1",
															"memberName": "mintToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 260,
															"src": "146:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_payable$_t_uint256_$returns$__$",
																"typeString": "function ERC721A.mintToken(uint256) payable"
															}
														},
														{
															"components": [
																{
																	"id": 218,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "165:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 219,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "164:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_declaration_payable$_t_uint256_$returns$__$",
																"typeString": "function ERC721A.mintToken(uint256) payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 214,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "131:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "135:10:1",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "131:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "131:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 213,
												"id": 221,
												"nodeType": "Return",
												"src": "124:49:1"
											}
										]
									},
									"functionSelector": "d7e86d8e",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encodeCall",
									"nameLocation": "55:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "74:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "66:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "66:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65:16:1"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "105:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 211,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "105:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "104:14:1"
									},
									"scope": 224,
									"src": "46:130:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 225,
							"src": "24:156:1",
							"usedErrors": []
						}
					],
					"src": "0:181:1"
				},
				"id": 1
			},
			"newone.sol": {
				"ast": {
					"absolutePath": "newone.sol",
					"exportedSymbols": {
						"ERC721A": [
							1991
						],
						"ERC721A__IERC721Receiver": [
							242
						],
						"IERC721A": [
							205
						]
					},
					"id": 1992,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 226,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "84:23:2"
						},
						{
							"absolutePath": "IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 227,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1992,
							"sourceUnit": 206,
							"src": "109:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721A__IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "135:51:2",
								"text": " @dev Interface of ERC721 token receiver."
							},
							"fullyImplemented": false,
							"id": 242,
							"linearizedBaseContracts": [
								242
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "197:24:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "237:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "271:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "263:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "263:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "297:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "289:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "319:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "311:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "311:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "351:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "336:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "336:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:108:2"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "380:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 238,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "380:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:8:2"
									},
									"scope": 242,
									"src": "228:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1992,
							"src": "187:203:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 244,
										"name": "IERC721A",
										"nameLocations": [
											"915:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 205,
										"src": "915:8:2"
									},
									"id": 245,
									"nodeType": "InheritanceSpecifier",
									"src": "915:8:2"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 243,
								"nodeType": "StructuredDocumentation",
								"src": "392:502:2",
								"text": " @title ERC721A\n @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n Non-Fungible Token Standard, including the Metadata extension.\n Optimized for lower gas during batch mints.\n Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n starting from `_startTokenId()`.\n Assumptions:\n - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 1991,
							"linearizedBaseContracts": [
								1991,
								205
							],
							"name": "ERC721A",
							"nameLocation": "904:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC721A.TokenApprovalRef",
									"id": 248,
									"members": [
										{
											"constant": false,
											"id": 247,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1057:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 248,
											"src": "1049:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 246,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenApprovalRef",
									"nameLocation": "1022:16:2",
									"nodeType": "StructDefinition",
									"scope": 1991,
									"src": "1015:54:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "1128:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 254,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1148:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1152:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1148:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 256,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 250,
															"src": "1160:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 253,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1624,
															1639
														],
														"referencedDeclaration": 1639,
														"src": "1138:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1138:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "1138:31:2"
											}
										]
									},
									"functionSelector": "c634d032",
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintToken",
									"nameLocation": "1084:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "1102:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1094:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:18:2"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1128:0:2"
									},
									"scope": 1991,
									"src": "1075:101:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 268,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "1436:27:2",
									"nodeType": "VariableDeclaration",
									"scope": 1991,
									"src": "1411:68:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 261,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1411:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 267,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 262,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1467:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1472:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "1467:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 265,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1466:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 266,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1478:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1466:13:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 271,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_MINTED",
									"nameLocation": "1577:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 1991,
									"src": "1552:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 269,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1552:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 270,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1601:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 274,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_BURNED",
									"nameLocation": "1701:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 1991,
									"src": "1676:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 272,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 273,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1725:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 277,
									"mutability": "constant",
									"name": "_BITPOS_AUX",
									"nameLocation": "1817:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 1991,
									"src": "1792:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 275,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1792:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 276,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1831:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 285,
									"mutability": "constant",
									"name": "_BITMASK_AUX_COMPLEMENT",
									"nameLocation": "1947:23:2",
									"nodeType": "VariableDeclaration",
									"scope": 1991,
									"src": "1922:65:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 278,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1922:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 284,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1974:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 280,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1979:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "1974:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 282,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1973:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 283,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1986:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "1973:14:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 288,
									"mutability": "constant",
									"name": "_BITPOS_START_TIMESTAMP",
									"nameLocation": "2084:23:2",
									"nodeType": "VariableDeclaration",
									"scope": 1991,
									"src": "2059:54:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2059:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 287,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2110:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 293,
									"mutability": "constant",
									"name": "_BITMASK_BURNED",
									"nameLocation": "2206:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1991,
									"src": "2181:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 289,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2181:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 290,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2224:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 291,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2229:3:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "2224:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 296,
									"mutability": "constant",
									"name": "_BITPOS_NEXT_INITIALIZED",
									"nameLocation": "2338:24:2",
									"nodeType": "VariableDeclaration",
									"scope": 1991,
									"src": "2313:55:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2313:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 295,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2365:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 301,
									"mutability": "constant",
									"name": "_BITMASK_NEXT_INITIALIZED",
									"nameLocation": "2470:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 1991,
									"src": "2445:61:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 297,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2445:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 300,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 298,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2498:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 299,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2503:3:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "2498:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 304,
									"mutability": "constant",
									"name": "_BITPOS_EXTRA_DATA",
									"nameLocation": "2598:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1991,
									"src": "2573:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 302,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2573:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 303,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2619:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 312,
									"mutability": "constant",
									"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "2740:30:2",
									"nodeType": "VariableDeclaration",
									"scope": 1991,
									"src": "2715:72:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 305,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2715:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 311,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2774:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2779:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "2774:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 309,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2773:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 310,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2786:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2773:14:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 320,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS",
									"nameLocation": "2872:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 1991,
									"src": "2847:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 313,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2847:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 319,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 314,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2892:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2897:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "2892:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 317,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2891:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 318,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2904:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2891:14:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 323,
									"mutability": "constant",
									"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "3213:32:2",
									"nodeType": "VariableDeclaration",
									"scope": 1991,
									"src": "3188:64:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 321,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3188:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 322,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3248:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 326,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "3399:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 1991,
									"src": "3374:127:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 324,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3374:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 325,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3435:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 328,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "3744:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 1991,
									"src": "3728:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 327,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3728:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 330,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "3816:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 1991,
									"src": "3800:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 329,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3800:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 332,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "3868:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1991,
									"src": "3853:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 331,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3853:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 334,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "3915:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1991,
									"src": "3900:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 333,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "3900:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 338,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "4342:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 1991,
									"src": "4306:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 337,
										"keyType": {
											"id": 335,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4314:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4306:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 336,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4325:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 342,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "4601:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1991,
									"src": "4565:54:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 341,
										"keyType": {
											"id": 339,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4573:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4565:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 340,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4584:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 347,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "4721:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1991,
									"src": "4676:60:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$248_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
									},
									"typeName": {
										"id": 346,
										"keyType": {
											"id": 343,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4684:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "4676:36:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$248_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
										},
										"valueType": {
											"id": 345,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 344,
												"name": "TokenApprovalRef",
												"nameLocations": [
													"4695:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 248,
												"src": "4695:16:2"
											},
											"referencedDeclaration": 248,
											"src": "4695:16:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenApprovalRef_$248_storage_ptr",
												"typeString": "struct ERC721A.TokenApprovalRef"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 353,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "4844:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1991,
									"src": "4791:71:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 352,
										"keyType": {
											"id": 348,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4799:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4791:44:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 351,
											"keyType": {
												"id": 349,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "4818:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "4810:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 350,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "4829:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "5108:98:2",
										"statements": [
											{
												"expression": {
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 360,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "5118:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 361,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "5126:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5118:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "5118:13:2"
											},
											{
												"expression": {
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 364,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "5141:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 365,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "5151:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5141:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "5141:17:2"
											},
											{
												"expression": {
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 368,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 328,
														"src": "5168:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 369,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "5184:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5184:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5168:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "5168:31:2"
											}
										]
									},
									"id": 374,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "5078:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "5064:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 354,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5064:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "5099:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "5085:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 356,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5085:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5063:44:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5108:0:2"
									},
									"scope": 1991,
									"src": "5052:154:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "5597:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5614:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 379,
												"id": 381,
												"nodeType": "Return",
												"src": "5607:8:2"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "5402:125:2",
										"text": " @dev Returns the starting token ID.\n To change the starting token ID, please override this function."
									},
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "5541:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5554:2:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "5588:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5588:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5587:9:2"
									},
									"scope": 1991,
									"src": "5532:90:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "5760:37:2",
										"statements": [
											{
												"expression": {
													"id": 389,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 328,
													"src": "5777:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 388,
												"id": 390,
												"nodeType": "Return",
												"src": "5770:20:2"
											}
										]
									},
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "5628:63:2",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "5705:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5717:2:2"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "5751:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5750:9:2"
									},
									"scope": 1991,
									"src": "5696:101:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										56
									],
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "6070:247:2",
										"statements": [
											{
												"id": 406,
												"nodeType": "UncheckedBlock",
												"src": "6223:88:2",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 399,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 328,
																	"src": "6254:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 400,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 330,
																	"src": "6270:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6254:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 402,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "6285:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6285:15:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6254:46:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 398,
														"id": 405,
														"nodeType": "Return",
														"src": "6247:53:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "5803:192:2",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "6009:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 395,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6043:8:2"
									},
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6020:2:2"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "6061:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6061:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6060:9:2"
									},
									"scope": 1991,
									"src": "6000:317:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 420,
										"nodeType": "Block",
										"src": "6474:226:2",
										"statements": [
											{
												"id": 419,
												"nodeType": "UncheckedBlock",
												"src": "6621:73:2",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 414,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "6652:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 415,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "6668:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6668:15:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6652:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 413,
														"id": 418,
														"nodeType": "Return",
														"src": "6645:38:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "6323:82:2",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "6419:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6431:2:2"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "6465:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6465:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6464:9:2"
									},
									"scope": 1991,
									"src": "6410:290:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "6841:36:2",
										"statements": [
											{
												"expression": {
													"id": 427,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 330,
													"src": "6858:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 426,
												"id": 428,
												"nodeType": "Return",
												"src": "6851:19:2"
											}
										]
									},
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "6706:66:2",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "6786:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6798:2:2"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "6832:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6832:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6831:9:2"
									},
									"scope": 1991,
									"src": "6777:100:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "7232:158:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 439,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "7246:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7263:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7255:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 440,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7255:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7255:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7246:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "7242:69:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 446,
																	"name": "BalanceQueryForZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "7275:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7302:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "7275:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 445,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "7267:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7267:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 449,
													"nodeType": "ExpressionStatement",
													"src": "7267:44:2"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 451,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "7328:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 453,
														"indexExpression": {
															"id": 452,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "7347:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7328:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 454,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "7356:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7328:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 438,
												"id": 456,
												"nodeType": "Return",
												"src": "7321:62:2"
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "7072:74:2",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7160:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 435,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7205:8:2"
									},
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7178:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "7170:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7170:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7169:15:2"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "7223:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7222:9:2"
									},
									"scope": 1991,
									"src": "7151:239:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "7537:106:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 466,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "7555:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 468,
																	"indexExpression": {
																		"id": 467,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 461,
																		"src": "7574:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7555:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 469,
																	"name": "_BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 271,
																	"src": "7584:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7555:50:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 471,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7554:52:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 472,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "7609:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7554:82:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 465,
												"id": 474,
												"nodeType": "Return",
												"src": "7547:89:2"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7396:66:2",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "7476:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7489:15:2"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "7528:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7527:9:2"
									},
									"scope": 1991,
									"src": "7467:176:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "7806:106:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 484,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "7824:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 486,
																	"indexExpression": {
																		"id": 485,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 479,
																		"src": "7843:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7824:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 487,
																	"name": "_BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "7853:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7824:50:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 489,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7823:52:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 490,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "7878:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7823:82:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 483,
												"id": 492,
												"nodeType": "Return",
												"src": "7816:89:2"
											}
										]
									},
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "7649:82:2",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "7745:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7767:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "7759:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7758:15:2"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "7797:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7797:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7796:9:2"
									},
									"scope": 1991,
									"src": "7736:176:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "8088:72:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 504,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 342,
																	"src": "8112:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 506,
																"indexExpression": {
																	"id": 505,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 497,
																	"src": "8131:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8112:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 507,
																"name": "_BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 277,
																"src": "8141:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8112:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8105:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 502,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "8105:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8105:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 501,
												"id": 510,
												"nodeType": "Return",
												"src": "8098:55:2"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "7918:102:2",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "8034:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8050:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "8042:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8041:15:2"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "8080:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 499,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8080:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8079:8:2"
									},
									"scope": 1991,
									"src": "8025:135:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "8403:334:2",
										"statements": [
											{
												"assignments": [
													521
												],
												"declarations": [
													{
														"constant": false,
														"id": 521,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "8421:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "8413:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 520,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8413:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 525,
												"initialValue": {
													"baseExpression": {
														"id": 522,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "8430:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 524,
													"indexExpression": {
														"id": 523,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "8449:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8430:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8413:42:2"
											},
											{
												"assignments": [
													527
												],
												"declarations": [
													{
														"constant": false,
														"id": 527,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "8473:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 548,
														"src": "8465:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 526,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 528,
												"nodeType": "VariableDeclarationStatement",
												"src": "8465:17:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8565:40:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8579:16:2",
															"value": {
																"name": "aux",
																"nodeType": "YulIdentifier",
																"src": "8592:3:2"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nodeType": "YulIdentifier",
																	"src": "8579:9:2"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 517,
														"isOffset": false,
														"isSlot": false,
														"src": "8592:3:2",
														"valueSize": 1
													},
													{
														"declaration": 527,
														"isOffset": false,
														"isSlot": false,
														"src": "8579:9:2",
														"valueSize": 1
													}
												],
												"id": 529,
												"nodeType": "InlineAssembly",
												"src": "8556:49:2"
											},
											{
												"expression": {
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 530,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "8614:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 531,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 521,
																		"src": "8624:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 532,
																		"name": "_BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 285,
																		"src": "8633:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8624:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 534,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8623:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 535,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 527,
																		"src": "8661:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 536,
																		"name": "_BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 277,
																		"src": "8674:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8661:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 538,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8660:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8623:63:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8614:72:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "8614:72:2"
											},
											{
												"expression": {
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 542,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "8696:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 544,
														"indexExpression": {
															"id": 543,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "8715:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8696:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 545,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "8724:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8696:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "8696:34:2"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "8166:171:2",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "8351:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8367:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "8359:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8359:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "8381:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "8374:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 516,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8374:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8358:27:2"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8403:0:2"
									},
									"scope": 1991,
									"src": "8342:395:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "9361:539:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 558,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 552,
																"src": "9673:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9688:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "9673:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 561,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 552,
																"src": "9749:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9764:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "9749:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "9673:101:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 565,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "9825:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9840:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "9825:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9673:177:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 557,
												"id": 569,
												"nodeType": "Return",
												"src": "9654:196:2"
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "8924:341:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "9279:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 554,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9337:8:2"
									},
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "9304:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "9297:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 551,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "9297:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9296:20:2"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "9355:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 555,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9355:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9354:6:2"
									},
									"scope": 1991,
									"src": "9270:630:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										179
									],
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "10223:29:2",
										"statements": [
											{
												"expression": {
													"id": 578,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 332,
													"src": "10240:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 577,
												"id": 579,
												"nodeType": "Return",
												"src": "10233:12:2"
											}
										]
									},
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "10091:58:2",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "10163:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 574,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10190:8:2"
									},
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10167:2:2"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "10208:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 575,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10208:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10207:15:2"
									},
									"scope": 1991,
									"src": "10154:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										185
									],
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "10394:31:2",
										"statements": [
											{
												"expression": {
													"id": 588,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 334,
													"src": "10411:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 587,
												"id": 589,
												"nodeType": "Return",
												"src": "10404:14:2"
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "10258:60:2",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "10332:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 584,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10361:8:2"
									},
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10338:2:2"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "10379:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 585,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10379:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10378:15:2"
									},
									"scope": 1991,
									"src": "10323:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										193
									],
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "10614:234:2",
										"statements": [
											{
												"condition": {
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10628:17:2",
													"subExpression": {
														"arguments": [
															{
																"id": 601,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "10637:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 600,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "10629:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10629:16:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 609,
												"nodeType": "IfStatement",
												"src": "10624:68:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 605,
																	"name": "URIQueryForNonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10655:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10683:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "10655:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 604,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "10647:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10647:45:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 608,
													"nodeType": "ExpressionStatement",
													"src": "10647:45:2"
												}
											},
											{
												"assignments": [
													611
												],
												"declarations": [
													{
														"constant": false,
														"id": 611,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "10717:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 635,
														"src": "10703:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 610,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "10703:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 614,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 612,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "10727:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10727:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10703:34:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 617,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 611,
																		"src": "10760:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10754:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 615,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "10754:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10754:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10769:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "10754:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10779:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10754:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10839:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10754:87:2",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 626,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 611,
																		"src": "10807:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 628,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 594,
																				"src": "10826:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 627,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1982,
																			"src": "10816:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10816:18:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 624,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "10790:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "10794:12:2",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "10790:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10790:45:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10783:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 622,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "10783:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10783:53:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 599,
												"id": 634,
												"nodeType": "Return",
												"src": "10747:94:2"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "10431:90:2",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "10535:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 596,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10581:8:2"
									},
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10552:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "10544:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10544:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10543:17:2"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "10599:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 597,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10599:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10598:15:2"
									},
									"scope": 1991,
									"src": "10526:322:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "11159:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11176:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 641,
												"id": 643,
												"nodeType": "Return",
												"src": "11169:9:2"
											}
										]
									},
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "10854:234:2",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "11102:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11110:2:2"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "11144:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 639,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11144:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11143:15:2"
									},
									"scope": 1991,
									"src": "11093:92:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										107
									],
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "11596:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 659,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "11648:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 658,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "11629:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11629:27:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11621:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 656,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11621:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11621:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11613:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 654,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11613:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11613:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 653,
												"id": 663,
												"nodeType": "Return",
												"src": "11606:52:2"
											}
										]
									},
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "11379:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "11524:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 650,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11569:8:2"
									},
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11540:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "11532:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11532:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11531:17:2"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "11587:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11587:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11586:9:2"
									},
									"scope": 1991,
									"src": "11515:150:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "11941:71:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 676,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "11996:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 675,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "11977:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11977:27:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 674,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "11958:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$50_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11958:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 673,
												"id": 679,
												"nodeType": "Return",
												"src": "11951:54:2"
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "11671:172:2",
										"text": " @dev Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around over time."
									},
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "11857:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11878:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "11870:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11869:17:2"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "11918:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 671,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 670,
														"name": "TokenOwnership",
														"nameLocations": [
															"11918:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 50,
														"src": "11918:14:2"
													},
													"referencedDeclaration": 50,
													"src": "11918:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$50_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11917:23:2"
									},
									"scope": 1991,
									"src": "11848:164:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "12194:68:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 691,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "12230:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 693,
															"indexExpression": {
																"id": 692,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "12248:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12230:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 690,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "12211:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$50_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12211:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 689,
												"id": 695,
												"nodeType": "Return",
												"src": "12204:51:2"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "12018:80:2",
										"text": " @dev Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "12112:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12133:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "12125:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12125:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12124:15:2"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "12171:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 687,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 686,
														"name": "TokenOwnership",
														"nameLocations": [
															"12171:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 50,
														"src": "12171:14:2"
													},
													"referencedDeclaration": 50,
													"src": "12171:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$50_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12170:23:2"
									},
									"scope": 1991,
									"src": "12103:159:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "12434:128:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 703,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "12448:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 705,
														"indexExpression": {
															"id": 704,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "12466:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12448:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12476:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12448:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 717,
												"nodeType": "IfStatement",
												"src": "12444:112:2",
												"trueBody": {
													"id": 716,
													"nodeType": "Block",
													"src": "12479:77:2",
													"statements": [
														{
															"expression": {
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 708,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 338,
																		"src": "12493:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 710,
																	"indexExpression": {
																		"id": 709,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 700,
																		"src": "12511:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12493:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 712,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 700,
																			"src": "12539:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 711,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "12520:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12520:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12493:52:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 715,
															"nodeType": "ExpressionStatement",
															"src": "12493:52:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "12268:97:2",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "12379:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12410:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "12402:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12402:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12401:15:2"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12434:0:2"
									},
									"scope": 1991,
									"src": "12370:192:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "12722:1615:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 727,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "12736:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12736:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 729,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 722,
														"src": "12755:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12736:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 778,
												"nodeType": "IfStatement",
												"src": "12732:1542:2",
												"trueBody": {
													"id": 777,
													"nodeType": "Block",
													"src": "12764:1510:2",
													"statements": [
														{
															"expression": {
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 731,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "12778:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 732,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 338,
																		"src": "12787:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 734,
																	"indexExpression": {
																		"id": 733,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "12805:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12787:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12778:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 736,
															"nodeType": "ExpressionStatement",
															"src": "12778:35:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 737,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 725,
																		"src": "12861:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 738,
																		"name": "_BITMASK_BURNED",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 293,
																		"src": "12870:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12861:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12889:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "12861:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 776,
															"nodeType": "IfStatement",
															"src": "12857:1407:2",
															"trueBody": {
																"id": 775,
																"nodeType": "Block",
																"src": "12892:1372:2",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 742,
																				"name": "packed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "12998:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 743,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13008:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "12998:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 772,
																		"nodeType": "IfStatement",
																		"src": "12994:972:2",
																		"trueBody": {
																			"id": 771,
																			"nodeType": "Block",
																			"src": "13011:955:2",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 747,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 745,
																							"name": "tokenId",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 722,
																							"src": "13037:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">=",
																						"rightExpression": {
																							"id": 746,
																							"name": "_currentIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 328,
																							"src": "13048:13:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "13037:24:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 753,
																					"nodeType": "IfStatement",
																					"src": "13033:77:2",
																					"trueBody": {
																						"expression": {
																							"arguments": [
																								{
																									"expression": {
																										"id": 749,
																										"name": "OwnerQueryForNonexistentToken",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 20,
																										"src": "13071:29:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_error_pure$__$returns$__$",
																											"typeString": "function () pure"
																										}
																									},
																									"id": 750,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "13101:8:2",
																									"memberName": "selector",
																									"nodeType": "MemberAccess",
																									"src": "13071:38:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes4",
																										"typeString": "bytes4"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_bytes4",
																										"typeString": "bytes4"
																									}
																								],
																								"id": 748,
																								"name": "_revert",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1990,
																								"src": "13063:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																									"typeString": "function (bytes4) pure"
																								}
																							},
																							"id": 751,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "13063:47:2",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$__$",
																								"typeString": "tuple()"
																							}
																						},
																						"id": 752,
																						"nodeType": "ExpressionStatement",
																						"src": "13063:47:2"
																					}
																				},
																				{
																					"body": {
																						"id": 769,
																						"nodeType": "Block",
																						"src": "13706:242:2",
																						"statements": [
																							{
																								"id": 761,
																								"nodeType": "UncheckedBlock",
																								"src": "13732:104:2",
																								"statements": [
																									{
																										"expression": {
																											"id": 759,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftHandSide": {
																												"id": 754,
																												"name": "packed",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 725,
																												"src": "13772:6:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "Assignment",
																											"operator": "=",
																											"rightHandSide": {
																												"baseExpression": {
																													"id": 755,
																													"name": "_packedOwnerships",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 338,
																													"src": "13781:17:2",
																													"typeDescriptions": {
																														"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																														"typeString": "mapping(uint256 => uint256)"
																													}
																												},
																												"id": 758,
																												"indexExpression": {
																													"id": 757,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "UnaryOperation",
																													"operator": "--",
																													"prefix": true,
																													"src": "13799:9:2",
																													"subExpression": {
																														"id": 756,
																														"name": "tokenId",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 722,
																														"src": "13801:7:2",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "13781:28:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"src": "13772:37:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 760,
																										"nodeType": "ExpressionStatement",
																										"src": "13772:37:2"
																									}
																								]
																							},
																							{
																								"condition": {
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 764,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 762,
																										"name": "packed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 725,
																										"src": "13865:6:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "==",
																									"rightExpression": {
																										"hexValue": "30",
																										"id": 763,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "13875:1:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									},
																									"src": "13865:11:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 766,
																								"nodeType": "IfStatement",
																								"src": "13861:25:2",
																								"trueBody": {
																									"id": 765,
																									"nodeType": "Continue",
																									"src": "13878:8:2"
																								}
																							},
																							{
																								"expression": {
																									"id": 767,
																									"name": "packed",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 725,
																									"src": "13919:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"functionReturnParameters": 726,
																								"id": 768,
																								"nodeType": "Return",
																								"src": "13912:13:2"
																							}
																						]
																					},
																					"id": 770,
																					"nodeType": "ForStatement",
																					"src": "13697:251:2"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 773,
																			"name": "packed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 725,
																			"src": "14243:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 726,
																		"id": 774,
																		"nodeType": "Return",
																		"src": "14236:13:2"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 780,
																"name": "OwnerQueryForNonexistentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "14291:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14321:8:2",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "14291:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 779,
														"name": "_revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1990,
														"src": "14283:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4) pure"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14283:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "14283:47:2"
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "12568:66:2",
										"text": " Returns the packed ownership data of `tokenId`."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "12648:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "12667:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12667:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12666:17:2"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "12714:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "12706:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12706:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12705:16:2"
									},
									"scope": 1991,
									"src": "12639:1698:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 838,
										"nodeType": "Block",
										"src": "14530:262:2",
										"statements": [
											{
												"expression": {
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 794,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "14540:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14550:4:2",
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 43,
														"src": "14540:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 801,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 788,
																		"src": "14573:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14565:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 799,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "14565:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14565:15:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14557:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 797,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14557:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14557:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14540:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "14540:41:2"
											},
											{
												"expression": {
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 806,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "14591:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14601:14:2",
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 45,
														"src": "14591:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 811,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "14625:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 812,
																	"name": "_BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "14635:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14625:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14618:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 809,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "14618:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14618:41:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "14591:68:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "14591:68:2"
											},
											{
												"expression": {
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 817,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "14669:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14679:6:2",
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 47,
														"src": "14669:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 820,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "14688:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 821,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "14697:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14688:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14716:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14688:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14669:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "14669:48:2"
											},
											{
												"expression": {
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 827,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "14727:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 829,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14737:9:2",
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 49,
														"src": "14727:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 832,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "14756:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 833,
																	"name": "_BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "14766:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14756:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14749:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 830,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "14749:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14749:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "14727:58:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "14727:58:2"
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "14343:83:2",
										"text": " @dev Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "14440:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "14467:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "14459:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14459:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14458:16:2"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "14519:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "14497:31:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$50_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 791,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 790,
														"name": "TokenOwnership",
														"nameLocations": [
															"14497:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 50,
														"src": "14497:14:2"
													},
													"referencedDeclaration": 50,
													"src": "14497:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$50_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14496:33:2"
									},
									"scope": 1991,
									"src": "14431:361:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 850,
										"nodeType": "Block",
										"src": "14966:347:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "14985:322:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15095:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "15108:5:2"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "15115:16:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15104:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15104:28:2"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "15095:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15224:73:2",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "15237:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_BITPOS_START_TIMESTAMP",
																						"nodeType": "YulIdentifier",
																						"src": "15251:23:2"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nodeType": "YulIdentifier",
																							"src": "15276:9:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15276:11:2"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "15247:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15247:41:2"
																			},
																			{
																				"name": "flags",
																				"nodeType": "YulIdentifier",
																				"src": "15290:5:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "15244:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15244:52:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "15234:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15234:63:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15224:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 320,
														"isOffset": false,
														"isSlot": false,
														"src": "15115:16:2",
														"valueSize": 1
													},
													{
														"declaration": 288,
														"isOffset": false,
														"isSlot": false,
														"src": "15251:23:2",
														"valueSize": 1
													},
													{
														"declaration": 844,
														"isOffset": false,
														"isSlot": false,
														"src": "15290:5:2",
														"valueSize": 1
													},
													{
														"declaration": 842,
														"isOffset": false,
														"isSlot": false,
														"src": "15095:5:2",
														"valueSize": 1
													},
													{
														"declaration": 842,
														"isOffset": false,
														"isSlot": false,
														"src": "15108:5:2",
														"valueSize": 1
													},
													{
														"declaration": 842,
														"isOffset": false,
														"isSlot": false,
														"src": "15237:5:2",
														"valueSize": 1
													},
													{
														"declaration": 847,
														"isOffset": false,
														"isSlot": false,
														"src": "15224:6:2",
														"valueSize": 1
													}
												],
												"id": 849,
												"nodeType": "InlineAssembly",
												"src": "14976:331:2"
											}
										]
									},
									"documentation": {
										"id": 840,
										"nodeType": "StructuredDocumentation",
										"src": "14798:67:2",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "14879:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14906:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "14898:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "14921:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "14913:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14913:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14897:30:2"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "14958:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "14950:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14950:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14949:16:2"
									},
									"scope": 1991,
									"src": "14870:443:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "15496:232:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "15580:142:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15656:56:2",
															"value": {
																"arguments": [
																	{
																		"name": "_BITPOS_NEXT_INITIALIZED",
																		"nodeType": "YulIdentifier",
																		"src": "15670:24:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nodeType": "YulIdentifier",
																				"src": "15699:8:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15709:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15696:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15696:15:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "15666:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "15666:46:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "15656:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 296,
														"isOffset": false,
														"isSlot": false,
														"src": "15670:24:2",
														"valueSize": 1
													},
													{
														"declaration": 854,
														"isOffset": false,
														"isSlot": false,
														"src": "15699:8:2",
														"valueSize": 1
													},
													{
														"declaration": 857,
														"isOffset": false,
														"isSlot": false,
														"src": "15656:6:2",
														"valueSize": 1
													}
												],
												"id": 859,
												"nodeType": "InlineAssembly",
												"src": "15571:151:2"
											}
										]
									},
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "15319:86:2",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "15419:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "15448:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "15440:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15440:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15439:18:2"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "15488:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "15480:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15480:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15479:16:2"
									},
									"scope": 1991,
									"src": "15410:318:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										147
									],
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "16226:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 871,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "16245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 872,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "16249:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16258:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 870,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1654,
															1704
														],
														"referencedDeclaration": 1704,
														"src": "16236:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "16236:27:2"
											}
										]
									},
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "15921:222:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n Requirements:\n - The caller must own the token or be an approved operator."
									},
									"functionSelector": "095ea7b3",
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "16157:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 868,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16217:8:2"
									},
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16173:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "16165:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16165:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16185:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "16177:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16177:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16164:29:2"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16226:0:2"
									},
									"scope": 1991,
									"src": "16148:122:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										163
									],
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "16505:138:2",
										"statements": [
											{
												"condition": {
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16519:17:2",
													"subExpression": {
														"arguments": [
															{
																"id": 887,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 880,
																"src": "16528:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 886,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "16520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16520:16:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 895,
												"nodeType": "IfStatement",
												"src": "16515:73:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 891,
																	"name": "ApprovalQueryForNonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "16546:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16579:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "16546:41:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 890,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "16538:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16538:50:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 894,
													"nodeType": "ExpressionStatement",
													"src": "16538:50:2"
												}
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 896,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "16606:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$248_storage_$",
																"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
															}
														},
														"id": 898,
														"indexExpression": {
															"id": 897,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "16622:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16606:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$248_storage",
															"typeString": "struct ERC721A.TokenApprovalRef storage ref"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16631:5:2",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 247,
													"src": "16606:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 885,
												"id": 900,
												"nodeType": "Return",
												"src": "16599:37:2"
											}
										]
									},
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "16276:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "16429:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 882,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "16478:8:2"
									},
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16449:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "16441:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16441:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16440:17:2"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "16496:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16496:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16495:9:2"
									},
									"scope": 1991,
									"src": "16420:223:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										155
									],
									"body": {
										"id": 927,
										"nodeType": "Block",
										"src": "17054:147:2",
										"statements": [
											{
												"expression": {
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 911,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "17064:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 915,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 912,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1972,
																	"src": "17083:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17083:19:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17064:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 916,
														"indexExpression": {
															"id": 914,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "17104:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17064:49:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 917,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "17116:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17064:60:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "17064:60:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 921,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1972,
																"src": "17154:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17154:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 923,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "17175:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "17185:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 920,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "17139:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17139:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "EmitStatement",
												"src": "17134:60:2"
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "16649:316:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "16979:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 909,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17045:8:2"
									},
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17005:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "16997:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16997:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "17020:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "17015:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17015:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16996:33:2"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17054:0:2"
									},
									"scope": 1991,
									"src": "16970:231:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										173
									],
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "17454:59:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 939,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "17471:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 941,
														"indexExpression": {
															"id": 940,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "17490:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "17471:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 943,
													"indexExpression": {
														"id": 942,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "17497:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17471:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 938,
												"id": 944,
												"nodeType": "Return",
												"src": "17464:42:2"
											}
										]
									},
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "17207:139:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "17360:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 935,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17430:8:2"
									},
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17385:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "17377:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17377:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17400:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "17392:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17392:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17376:33:2"
									},
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "17448:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 936,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17448:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17447:6:2"
									},
									"scope": 1991,
									"src": "17351:162:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "17833:206:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 954,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "17862:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17862:15:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 956,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "17881:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17862:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 958,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "17904:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 959,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "17914:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17904:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "17862:65:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 962,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "17964:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 964,
																"indexExpression": {
																	"id": 963,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 949,
																	"src": "17982:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17964:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 965,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "17993:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17964:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18012:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "17964:49:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17862:151:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 953,
												"id": 970,
												"nodeType": "Return",
												"src": "17843:170:2"
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "17519:238:2",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted. See {_mint}."
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "17771:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17787:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "17779:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17778:17:2"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "17827:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 951,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17827:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17826:6:2"
									},
									"scope": 1991,
									"src": "17762:277:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "18301:488:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "18320:463:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18430:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "18443:5:2"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "18450:16:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18439:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "18439:28:2"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nodeType": "YulIdentifier",
																	"src": "18430:5:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18580:45:2",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nodeType": "YulIdentifier",
																		"src": "18597:9:2"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nodeType": "YulIdentifier",
																		"src": "18608:16:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18593:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "18593:32:2"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nodeType": "YulIdentifier",
																	"src": "18580:9:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18707:66:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "18723:9:2"
																			},
																			{
																				"name": "owner",
																				"nodeType": "YulIdentifier",
																				"src": "18734:5:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18720:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18720:20:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nodeType": "YulIdentifier",
																				"src": "18745:9:2"
																			},
																			{
																				"name": "approvedAddress",
																				"nodeType": "YulIdentifier",
																				"src": "18756:15:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18742:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18742:30:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "18717:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "18717:56:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "18707:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 320,
														"isOffset": false,
														"isSlot": false,
														"src": "18450:16:2",
														"valueSize": 1
													},
													{
														"declaration": 320,
														"isOffset": false,
														"isSlot": false,
														"src": "18608:16:2",
														"valueSize": 1
													},
													{
														"declaration": 975,
														"isOffset": false,
														"isSlot": false,
														"src": "18756:15:2",
														"valueSize": 1
													},
													{
														"declaration": 979,
														"isOffset": false,
														"isSlot": false,
														"src": "18580:9:2",
														"valueSize": 1
													},
													{
														"declaration": 979,
														"isOffset": false,
														"isSlot": false,
														"src": "18597:9:2",
														"valueSize": 1
													},
													{
														"declaration": 979,
														"isOffset": false,
														"isSlot": false,
														"src": "18723:9:2",
														"valueSize": 1
													},
													{
														"declaration": 979,
														"isOffset": false,
														"isSlot": false,
														"src": "18745:9:2",
														"valueSize": 1
													},
													{
														"declaration": 977,
														"isOffset": false,
														"isSlot": false,
														"src": "18430:5:2",
														"valueSize": 1
													},
													{
														"declaration": 977,
														"isOffset": false,
														"isSlot": false,
														"src": "18443:5:2",
														"valueSize": 1
													},
													{
														"declaration": 977,
														"isOffset": false,
														"isSlot": false,
														"src": "18734:5:2",
														"valueSize": 1
													},
													{
														"declaration": 982,
														"isOffset": false,
														"isSlot": false,
														"src": "18707:6:2",
														"valueSize": 1
													}
												],
												"id": 984,
												"nodeType": "InlineAssembly",
												"src": "18311:472:2"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "18045:93:2",
										"text": " @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`."
									},
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isSenderApprovedOrOwner",
									"nameLocation": "18152:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "18194:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "18186:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18186:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "18227:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "18219:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18219:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "18250:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "18242:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18242:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18176:89:2"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "18293:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "18288:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 981,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18288:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18287:13:2"
									},
									"scope": 1991,
									"src": "18143:646:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "19054:317:2",
										"statements": [
											{
												"assignments": [
													998
												],
												"declarations": [
													{
														"constant": false,
														"id": 998,
														"mutability": "mutable",
														"name": "tokenApproval",
														"nameLocation": "19089:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 1004,
														"src": "19064:38:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$248_storage_ptr",
															"typeString": "struct ERC721A.TokenApprovalRef"
														},
														"typeName": {
															"id": 997,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 996,
																"name": "TokenApprovalRef",
																"nameLocations": [
																	"19064:16:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 248,
																"src": "19064:16:2"
															},
															"referencedDeclaration": 248,
															"src": "19064:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$248_storage_ptr",
																"typeString": "struct ERC721A.TokenApprovalRef"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1002,
												"initialValue": {
													"baseExpression": {
														"id": 999,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "19105:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$248_storage_$",
															"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
														}
													},
													"id": 1001,
													"indexExpression": {
														"id": 1000,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "19121:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19105:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenApprovalRef_$248_storage",
														"typeString": "struct ERC721A.TokenApprovalRef storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19064:65:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "19242:123:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19256:41:2",
															"value": {
																"name": "tokenApproval.slot",
																"nodeType": "YulIdentifier",
																"src": "19279:18:2"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nodeType": "YulIdentifier",
																	"src": "19256:19:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19310:45:2",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nodeType": "YulIdentifier",
																		"src": "19335:19:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "19329:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "19329:26:2"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nodeType": "YulIdentifier",
																	"src": "19310:15:2"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 994,
														"isOffset": false,
														"isSlot": false,
														"src": "19310:15:2",
														"valueSize": 1
													},
													{
														"declaration": 992,
														"isOffset": false,
														"isSlot": false,
														"src": "19256:19:2",
														"valueSize": 1
													},
													{
														"declaration": 992,
														"isOffset": false,
														"isSlot": false,
														"src": "19335:19:2",
														"valueSize": 1
													},
													{
														"declaration": 998,
														"isOffset": false,
														"isSlot": true,
														"src": "19279:18:2",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1003,
												"nodeType": "InlineAssembly",
												"src": "19233:132:2"
											}
										]
									},
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "18795:97:2",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedSlotAndAddress",
									"nameLocation": "18906:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18941:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "18933:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18933:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18932:17:2"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "19004:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "18996:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18996:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "19033:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "19025:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18995:54:2"
									},
									"scope": 1991,
									"src": "18897:474:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										139
									],
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "20099:3320:2",
										"statements": [
											{
												"assignments": [
													1017
												],
												"declarations": [
													{
														"constant": false,
														"id": 1017,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "20117:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 1177,
														"src": "20109:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1016,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20109:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1021,
												"initialValue": {
													"arguments": [
														{
															"id": 1019,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "20158:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1018,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "20139:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20139:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20109:57:2"
											},
											{
												"expression": {
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1022,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "20268:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1031,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1008,
																							"src": "20307:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1030,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "20299:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint160_$",
																							"typeString": "type(uint160)"
																						},
																						"typeName": {
																							"id": 1029,
																							"name": "uint160",
																							"nodeType": "ElementaryTypeName",
																							"src": "20299:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1032,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "20299:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				],
																				"id": 1028,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "20291:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1027,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "20291:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20291:22:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"id": 1034,
																			"name": "_BITMASK_ADDRESS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 320,
																			"src": "20316:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20291:41:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20283:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1025,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "20283:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20283:50:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20275:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1023,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20275:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20275:59:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20268:66:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "20268:66:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1044,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1017,
																		"src": "20365:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "20357:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1042,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "20357:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20357:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20349:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1040,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20349:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20349:37:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1047,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "20390:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20349:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1054,
												"nodeType": "IfStatement",
												"src": "20345:95:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1050,
																	"name": "TransferFromIncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 26,
																	"src": "20404:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "20431:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "20404:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1049,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "20396:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20396:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1053,
													"nodeType": "ExpressionStatement",
													"src": "20396:44:2"
												}
											},
											{
												"assignments": [
													1056,
													1058
												],
												"declarations": [
													{
														"constant": false,
														"id": 1056,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "20460:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 1177,
														"src": "20452:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1055,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20452:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1058,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "20489:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 1177,
														"src": "20481:23:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1057,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20481:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1062,
												"initialValue": {
													"arguments": [
														{
															"id": 1060,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "20535:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1059,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "20508:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20508:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20451:92:2"
											},
											{
												"condition": {
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "20639:69:2",
													"subExpression": {
														"arguments": [
															{
																"id": 1064,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1058,
																"src": "20665:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1065,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1008,
																"src": "20682:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1066,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1972,
																	"src": "20688:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20688:19:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1063,
															"name": "_isSenderApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "20640:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20640:68:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1082,
												"nodeType": "IfStatement",
												"src": "20635:188:2",
												"trueBody": {
													"condition": {
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "20726:44:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 1071,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "20744:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1072,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1972,
																		"src": "20750:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20750:19:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1070,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "20727:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20727:43:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1081,
													"nodeType": "IfStatement",
													"src": "20722:101:2",
													"trueBody": {
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1077,
																		"name": "TransferCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "20780:33:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20814:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "20780:42:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"id": 1076,
																"name": "_revert",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1990,
																"src": "20772:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																	"typeString": "function (bytes4) pure"
																}
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20772:51:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1080,
														"nodeType": "ExpressionStatement",
														"src": "20772:51:2"
													}
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1084,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "20856:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1085,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "20862:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1086,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "20866:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20875:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1083,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "20834:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20834:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "20834:43:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "20949:181:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20982:138:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "21083:19:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21104:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "21076:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21076:30:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21076:30:2"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "20966:15:2"
															},
															"nodeType": "YulIf",
															"src": "20963:157:2"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1058,
														"isOffset": false,
														"isSlot": false,
														"src": "20966:15:2",
														"valueSize": 1
													},
													{
														"declaration": 1056,
														"isOffset": false,
														"isSlot": false,
														"src": "21083:19:2",
														"valueSize": 1
													}
												],
												"id": 1090,
												"nodeType": "InlineAssembly",
												"src": "20940:190:2"
											},
											{
												"id": 1147,
												"nodeType": "UncheckedBlock",
												"src": "21397:1361:2",
												"statements": [
													{
														"expression": {
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "21490:26:2",
															"subExpression": {
																"baseExpression": {
																	"id": 1091,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 342,
																	"src": "21492:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1093,
																"indexExpression": {
																	"id": 1092,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "21511:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21492:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1095,
														"nodeType": "ExpressionStatement",
														"src": "21490:26:2"
													},
													{
														"expression": {
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "21558:24:2",
															"subExpression": {
																"baseExpression": {
																	"id": 1096,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 342,
																	"src": "21560:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1098,
																"indexExpression": {
																	"id": 1097,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "21579:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21560:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1100,
														"nodeType": "ExpressionStatement",
														"src": "21558:24:2"
													},
													{
														"expression": {
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1101,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "21846:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1103,
																"indexExpression": {
																	"id": 1102,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1012,
																	"src": "21864:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "21846:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1105,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1010,
																		"src": "21911:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1106,
																			"name": "_BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 301,
																			"src": "21931:25:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1108,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1008,
																					"src": "21974:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1109,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1010,
																					"src": "21980:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1110,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1017,
																					"src": "21984:19:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1107,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1962,
																				"src": "21959:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21959:45:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "21931:73:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1104,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "21875:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21875:143:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21846:172:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1115,
														"nodeType": "ExpressionStatement",
														"src": "21846:172:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1116,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "22135:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1117,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "22157:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22135:47:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22186:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22135:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1146,
														"nodeType": "IfStatement",
														"src": "22131:617:2",
														"trueBody": {
															"id": 1145,
															"nodeType": "Block",
															"src": "22189:559:2",
															"statements": [
																{
																	"assignments": [
																		1122
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1122,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "22215:11:2",
																			"nodeType": "VariableDeclaration",
																			"scope": 1145,
																			"src": "22207:19:2",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1121,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "22207:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1126,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1123,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1012,
																			"src": "22229:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22239:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22229:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "22207:33:2"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1127,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 338,
																				"src": "22360:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1129,
																			"indexExpression": {
																				"id": 1128,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1122,
																				"src": "22378:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "22360:30:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22394:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "22360:35:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1144,
																	"nodeType": "IfStatement",
																	"src": "22356:378:2",
																	"trueBody": {
																		"id": 1143,
																		"nodeType": "Block",
																		"src": "22397:337:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1134,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1132,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1122,
																						"src": "22481:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1133,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 328,
																						"src": "22496:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "22481:28:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1142,
																				"nodeType": "IfStatement",
																				"src": "22477:239:2",
																				"trueBody": {
																					"id": 1141,
																					"nodeType": "Block",
																					"src": "22511:205:2",
																					"statements": [
																						{
																							"expression": {
																								"id": 1139,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1135,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 338,
																										"src": "22641:17:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1137,
																									"indexExpression": {
																										"id": 1136,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1122,
																										"src": "22659:11:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "22641:30:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1138,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1017,
																									"src": "22674:19:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "22641:52:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1140,
																							"nodeType": "ExpressionStatement",
																							"src": "22641:52:2"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"assignments": [
													1149
												],
												"declarations": [
													{
														"constant": false,
														"id": 1149,
														"mutability": "mutable",
														"name": "toMasked",
														"nameLocation": "22865:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1177,
														"src": "22857:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1148,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22857:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1159,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1154,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1010,
																		"src": "22892:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22884:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 1152,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "22884:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22884:11:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22876:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1150,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "22876:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22876:20:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 1157,
														"name": "_BITMASK_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "22899:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22876:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22857:58:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "22934:358:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23012:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23068:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nodeType": "YulIdentifier",
																		"src": "23122:25:2"
																	},
																	{
																		"name": "from",
																		"nodeType": "YulIdentifier",
																		"src": "23179:4:2"
																	},
																	{
																		"name": "toMasked",
																		"nodeType": "YulIdentifier",
																		"src": "23212:8:2"
																	},
																	{
																		"name": "tokenId",
																		"nodeType": "YulIdentifier",
																		"src": "23247:7:2"
																	}
																],
																"functionName": {
																	"name": "log4",
																	"nodeType": "YulIdentifier",
																	"src": "22990:4:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "22990:292:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22990:292:2"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 326,
														"isOffset": false,
														"isSlot": false,
														"src": "23122:25:2",
														"valueSize": 1
													},
													{
														"declaration": 1008,
														"isOffset": false,
														"isSlot": false,
														"src": "23179:4:2",
														"valueSize": 1
													},
													{
														"declaration": 1149,
														"isOffset": false,
														"isSlot": false,
														"src": "23212:8:2",
														"valueSize": 1
													},
													{
														"declaration": 1012,
														"isOffset": false,
														"isSlot": false,
														"src": "23247:7:2",
														"valueSize": 1
													}
												],
												"id": 1160,
												"nodeType": "InlineAssembly",
												"src": "22925:367:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1161,
														"name": "toMasked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "23305:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23317:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "23305:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1169,
												"nodeType": "IfStatement",
												"src": "23301:58:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1165,
																	"name": "TransferToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "23328:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "23350:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "23328:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1164,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "23320:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23320:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1168,
													"nodeType": "ExpressionStatement",
													"src": "23320:39:2"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1171,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "23391:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1172,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "23397:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1173,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "23401:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23410:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1170,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "23370:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23370:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1176,
												"nodeType": "ExpressionStatement",
												"src": "23370:42:2"
											}
										]
									},
									"documentation": {
										"id": 1006,
										"nodeType": "StructuredDocumentation",
										"src": "19564:403:2",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "19981:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1014,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20090:8:2"
									},
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20011:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "20003:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20003:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20033:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "20025:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20053:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "20045:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20045:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19993:73:2"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20099:0:2"
									},
									"scope": 1991,
									"src": "19972:3447:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										129
									],
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "23641:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1190,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "23668:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1191,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "23674:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1192,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "23678:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23687:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1189,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1197,
															1237
														],
														"referencedDeclaration": 1237,
														"src": "23651:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23651:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "23651:39:2"
											}
										]
									},
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "23425:80:2",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 1197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "23519:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1187,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23632:8:2"
									},
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23553:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "23545:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23545:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23575:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "23567:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23595:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "23587:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23587:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23535:73:2"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23641:0:2"
									},
									"scope": 1991,
									"src": "23510:187:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										119
									],
									"body": {
										"id": 1236,
										"nodeType": "Block",
										"src": "24437:246:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1211,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "24460:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1212,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "24466:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1213,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "24470:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1210,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "24447:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24447:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "24447:31:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1216,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1202,
																"src": "24492:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "24495:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "24492:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "24500:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "24492:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24510:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "24492:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1235,
												"nodeType": "IfStatement",
												"src": "24488:189:2",
												"trueBody": {
													"condition": {
														"id": 1227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "24529:57:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 1222,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "24561:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1223,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1202,
																	"src": "24567:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1224,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1204,
																	"src": "24571:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1225,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1206,
																	"src": "24580:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1221,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1319,
																"src": "24530:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24530:56:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1234,
													"nodeType": "IfStatement",
													"src": "24525:152:2",
													"trueBody": {
														"id": 1233,
														"nodeType": "Block",
														"src": "24588:89:2",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1229,
																				"name": "TransferToNonERC721ReceiverImplementer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 29,
																				"src": "24614:38:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "24653:8:2",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "24614:47:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1228,
																		"name": "_revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1990,
																		"src": "24606:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																			"typeString": "function (bytes4) pure"
																		}
																	},
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24606:56:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1232,
																"nodeType": "ExpressionStatement",
																"src": "24606:56:2"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "23703:570:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "24287:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1208,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24428:8:2"
									},
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "24321:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "24313:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24313:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "24343:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "24335:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24335:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "24363:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "24355:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "24393:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "24380:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1205,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24380:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24303:101:2"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24437:0:2"
									},
									"scope": 1991,
									"src": "24278:405:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "25479:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1238,
										"nodeType": "StructuredDocumentation",
										"src": "24689:633:2",
										"text": " @dev Hook that is called before a set of serially-ordered token IDs\n are about to be transferred. This includes minting.\n And also called before burning one token.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "25336:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25375:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "25367:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25367:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25397:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "25389:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25389:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "25417:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "25409:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25409:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "25447:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "25439:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25439:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25357:104:2"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25479:0:2"
									},
									"scope": 1991,
									"src": "25327:154:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1262,
										"nodeType": "Block",
										"src": "26279:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1251,
										"nodeType": "StructuredDocumentation",
										"src": "25487:636:2",
										"text": " @dev Hook that is called after a set of serially-ordered token IDs\n have been transferred. This includes minting.\n And also called after one token has been burned.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "26137:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26175:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "26167:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26167:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26197:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "26189:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26189:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "26217:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "26209:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26209:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "26247:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "26239:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26239:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26157:104:2"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26279:0:2"
									},
									"scope": 1991,
									"src": "26128:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "26873:509:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1298,
															"nodeType": "Block",
															"src": "27022:96:2",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 1296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1290,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1288,
																			"src": "27043:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1292,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1268,
																							"src": "27078:2:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1291,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 242,
																						"src": "27053:24:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$242_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 1293,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27053:28:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$242",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 1294,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "27082:16:2",
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 241,
																				"src": "27053:45:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 1295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "27099:8:2",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "27053:54:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "27043:64:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 1276,
																	"id": 1297,
																	"nodeType": "Return",
																	"src": "27036:71:2"
																}
															]
														},
														"errorName": "",
														"id": 1299,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1289,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1288,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "27005:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1299,
																	"src": "26998:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1287,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "26998:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "26984:37:2"
														},
														"src": "26976:142:2"
													},
													{
														"block": {
															"id": 1315,
															"nodeType": "Block",
															"src": "27147:229:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1303,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1301,
																				"src": "27165:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "27172:6:2",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "27165:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1305,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27182:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "27165:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1313,
																	"nodeType": "IfStatement",
																	"src": "27161:113:2",
																	"trueBody": {
																		"id": 1312,
																		"nodeType": "Block",
																		"src": "27185:89:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1308,
																								"name": "TransferToNonERC721ReceiverImplementer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 29,
																								"src": "27211:38:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_error_pure$__$returns$__$",
																									"typeString": "function () pure"
																								}
																							},
																							"id": 1309,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "27250:8:2",
																							"memberName": "selector",
																							"nodeType": "MemberAccess",
																							"src": "27211:47:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						],
																						"id": 1307,
																						"name": "_revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1990,
																						"src": "27203:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																							"typeString": "function (bytes4) pure"
																						}
																					},
																					"id": 1310,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "27203:56:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1311,
																				"nodeType": "ExpressionStatement",
																				"src": "27203:56:2"
																			}
																		]
																	}
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "27296:70:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "27325:2:2",
																									"type": "",
																									"value": "32"
																								},
																								{
																									"name": "reason",
																									"nodeType": "YulIdentifier",
																									"src": "27329:6:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "27321:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "27321:15:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "reason",
																									"nodeType": "YulIdentifier",
																									"src": "27344:6:2"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "27338:5:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "27338:13:2"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "27314:6:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "27314:38:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "27314:38:2"
																			}
																		]
																	},
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 1301,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "27329:6:2",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1301,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "27344:6:2",
																			"valueSize": 1
																		}
																	],
																	"id": 1314,
																	"nodeType": "InlineAssembly",
																	"src": "27287:79:2"
																}
															]
														},
														"errorName": "",
														"id": 1316,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1302,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1301,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "27139:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1316,
																	"src": "27126:19:2",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1300,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "27126:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "27125:21:2"
														},
														"src": "27119:257:2"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1281,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1972,
																"src": "26933:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26933:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1283,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "26954:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1284,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "26960:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1285,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "26969:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1278,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1268,
																	"src": "26912:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1277,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "26887:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$242_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26887:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$242",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26916:16:2",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 241,
														"src": "26887:45:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26887:88:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1317,
												"nodeType": "TryStatement",
												"src": "26883:493:2"
											}
										]
									},
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "26287:417:2",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n `from` - Previous owner of the given token ID.\n `to` - Target address that will receive the token.\n `tokenId` - Token ID to be transferred.\n `_data` - Optional data to send along with the call.\n Returns whether the call correctly returned the expected magic value."
									},
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "26718:30:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26766:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "26758:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26758:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26788:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "26780:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26780:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26808:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "26800:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26800:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "26838:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "26825:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1271,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26825:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26748:101:2"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "26867:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26867:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26866:6:2"
									},
									"scope": 1991,
									"src": "26709:673:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1437,
										"nodeType": "Block",
										"src": "27890:2189:2",
										"statements": [
											{
												"assignments": [
													1328
												],
												"declarations": [
													{
														"constant": false,
														"id": 1328,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "27908:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 1437,
														"src": "27900:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1327,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27900:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1330,
												"initialValue": {
													"id": 1329,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 328,
													"src": "27923:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27900:36:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1331,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "27950:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27962:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "27950:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1339,
												"nodeType": "IfStatement",
												"src": "27946:53:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1335,
																	"name": "MintZeroQuantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 17,
																	"src": "27973:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "27990:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "27973:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1334,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "27965:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27965:34:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1338,
													"nodeType": "ExpressionStatement",
													"src": "27965:34:2"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28040:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "28032:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1341,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "28032:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28032:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1345,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "28044:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1346,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "28048:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1347,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "28062:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1340,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "28010:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28010:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "28010:61:2"
											},
											{
												"id": 1426,
												"nodeType": "UncheckedBlock",
												"src": "28254:1749:2",
												"statements": [
													{
														"expression": {
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1350,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "28499:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1352,
																"indexExpression": {
																	"id": 1351,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "28517:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "28499:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1354,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1322,
																		"src": "28569:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1356,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1324,
																					"src": "28610:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1355,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 861,
																				"src": "28589:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28589:30:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1361,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "28645:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1360,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "28637:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1359,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "28637:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1362,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "28637:10:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1363,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1322,
																					"src": "28649:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1364,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28653:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1358,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1962,
																				"src": "28622:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28622:33:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "28589:66:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1353,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "28533:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28533:136:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28499:170:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1369,
														"nodeType": "ExpressionStatement",
														"src": "28499:170:2"
													},
													{
														"expression": {
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1370,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 342,
																	"src": "28880:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1372,
																"indexExpression": {
																	"id": 1371,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "28899:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "28880:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1373,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1324,
																	"src": "28906:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1376,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1374,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "28919:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1375,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 271,
																							"src": "28924:21:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "28919:26:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1377,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "28918:28:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28949:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "28918:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1380,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "28917:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "28906:45:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28880:71:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1383,
														"nodeType": "ExpressionStatement",
														"src": "28880:71:2"
													},
													{
														"assignments": [
															1385
														],
														"declarations": [
															{
																"constant": false,
																"id": 1385,
																"mutability": "mutable",
																"name": "toMasked",
																"nameLocation": "29067:8:2",
																"nodeType": "VariableDeclaration",
																"scope": 1426,
																"src": "29059:16:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1384,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29059:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1395,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1390,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1322,
																				"src": "29094:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "29086:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint160_$",
																				"typeString": "type(uint160)"
																			},
																			"typeName": {
																				"id": 1388,
																				"name": "uint160",
																				"nodeType": "ElementaryTypeName",
																				"src": "29086:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "29086:11:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"id": 1387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "29078:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1386,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "29078:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29078:20:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1393,
																"name": "_BITMASK_ADDRESS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 320,
																"src": "29101:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29078:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29059:58:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1396,
																"name": "toMasked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1385,
																"src": "29136:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29148:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "29136:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1404,
														"nodeType": "IfStatement",
														"src": "29132:54:2",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1400,
																			"name": "MintToZeroAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 14,
																			"src": "29159:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "29177:8:2",
																		"memberName": "selector",
																		"nodeType": "MemberAccess",
																		"src": "29159:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 1399,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1990,
																	"src": "29151:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																		"typeString": "function (bytes4) pure"
																	}
																},
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29151:35:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1403,
															"nodeType": "ExpressionStatement",
															"src": "29151:35:2"
														}
													},
													{
														"assignments": [
															1406
														],
														"declarations": [
															{
																"constant": false,
																"id": 1406,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "29209:3:2",
																"nodeType": "VariableDeclaration",
																"scope": 1426,
																"src": "29201:11:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1405,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29201:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1410,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1407,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1328,
																"src": "29215:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1408,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1324,
																"src": "29230:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29215:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29201:37:2"
													},
													{
														"assignments": [
															1412
														],
														"declarations": [
															{
																"constant": false,
																"id": 1412,
																"mutability": "mutable",
																"name": "tokenId",
																"nameLocation": "29260:7:2",
																"nodeType": "VariableDeclaration",
																"scope": 1426,
																"src": "29252:15:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1411,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29252:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1414,
														"initialValue": {
															"id": 1413,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "29270:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "29252:30:2"
													},
													{
														"body": {
															"id": 1416,
															"nodeType": "Block",
															"src": "29300:633:2",
															"statements": [
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "29327:441:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29429:1:2",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29493:1:2",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_TRANSFER_EVENT_SIGNATURE",
																							"nodeType": "YulIdentifier",
																							"src": "29555:25:2"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "29620:1:2",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "toMasked",
																							"nodeType": "YulIdentifier",
																							"src": "29664:8:2"
																						},
																						{
																							"name": "tokenId",
																							"nodeType": "YulIdentifier",
																							"src": "29707:7:2"
																						}
																					],
																					"functionName": {
																						"name": "log4",
																						"nodeType": "YulIdentifier",
																						"src": "29399:4:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "29399:351:2"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "29399:351:2"
																			}
																		]
																	},
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 326,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "29555:25:2",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1385,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "29664:8:2",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1412,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "29707:7:2",
																			"valueSize": 1
																		}
																	],
																	"id": 1415,
																	"nodeType": "InlineAssembly",
																	"src": "29318:450:2"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": true,
																"src": "29941:9:2",
																"subExpression": {
																	"id": 1417,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1412,
																	"src": "29943:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1419,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "29954:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29941:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1421,
														"nodeType": "DoWhileStatement",
														"src": "29297:662:2"
													},
													{
														"expression": {
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1422,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "29973:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1423,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "29989:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29973:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1425,
														"nodeType": "ExpressionStatement",
														"src": "29973:19:2"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30041:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30033:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1428,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30033:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30033:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1432,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "30045:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1433,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "30049:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1434,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "30063:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1427,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "30012:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30012:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1436,
												"nodeType": "ExpressionStatement",
												"src": "30012:60:2"
											}
										]
									},
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "27573:250:2",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 1438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "27837:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27851:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "27843:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27843:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "27863:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "27855:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27855:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27842:30:2"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27890:0:2"
									},
									"scope": 1991,
									"src": "27828:2251:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1555,
										"nodeType": "Block",
										"src": "30988:1401:2",
										"statements": [
											{
												"assignments": [
													1447
												],
												"declarations": [
													{
														"constant": false,
														"id": 1447,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "31006:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 1555,
														"src": "30998:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1446,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30998:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1449,
												"initialValue": {
													"id": 1448,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 328,
													"src": "31021:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30998:36:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1450,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "31048:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31062:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31054:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1451,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "31054:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31054:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31048:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1461,
												"nodeType": "IfStatement",
												"src": "31044:57:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1457,
																	"name": "MintToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "31074:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31092:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "31074:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1456,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "31066:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31066:35:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1460,
													"nodeType": "ExpressionStatement",
													"src": "31066:35:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1462,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "31115:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1463,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31127:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31115:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1470,
												"nodeType": "IfStatement",
												"src": "31111:53:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1466,
																	"name": "MintZeroQuantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 17,
																	"src": "31138:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31155:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "31138:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1465,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "31130:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31130:34:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1469,
													"nodeType": "ExpressionStatement",
													"src": "31130:34:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1471,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "31178:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1472,
														"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "31189:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31178:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1479,
												"nodeType": "IfStatement",
												"src": "31174:98:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1475,
																	"name": "MintERC2309QuantityExceedsLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "31231:31:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31263:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "31231:40:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1474,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "31223:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31223:49:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1478,
													"nodeType": "ExpressionStatement",
													"src": "31223:49:2"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31313:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31305:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1481,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31305:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31305:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1485,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "31317:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1486,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1447,
															"src": "31321:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1487,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "31335:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1480,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "31283:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31283:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1489,
												"nodeType": "ExpressionStatement",
												"src": "31283:61:2"
											},
											{
												"id": 1544,
												"nodeType": "UncheckedBlock",
												"src": "31453:860:2",
												"statements": [
													{
														"expression": {
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1490,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 342,
																	"src": "31673:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1492,
																"indexExpression": {
																	"id": 1491,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1441,
																	"src": "31692:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "31673:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1493,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1443,
																	"src": "31699:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1496,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1494,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "31712:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1495,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 271,
																							"src": "31717:21:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "31712:26:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1497,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "31711:28:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1498,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31742:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "31711:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1500,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "31710:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31699:45:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31673:71:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1503,
														"nodeType": "ExpressionStatement",
														"src": "31673:71:2"
													},
													{
														"expression": {
															"id": 1522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1504,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "31980:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1506,
																"indexExpression": {
																	"id": 1505,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1447,
																	"src": "31998:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "31980:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1508,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1441,
																		"src": "32050:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1510,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1443,
																					"src": "32091:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1509,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 861,
																				"src": "32070:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32070:30:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1515,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "32126:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1514,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "32118:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1513,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "32118:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1516,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "32118:10:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1517,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1441,
																					"src": "32130:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1518,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "32134:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1512,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1962,
																				"src": "32103:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32103:33:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32070:66:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1507,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "32014:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32014:136:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31980:170:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1523,
														"nodeType": "ExpressionStatement",
														"src": "31980:170:2"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1525,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1447,
																	"src": "32190:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1526,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1447,
																			"src": "32204:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1527,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1443,
																			"src": "32219:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32204:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32230:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "32204:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1533,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "32241:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "32233:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1531,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "32233:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32233:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1535,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1441,
																	"src": "32245:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1524,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "32170:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32170:78:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1537,
														"nodeType": "EmitStatement",
														"src": "32165:83:2"
													},
													{
														"expression": {
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1538,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "32263:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1539,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1447,
																	"src": "32279:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1540,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1443,
																	"src": "32294:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32279:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "32263:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1543,
														"nodeType": "ExpressionStatement",
														"src": "32263:39:2"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32351:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32343:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1546,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32343:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32343:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1550,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "32355:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1551,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1447,
															"src": "32359:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1552,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "32373:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1545,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "32322:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32322:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1554,
												"nodeType": "ExpressionStatement",
												"src": "32322:60:2"
											}
										]
									},
									"documentation": {
										"id": 1439,
										"nodeType": "StructuredDocumentation",
										"src": "30085:829:2",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 1556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "30928:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30949:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "30941:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30941:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "30961:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "30953:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30953:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30940:30:2"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30988:0:2"
									},
									"scope": 1991,
									"src": "30919:1470:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1623,
										"nodeType": "Block",
										"src": "32904:572:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1567,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1559,
															"src": "32920:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1568,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "32924:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1566,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "32914:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32914:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1570,
												"nodeType": "ExpressionStatement",
												"src": "32914:19:2"
											},
											{
												"id": 1622,
												"nodeType": "UncheckedBlock",
												"src": "32944:526:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1571,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1559,
																		"src": "32972:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "32975:4:2",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "32972:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "32980:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "32972:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32990:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "32972:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1621,
														"nodeType": "IfStatement",
														"src": "32968:492:2",
														"trueBody": {
															"id": 1620,
															"nodeType": "Block",
															"src": "32993:467:2",
															"statements": [
																{
																	"assignments": [
																		1577
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1577,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "33019:3:2",
																			"nodeType": "VariableDeclaration",
																			"scope": 1620,
																			"src": "33011:11:2",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1576,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "33011:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1579,
																	"initialValue": {
																		"id": 1578,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 328,
																		"src": "33025:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "33011:27:2"
																},
																{
																	"assignments": [
																		1581
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1581,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "33064:5:2",
																			"nodeType": "VariableDeclaration",
																			"scope": 1620,
																			"src": "33056:13:2",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1580,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "33056:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1585,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1582,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1577,
																			"src": "33072:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1583,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1561,
																			"src": "33078:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33072:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "33056:30:2"
																},
																{
																	"body": {
																		"id": 1604,
																		"nodeType": "Block",
																		"src": "33107:214:2",
																		"statements": [
																			{
																				"condition": {
																					"id": 1596,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "33133:63:2",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1589,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "33173:1:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1588,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "33165:7:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1587,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "33165:7:2",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1590,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33165:10:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1591,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1559,
																								"src": "33177:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1593,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "33181:7:2",
																								"subExpression": {
																									"id": 1592,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1581,
																									"src": "33181:5:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1594,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1563,
																								"src": "33190:5:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1586,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1319,
																							"src": "33134:30:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 1595,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "33134:62:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1603,
																				"nodeType": "IfStatement",
																				"src": "33129:174:2",
																				"trueBody": {
																					"id": 1602,
																					"nodeType": "Block",
																					"src": "33198:105:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"id": 1598,
																											"name": "TransferToNonERC721ReceiverImplementer",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 29,
																											"src": "33232:38:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_error_pure$__$returns$__$",
																												"typeString": "function () pure"
																											}
																										},
																										"id": 1599,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "33271:8:2",
																										"memberName": "selector",
																										"nodeType": "MemberAccess",
																										"src": "33232:47:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									],
																									"id": 1597,
																									"name": "_revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1990,
																									"src": "33224:7:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																										"typeString": "function (bytes4) pure"
																									}
																								},
																								"id": 1600,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "33224:56:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1601,
																							"nodeType": "ExpressionStatement",
																							"src": "33224:56:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1605,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1581,
																			"src": "33329:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1606,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1577,
																			"src": "33337:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33329:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1608,
																	"nodeType": "DoWhileStatement",
																	"src": "33104:238:2"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1609,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 328,
																			"src": "33405:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1610,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1577,
																			"src": "33422:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33405:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1619,
																	"nodeType": "IfStatement",
																	"src": "33401:44:2",
																	"trueBody": {
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1615,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "33442:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1614,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "33435:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes4_$",
																							"typeString": "type(bytes4)"
																						},
																						"typeName": {
																							"id": 1613,
																							"name": "bytes4",
																							"nodeType": "ElementaryTypeName",
																							"src": "33435:6:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1616,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "33435:9:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				],
																				"id": 1612,
																				"name": "_revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1990,
																				"src": "33427:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																					"typeString": "function (bytes4) pure"
																				}
																			},
																			"id": 1617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "33427:18:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1618,
																		"nodeType": "ExpressionStatement",
																		"src": "33427:18:2"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1557,
										"nodeType": "StructuredDocumentation",
										"src": "32395:388:2",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 1624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "32797:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32824:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "32816:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32816:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "32844:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "32836:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32836:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "32875:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "32862:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1562,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32862:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32806:80:2"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32904:0:2"
									},
									"scope": 1991,
									"src": "32788:688:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1638,
										"nodeType": "Block",
										"src": "33621:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1627,
															"src": "33641:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1634,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1629,
															"src": "33645:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33655:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1632,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1624,
															1639
														],
														"referencedDeclaration": 1624,
														"src": "33631:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33631:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1637,
												"nodeType": "ExpressionStatement",
												"src": "33631:27:2"
											}
										]
									},
									"documentation": {
										"id": 1625,
										"nodeType": "StructuredDocumentation",
										"src": "33482:68:2",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 1639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "33564:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33582:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "33574:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33574:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "33594:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "33586:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33586:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33573:30:2"
									},
									"returnParameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33621:0:2"
									},
									"scope": 1991,
									"src": "33555:110:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1653,
										"nodeType": "Block",
										"src": "33997:45:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1648,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "34016:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1649,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "34020:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34029:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1647,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1654,
															1704
														],
														"referencedDeclaration": 1704,
														"src": "34007:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34007:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "34007:28:2"
											}
										]
									},
									"documentation": {
										"id": 1640,
										"nodeType": "StructuredDocumentation",
										"src": "33859:69:2",
										"text": " @dev Equivalent to `_approve(to, tokenId, false)`."
									},
									"id": 1654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "33942:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33959:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "33951:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33951:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "33971:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "33963:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33963:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33950:29:2"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33997:0:2"
									},
									"scope": 1991,
									"src": "33933:109:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "34559:346:2",
										"statements": [
											{
												"assignments": [
													1665
												],
												"declarations": [
													{
														"constant": false,
														"id": 1665,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "34577:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1703,
														"src": "34569:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1664,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "34569:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1669,
												"initialValue": {
													"arguments": [
														{
															"id": 1667,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "34593:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1666,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "34585:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34585:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34569:32:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1670,
														"name": "approvalCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1661,
														"src": "34616:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1671,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1972,
																"src": "34633:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34633:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1673,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "34656:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "34633:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "34616:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1689,
												"nodeType": "IfStatement",
												"src": "34612:198:2",
												"trueBody": {
													"condition": {
														"id": 1681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "34679:45:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 1677,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1665,
																	"src": "34697:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1678,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1972,
																		"src": "34704:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34704:19:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1676,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "34680:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34680:44:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1688,
													"nodeType": "IfStatement",
													"src": "34675:135:2",
													"trueBody": {
														"id": 1687,
														"nodeType": "Block",
														"src": "34726:84:2",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1683,
																				"name": "ApprovalCallerNotOwnerNorApproved",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 5,
																				"src": "34752:33:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "34786:8:2",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "34752:42:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1682,
																		"name": "_revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1990,
																		"src": "34744:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																			"typeString": "function (bytes4) pure"
																		}
																	},
																	"id": 1685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34744:51:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1686,
																"nodeType": "ExpressionStatement",
																"src": "34744:51:2"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1690,
																"name": "_tokenApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "34820:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$248_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
																}
															},
															"id": 1692,
															"indexExpression": {
																"id": 1691,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1659,
																"src": "34836:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "34820:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$248_storage",
																"typeString": "struct ERC721A.TokenApprovalRef storage ref"
															}
														},
														"id": 1693,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "34845:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 247,
														"src": "34820:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1694,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1657,
														"src": "34853:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "34820:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1696,
												"nodeType": "ExpressionStatement",
												"src": "34820:35:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1698,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1665,
															"src": "34879:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1699,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "34886:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1700,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "34890:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1697,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "34870:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34870:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1702,
												"nodeType": "EmitStatement",
												"src": "34865:33:2"
											}
										]
									},
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "34048:392:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "34454:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34480:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "34472:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34472:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34500:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "34492:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34492:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "34522:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "34517:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1660,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34517:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34462:79:2"
									},
									"returnParameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34559:0:2"
									},
									"scope": 1991,
									"src": "34445:460:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1715,
										"nodeType": "Block",
										"src": "35212:38:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1711,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "35228:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35237:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1710,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1716,
															1870
														],
														"referencedDeclaration": 1870,
														"src": "35222:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35222:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1714,
												"nodeType": "ExpressionStatement",
												"src": "35222:21:2"
											}
										]
									},
									"documentation": {
										"id": 1705,
										"nodeType": "StructuredDocumentation",
										"src": "35096:62:2",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 1716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "35172:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35186:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "35178:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35178:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35177:17:2"
									},
									"returnParameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35212:0:2"
									},
									"scope": 1991,
									"src": "35163:87:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1869,
										"nodeType": "Block",
										"src": "35536:2955:2",
										"statements": [
											{
												"assignments": [
													1725
												],
												"declarations": [
													{
														"constant": false,
														"id": 1725,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "35554:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 1869,
														"src": "35546:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1724,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35546:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1729,
												"initialValue": {
													"arguments": [
														{
															"id": 1727,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "35595:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1726,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "35576:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35576:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35546:57:2"
											},
											{
												"assignments": [
													1731
												],
												"declarations": [
													{
														"constant": false,
														"id": 1731,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "35622:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 1869,
														"src": "35614:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1730,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35614:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1739,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1736,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1725,
																	"src": "35645:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1735,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35637:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1734,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "35637:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35637:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1733,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "35629:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1732,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35629:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35629:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35614:52:2"
											},
											{
												"assignments": [
													1741,
													1743
												],
												"declarations": [
													{
														"constant": false,
														"id": 1741,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "35686:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 1869,
														"src": "35678:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1740,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35678:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1743,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "35715:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 1869,
														"src": "35707:23:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1742,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35707:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1747,
												"initialValue": {
													"arguments": [
														{
															"id": 1745,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "35761:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1744,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "35734:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35734:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35677:92:2"
											},
											{
												"condition": {
													"id": 1748,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1721,
													"src": "35784:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1770,
												"nodeType": "IfStatement",
												"src": "35780:321:2",
												"trueBody": {
													"id": 1769,
													"nodeType": "Block",
													"src": "35799:302:2",
													"statements": [
														{
															"condition": {
																"id": 1755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "35902:69:2",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1750,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1743,
																			"src": "35928:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1751,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1731,
																			"src": "35945:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1752,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1972,
																				"src": "35951:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35951:19:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1749,
																		"name": "_isSenderApprovedOrOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 986,
																		"src": "35903:24:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 1754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "35903:68:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1768,
															"nodeType": "IfStatement",
															"src": "35898:192:2",
															"trueBody": {
																"condition": {
																	"id": 1761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "35993:44:2",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1757,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1731,
																				"src": "36011:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1758,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1972,
																					"src": "36017:17:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1759,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "36017:19:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1756,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 946,
																			"src": "35994:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35994:43:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1767,
																"nodeType": "IfStatement",
																"src": "35989:101:2",
																"trueBody": {
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1763,
																					"name": "TransferCallerNotOwnerNorApproved",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 23,
																					"src": "36047:33:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_error_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 1764,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "36081:8:2",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "36047:42:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"id": 1762,
																			"name": "_revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1990,
																			"src": "36039:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																				"typeString": "function (bytes4) pure"
																			}
																		},
																		"id": 1765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "36039:51:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1766,
																	"nodeType": "ExpressionStatement",
																	"src": "36039:51:2"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1772,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1731,
															"src": "36133:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36147:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1774,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36139:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1773,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36139:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36139:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1777,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "36151:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36160:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1771,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "36111:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36111:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1780,
												"nodeType": "ExpressionStatement",
												"src": "36111:51:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "36234:181:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "36267:138:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nodeType": "YulIdentifier",
																					"src": "36368:19:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "36389:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nodeType": "YulIdentifier",
																				"src": "36361:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "36361:30:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "36361:30:2"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nodeType": "YulIdentifier",
																"src": "36251:15:2"
															},
															"nodeType": "YulIf",
															"src": "36248:157:2"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1743,
														"isOffset": false,
														"isSlot": false,
														"src": "36251:15:2",
														"valueSize": 1
													},
													{
														"declaration": 1741,
														"isOffset": false,
														"isSlot": false,
														"src": "36368:19:2",
														"valueSize": 1
													}
												],
												"id": 1781,
												"nodeType": "InlineAssembly",
												"src": "36225:190:2"
											},
											{
												"id": 1845,
												"nodeType": "UncheckedBlock",
												"src": "36682:1545:2",
												"statements": [
													{
														"expression": {
															"id": 1791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1782,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 342,
																	"src": "36994:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1784,
																"indexExpression": {
																	"id": 1783,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1731,
																	"src": "37013:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "36994:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1785,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "37023:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1786,
																				"name": "_BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 274,
																				"src": "37028:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "37023:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1788,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "37022:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "37053:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "37022:32:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "36994:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1792,
														"nodeType": "ExpressionStatement",
														"src": "36994:60:2"
													},
													{
														"expression": {
															"id": 1812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1793,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "37285:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1795,
																"indexExpression": {
																	"id": 1794,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1719,
																	"src": "37303:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "37285:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1797,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1731,
																		"src": "37350:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1800,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1798,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 293,
																						"src": "37373:15:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 1799,
																						"name": "_BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 301,
																						"src": "37391:25:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "37373:43:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1801,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "37372:45:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1803,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1731,
																					"src": "37435:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1806,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "37449:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1805,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "37441:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1804,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "37441:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1807,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "37441:10:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1808,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1725,
																					"src": "37453:19:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1802,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1962,
																				"src": "37420:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "37420:53:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "37372:101:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1796,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "37314:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37314:173:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "37285:202:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1813,
														"nodeType": "ExpressionStatement",
														"src": "37285:202:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1814,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1725,
																	"src": "37604:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1815,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "37626:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "37604:47:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "37655:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "37604:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1844,
														"nodeType": "IfStatement",
														"src": "37600:617:2",
														"trueBody": {
															"id": 1843,
															"nodeType": "Block",
															"src": "37658:559:2",
															"statements": [
																{
																	"assignments": [
																		1820
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1820,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "37684:11:2",
																			"nodeType": "VariableDeclaration",
																			"scope": 1843,
																			"src": "37676:19:2",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1819,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "37676:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1824,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1821,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1719,
																			"src": "37698:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37708:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "37698:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "37676:33:2"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1825,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 338,
																				"src": "37829:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1827,
																			"indexExpression": {
																				"id": 1826,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1820,
																				"src": "37847:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "37829:30:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "37863:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "37829:35:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1842,
																	"nodeType": "IfStatement",
																	"src": "37825:378:2",
																	"trueBody": {
																		"id": 1841,
																		"nodeType": "Block",
																		"src": "37866:337:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1832,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1830,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1820,
																						"src": "37950:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1831,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 328,
																						"src": "37965:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "37950:28:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1840,
																				"nodeType": "IfStatement",
																				"src": "37946:239:2",
																				"trueBody": {
																					"id": 1839,
																					"nodeType": "Block",
																					"src": "37980:205:2",
																					"statements": [
																						{
																							"expression": {
																								"id": 1837,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1833,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 338,
																										"src": "38110:17:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1835,
																									"indexExpression": {
																										"id": 1834,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1820,
																										"src": "38128:11:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "38110:30:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1836,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1725,
																									"src": "38143:19:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "38110:52:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1838,
																							"nodeType": "ExpressionStatement",
																							"src": "38110:52:2"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1847,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1731,
															"src": "38251:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38265:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38257:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1848,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "38257:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38257:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1852,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "38269:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1846,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "38242:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38242:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1854,
												"nodeType": "EmitStatement",
												"src": "38237:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1856,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1731,
															"src": "38308:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38322:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38314:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1857,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "38314:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38314:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1861,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "38326:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38335:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1855,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "38287:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38287:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1864,
												"nodeType": "ExpressionStatement",
												"src": "38287:50:2"
											},
											{
												"id": 1868,
												"nodeType": "UncheckedBlock",
												"src": "38436:49:2",
												"statements": [
													{
														"expression": {
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "38460:14:2",
															"subExpression": {
																"id": 1865,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "38460:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1867,
														"nodeType": "ExpressionStatement",
														"src": "38460:14:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1717,
										"nodeType": "StructuredDocumentation",
										"src": "35256:206:2",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "35476:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35490:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "35482:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35482:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "35504:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "35499:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1720,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35499:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35481:37:2"
									},
									"returnParameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35536:0:2"
									},
									"scope": 1991,
									"src": "35467:3024:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1915,
										"nodeType": "Block",
										"src": "38849:456:2",
										"statements": [
											{
												"assignments": [
													1879
												],
												"declarations": [
													{
														"constant": false,
														"id": 1879,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "38867:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1915,
														"src": "38859:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1878,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38859:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1883,
												"initialValue": {
													"baseExpression": {
														"id": 1880,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "38876:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1882,
													"indexExpression": {
														"id": 1881,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1873,
														"src": "38894:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "38876:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38859:41:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1884,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1879,
														"src": "38914:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "38924:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "38914:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1892,
												"nodeType": "IfStatement",
												"src": "38910:70:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1888,
																	"name": "OwnershipNotInitializedForExtraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "38935:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "38971:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "38935:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1887,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "38927:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38927:53:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1891,
													"nodeType": "ExpressionStatement",
													"src": "38927:53:2"
												}
											},
											{
												"assignments": [
													1894
												],
												"declarations": [
													{
														"constant": false,
														"id": 1894,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "38998:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 1915,
														"src": "38990:23:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1893,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38990:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1895,
												"nodeType": "VariableDeclarationStatement",
												"src": "38990:23:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "39102:52:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "39116:28:2",
															"value": {
																"name": "extraData",
																"nodeType": "YulIdentifier",
																"src": "39135:9:2"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nodeType": "YulIdentifier",
																	"src": "39116:15:2"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1875,
														"isOffset": false,
														"isSlot": false,
														"src": "39135:9:2",
														"valueSize": 1
													},
													{
														"declaration": 1894,
														"isOffset": false,
														"isSlot": false,
														"src": "39116:15:2",
														"valueSize": 1
													}
												],
												"id": 1896,
												"nodeType": "InlineAssembly",
												"src": "39093:61:2"
											},
											{
												"expression": {
													"id": 1907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1897,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1879,
														"src": "39163:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1906,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1898,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1879,
																		"src": "39173:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 1899,
																		"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 312,
																		"src": "39182:30:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "39173:39:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1901,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "39172:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1902,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1894,
																		"src": "39217:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 1903,
																		"name": "_BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 304,
																		"src": "39236:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "39217:37:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1905,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "39216:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "39172:83:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39163:92:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1908,
												"nodeType": "ExpressionStatement",
												"src": "39163:92:2"
											},
											{
												"expression": {
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1909,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "39265:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1911,
														"indexExpression": {
															"id": 1910,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1873,
															"src": "39283:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "39265:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1912,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1879,
														"src": "39292:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "39265:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1914,
												"nodeType": "ExpressionStatement",
												"src": "39265:33:2"
											}
										]
									},
									"documentation": {
										"id": 1871,
										"nodeType": "StructuredDocumentation",
										"src": "38685:84:2",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 1916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "38783:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "38807:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "38799:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38799:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "38821:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "38814:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1874,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "38814:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38798:33:2"
									},
									"returnParameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38849:0:2"
									},
									"scope": 1991,
									"src": "38774:531:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1928,
										"nodeType": "Block",
										"src": "40006:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1917,
										"nodeType": "StructuredDocumentation",
										"src": "39311:549:2",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "39874:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "39902:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "39894:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39894:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39924:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "39916:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39916:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "39943:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "39936:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1922,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "39936:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39884:82:2"
									},
									"returnParameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "39998:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1925,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "39998:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39997:8:2"
									},
									"scope": 1991,
									"src": "39865:143:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1961,
										"nodeType": "Block",
										"src": "40294:164:2",
										"statements": [
											{
												"assignments": [
													1942
												],
												"declarations": [
													{
														"constant": false,
														"id": 1942,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "40311:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 1961,
														"src": "40304:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 1941,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "40304:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1949,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1945,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1936,
																"src": "40330:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 1946,
																"name": "_BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "40353:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "40330:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1944,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "40323:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 1943,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "40323:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40323:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40304:68:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1953,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1932,
																		"src": "40408:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1954,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1934,
																		"src": "40414:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1955,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1942,
																		"src": "40418:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 1952,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1929,
																	"src": "40397:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 1956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40397:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "40389:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1950,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "40389:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40389:40:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 1958,
														"name": "_BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "40433:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "40389:62:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1940,
												"id": 1960,
												"nodeType": "Return",
												"src": "40382:69:2"
											}
										]
									},
									"documentation": {
										"id": 1930,
										"nodeType": "StructuredDocumentation",
										"src": "40014:135:2",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 1962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "40163:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "40195:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "40187:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "40217:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "40209:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40209:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "40237:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "40229:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40229:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40177:85:2"
									},
									"returnParameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "40285:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40285:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40284:9:2"
									},
									"scope": 1991,
									"src": "40154:304:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1971,
										"nodeType": "Block",
										"src": "40896:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1968,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "40913:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "40917:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "40913:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1967,
												"id": 1970,
												"nodeType": "Return",
												"src": "40906:17:2"
											}
										]
									},
									"documentation": {
										"id": 1963,
										"nodeType": "StructuredDocumentation",
										"src": "40649:173:2",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 1972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "40836:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40853:2:2"
									},
									"returnParameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "40887:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40887:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40886:9:2"
									},
									"scope": 1991,
									"src": "40827:103:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1981,
										"nodeType": "Block",
										"src": "41111:1624:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "41130:1599:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "41494:31:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "41513:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "41507:5:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "41507:11:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41520:4:2",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "41503:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "41503:22:2"
															},
															"variables": [
																{
																	"name": "m",
																	"nodeType": "YulTypedName",
																	"src": "41498:1:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41604:4:2",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "41610:1:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "41597:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "41597:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "41597:15:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "41669:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "m",
																		"nodeType": "YulIdentifier",
																		"src": "41680:1:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41683:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "41676:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "41676:12:2"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "41669:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "41758:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "41763:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "41751:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "41751:14:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "41751:14:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "41853:14:2",
															"value": {
																"name": "str",
																"nodeType": "YulIdentifier",
																"src": "41864:3:2"
															},
															"variables": [
																{
																	"name": "end",
																	"nodeType": "YulTypedName",
																	"src": "41857:3:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "42111:388:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "42129:18:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "42140:3:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "42145:1:2",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "42136:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42136:11:2"
																		},
																		"variableNames": [
																			{
																				"name": "str",
																				"nodeType": "YulIdentifier",
																				"src": "42129:3:2"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "str",
																					"nodeType": "YulIdentifier",
																					"src": "42290:3:2"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "42299:2:2",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nodeType": "YulIdentifier",
																									"src": "42307:4:2"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "42313:2:2",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nodeType": "YulIdentifier",
																								"src": "42303:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "42303:13:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "42295:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "42295:22:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nodeType": "YulIdentifier",
																				"src": "42282:7:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42282:36:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "42282:36:2"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "42387:21:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "42399:4:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "42405:2:2",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "42395:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42395:13:2"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nodeType": "YulIdentifier",
																				"src": "42387:4:2"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "42476:9:2",
																			"statements": [
																				{
																					"nodeType": "YulBreak",
																					"src": "42478:5:2"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nodeType": "YulIdentifier",
																					"src": "42470:4:2"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "42463:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "42463:12:2"
																		},
																		"nodeType": "YulIf",
																		"src": "42460:25:2"
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "42106:1:2",
																"type": "",
																"value": "1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "42108:2:2",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "42084:21:2",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "42086:17:2",
																		"value": {
																			"name": "value",
																			"nodeType": "YulIdentifier",
																			"src": "42098:5:2"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nodeType": "YulTypedName",
																				"src": "42090:4:2",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "42080:419:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "42513:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "42531:3:2"
																	},
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "42536:3:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "42527:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "42527:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "42517:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "42633:21:2",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "42644:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "42649:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "42640:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "42640:14:2"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nodeType": "YulIdentifier",
																	"src": "42633:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nodeType": "YulIdentifier",
																		"src": "42707:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "42712:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "42700:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "42700:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "42700:19:2"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1978,
														"isOffset": false,
														"isSlot": false,
														"src": "41669:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1978,
														"isOffset": false,
														"isSlot": false,
														"src": "41758:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1978,
														"isOffset": false,
														"isSlot": false,
														"src": "41864:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1978,
														"isOffset": false,
														"isSlot": false,
														"src": "42129:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1978,
														"isOffset": false,
														"isSlot": false,
														"src": "42140:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1978,
														"isOffset": false,
														"isSlot": false,
														"src": "42290:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1978,
														"isOffset": false,
														"isSlot": false,
														"src": "42536:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1978,
														"isOffset": false,
														"isSlot": false,
														"src": "42633:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1978,
														"isOffset": false,
														"isSlot": false,
														"src": "42644:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1978,
														"isOffset": false,
														"isSlot": false,
														"src": "42707:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1975,
														"isOffset": false,
														"isSlot": false,
														"src": "42098:5:2",
														"valueSize": 1
													}
												],
												"id": 1980,
												"nodeType": "InlineAssembly",
												"src": "41121:1608:2"
											}
										]
									},
									"documentation": {
										"id": 1973,
										"nodeType": "StructuredDocumentation",
										"src": "40936:86:2",
										"text": " @dev Converts a uint256 to its ASCII string decimal representation."
									},
									"id": 1982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "41036:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "41054:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "41046:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41046:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41045:15:2"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "41106:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1982,
												"src": "41092:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1977,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "41092:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41091:19:2"
									},
									"scope": 1991,
									"src": "41027:1708:2",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1989,
										"nodeType": "Block",
										"src": "42850:107:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "42869:82:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "42890:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "errorSelector",
																		"nodeType": "YulIdentifier",
																		"src": "42896:13:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "42883:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "42883:27:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "42883:27:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "42930:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "42936:4:2",
																		"type": "",
																		"value": "0x04"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "42923:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "42923:18:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "42923:18:2"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1985,
														"isOffset": false,
														"isSlot": false,
														"src": "42896:13:2",
														"valueSize": 1
													}
												],
												"id": 1988,
												"nodeType": "InlineAssembly",
												"src": "42860:91:2"
											}
										]
									},
									"documentation": {
										"id": 1983,
										"nodeType": "StructuredDocumentation",
										"src": "42741:51:2",
										"text": " @dev For more efficient reverts."
									},
									"id": 1990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "42806:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "errorSelector",
												"nameLocation": "42821:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "42814:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1984,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "42814:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42813:22:2"
									},
									"returnParameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42850:0:2"
									},
									"scope": 1991,
									"src": "42797:160:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1992,
							"src": "895:42064:2",
							"usedErrors": [
								5,
								8,
								11,
								14,
								17,
								20,
								23,
								26,
								29,
								32,
								35,
								38,
								41
							]
						}
					],
					"src": "84:42875:2"
				},
				"id": 2
			}
		}
	}
}